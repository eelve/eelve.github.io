{"title":"Elastic Stack实战之Elasticsearch初体验(二)","slug":"Elastic-Stack实战之Elasticsearch初体验(二)","date":"2020-03-01T11:49:22.000Z","updated":"2021-04-19T06:52:48.642Z","comments":true,"path":"api/articles/Elastic-Stack实战之Elasticsearch初体验(二).json","excerpt":null,"covers":["https://image.eelve.com/eblog/2020010303-6acab887ee4441b488ee408c30359ab5.png","https://image.eelve.com/eblog/2020030106-e64fe73ddd004fb1bd87885b30563d48.png","https://image.eelve.com/eblog/2020030107-079a29b224d14779999957304c279291.png","https://image.eelve.com/eblog/2020030108-491386349bf145df999db01f96dca5b7.png","https://image.eelve.com/eblog/2020030110-0d0eae2e25ec4788b038d3066e0a34df.png","https://image.eelve.com/eblog/2020030111-8901ba31e0c841ea9f19b3b3fbf47745.png","https://image.eelve.com/eblog/2020030113-48589935a2ce456491006d43f0001194.png","https://image.eelve.com/eblog/2020030115-40f1443a848f42d7bf0b1e4a7895315b.png","https://image.eelve.com/eblog/2020030117-7f32be33ca2b4f2796884f595f31c118.png","https://image.eelve.com/eblog/2020030120-cf3c2d9526e94c559da3122114a23bea.png","https://image.eelve.com/eblog/2020030123-d35bcdb8e1a34c599da2c6af06b5999c.png","https://image.eelve.com/eblog/2020030124-6dd8f7b0b6f64d43b78f007096a0266e.png","https://image.eelve.com/eblog/2020030125-6496d651790a4eeaaf6ef01d89007434.png","https://image.eelve.com/eblog/2020030128-39b83bc7128041ada8913de3d60d7f94.png","https://image.eelve.com/eblog/2020030129-6cfe8b9d5e3e4eabb08e850336caa524.png","https://image.eelve.com/eblog/2020030126-fdc18d55a95b49608130225d3aa15d67.png","https://image.eelve.com/eblog/2020030127-dbc8906ff8e540c58e7cb598aabd35e9.png","https://image.eelve.com/eblog/2020030130-c69ed9ae775445ef90e13bfcf726efd5.png","https://image.eelve.com/eblog/2020030132-b483295fa7054414a91efcdfbdf689e0.png","https://image.eelve.com/eblog/2020030135-13028e1a58e64b82a3f4a8f1316160fb.png","https://image.eelve.com/eblog/2020030137-486103db9fab4f16bb639e9ee13c0961.png","https://image.eelve.com/eblog/2020030140-8a169a5294044d41bcfbc531ffa262fb.png","https://image.eelve.com/eblog/2020030141-6749ff764e8f46c6a4a2a1e356c129de.png","https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png"],"content":"<p>【<strong>前面的话</strong>】前面我们已经安装好了Elasticsearch，现在我们就来尝试简单的使用。</p>\n<hr>\n<h1 id=\"壹、Elasticsearch介绍\"><a href=\"#壹、Elasticsearch介绍\" class=\"headerlink\" title=\"壹、Elasticsearch介绍\"></a>壹、Elasticsearch介绍</h1><p><img src=\"https://image.eelve.com/eblog/2020010303-6acab887ee4441b488ee408c30359ab5.png\" alt=\"2020010303\"></p>\n<p>Elasticsearch是整个<strong>Elastic Stack</strong>的核心。</p>\n<p>Elasticsearch 是一个分布式、RESTful 风格的搜索和数据分析引擎，能够解决不断涌现出的各种用例。 作为 Elastic Stack 的核心，它集中存储您的数据，帮助您发现意料之中以及意料之外的情况。</p>\n<p>通过 Elasticsearch，您能够执行及合并多种类型的搜索（结构化数据、非结构化数据、地理位置、指标），搜索方式随心而变。先从一个简单的问题出发，试试看能够从中发现些什么。找到与查询最匹配的 10 个文档是一回事。但如果面对的是十亿行日志，又该如何解读呢？Elasticsearch 聚合让您能够从大处着眼，探索数据的趋势和模式。</p>\n<h1 id=\"贰、插件安装\"><a href=\"#贰、插件安装\" class=\"headerlink\" title=\"贰、插件安装\"></a>贰、插件安装</h1><p>由于ES官方并没有为ES提供界面管理工具，仅仅是提供了后台的服务。elasticsearch-head是一个为ES开发的一个页面客户端工具，其源码托管于GitHub，地址为：<br><a href=\"https://github.com/mobz/elasticsearch-head\">https://github.com/mobz/elasticsearch-head</a>。<br>安装方法也比较多：</p>\n<pre><code>1.源码安装，通过npm run start启动\n2.通过docker安装\n3.通过chrome插件安装\n4.通过ES的plugin方式安装\n</code></pre>\n<p>我这边就通过chrome插件的方式安装，在应用商店中搜索，然后安装即可，安装成功之后打开你会得到下面的页面</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030106-e64fe73ddd004fb1bd87885b30563d48.png\" alt=\"2020030106\"></p>\n<p>然后连接集群，就可以进行操作了</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030107-079a29b224d14779999957304c279291.png\" alt=\"2020030107\"></p>\n<pre><code>集群健康值\n1.绿色：代表集群所有分片和副本都可用\n2.黄色：代表集群中不是所有副本都可用，但是分片都可以用\n3.红色： 代表集群中不是所有分片都可用\n</code></pre>\n<p>另外我的集群中出现了<strong>Unassigned</strong>，是因为我搭建的是单机版，而Elasticsearch默认会创建1个副本。</p>\n<h1 id=\"叁、简单使用\"><a href=\"#叁、简单使用\" class=\"headerlink\" title=\"叁、简单使用\"></a>叁、简单使用</h1><h2 id=\"3-1-基本概念\"><a href=\"#3-1-基本概念\" class=\"headerlink\" title=\"3.1 基本概念\"></a>3.1 基本概念</h2><p><strong>索引</strong></p>\n<pre><code>索引（index）是Elasticsearch对逻辑数据的逻辑存储，所以它可以分为更小的部分。\n\n可以把索引看成关系型数据库的表，索引的结构是为快速有效的全文索引准备的，特别是它不存储原始值。\n\nElasticsearch可以把索引存放在一台机器或者分散在多台服务器上，每个索引有一或多个分片（shard），每个\n分片可以有多个副本（replica）。\n</code></pre>\n<p><strong>文档</strong></p>\n<pre><code>存储在Elasticsearch中的主要实体叫文档（document）。用关系型数据库来类比的话，一个文档相当于数据库\n表中的一行记录。\n\nElasticsearch和MongoDB中的文档类似，都可以有不同的结构，但Elasticsearch的文档中，相同字段必须有相\n同类型。\n\n文档由多个字段组成，每个字段可能多次出现在一个文档里，这样的字段叫多值字段（multivalued）。\n每个字段的类型，可以是文本、数值、日期等。字段类型也可以是复杂类型，一个字段包含其他子文档或者数\n组。\n</code></pre>\n<p><strong>映射</strong></p>\n<pre><code>所有文档写进索引之前都会先进行分析，如何将输入的文本分割为词条、哪些词条又会被过滤，这种行为叫做\n映射（mapping）。一般由用户自己定义规则。\n</code></pre>\n<p><strong>文档类型</strong></p>\n<pre><code>在Elasticsearch中，一个索引对象可以存储很多不同用途的对象。例如，一个博客应用程序可以保存文章和评\n论。\n\n每个文档可以有不同的结构。\n\n不同的文档类型不能为相同的属性设置不同的类型。例如，在同一索引中的所有文档类型中，一个叫title的字段\n必须具有相同的类型。\n</code></pre>\n<h2 id=\"3-2-RESTful-API\"><a href=\"#3-2-RESTful-API\" class=\"headerlink\" title=\"3.2 RESTful API\"></a>3.2 RESTful API</h2><pre><code>在Elasticsearch中，提供了功能丰富的RESTful API的操作，包括基本的CRUD、创建索引、删除索引等操作。\n</code></pre>\n<p>下面我就通过Postman来演示一遍</p>\n<h3 id=\"3-2-1-创建非结构化索引\"><a href=\"#3-2-1-创建非结构化索引\" class=\"headerlink\" title=\"3.2.1 创建非结构化索引\"></a>3.2.1 创建非结构化索引</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#创建索引</span><br><span class=\"line\">PUT &#x2F;eelve</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;settings&quot;: &#123;</span><br><span class=\"line\">        &quot;index&quot;: &#123;</span><br><span class=\"line\">        &quot;number_of_shards&quot;: &quot;2&quot;, #分片数</span><br><span class=\"line\">        &quot;number_of_replicas&quot;: &quot;0&quot; #副本数</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://image.eelve.com/eblog/2020030108-491386349bf145df999db01f96dca5b7.png\" alt=\"2020030108\"><br><img src=\"https://image.eelve.com/eblog/2020030109-e2e0dbf0610e4c9e815507b3e08824e6.png\" alt=\"2020030109\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#删除索引</span><br><span class=\"line\">DELETE &#x2F;eelve</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://image.eelve.com/eblog/2020030110-0d0eae2e25ec4788b038d3066e0a34df.png\" alt=\"2020030110\"></p>\n<h3 id=\"3-2-2-插入数据\"><a href=\"#3-2-2-插入数据\" class=\"headerlink\" title=\"3.2.2 插入数据\"></a>3.2.2 插入数据</h3><pre><code>URL规则：\nPOST /&#123;索引&#125;/&#123;类型&#125;/&#123;id&#125;\n</code></pre>\n<p>1、带id</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST &#x2F;eelve&#x2F;user&#x2F;1001</span><br><span class=\"line\">#数据</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t&quot;id&quot;:1001,</span><br><span class=\"line\">\t&quot;name&quot;:&quot;leo&quot;,</span><br><span class=\"line\">\t&quot;age&quot;:26,</span><br><span class=\"line\">\t&quot;sex&quot;:&quot;男&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://image.eelve.com/eblog/2020030111-8901ba31e0c841ea9f19b3b3fbf47745.png\" alt=\"2020030111\"><br><img src=\"https://image.eelve.com/eblog/2020030112-3b009a1840754659a01ff665fe545de8.png\" alt=\"2020030112\"></p>\n<p>2、不带id </p>\n<p><img src=\"https://image.eelve.com/eblog/2020030113-48589935a2ce456491006d43f0001194.png\" alt=\"2020030113\"><br><img src=\"https://image.eelve.com/eblog/2020030114-b2119fc6b17f46b998b9b1aed9be3481.png\" alt=\"2020030114\"></p>\n<h3 id=\"3-2-3-更新数据\"><a href=\"#3-2-3-更新数据\" class=\"headerlink\" title=\"3.2.3 更新数据\"></a>3.2.3 更新数据</h3><pre><code>在Elasticsearch中，文档数据是不为修改的，但是可以通过覆盖的方式进行更新。\n</code></pre>\n<p>1、全部修改</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030115-40f1443a848f42d7bf0b1e4a7895315b.png\" alt=\"2020030115\"><br><img src=\"https://image.eelve.com/eblog/2020030116-a6d802f5b1d040088d02bcd97ed58840.png\" alt=\"2020030116\"></p>\n<p>2、部分修改</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030117-7f32be33ca2b4f2796884f595f31c118.png\" alt=\"2020030117\"><br><img src=\"https://image.eelve.com/eblog/2020030118-69d2588cf500407c87744222d1b9f58a.png\" alt=\"2020030118\"></p>\n<p>可以看到局部更新成功</p>\n<h3 id=\"3-2-4-删除数据\"><a href=\"#3-2-4-删除数据\" class=\"headerlink\" title=\"3.2.4 删除数据\"></a>3.2.4 删除数据</h3><p><img src=\"https://image.eelve.com/eblog/2020030120-cf3c2d9526e94c559da3122114a23bea.png\" alt=\"2020030120\"><br><img src=\"https://image.eelve.com/eblog/2020030121-e5026bfd578247b585b0d1aa9f4f43e9.png\" alt=\"2020030121\"></p>\n<p>数据删除成功之后不会马上删除，只是会打上那个删除标识，Elasticsearch将会在你之后添加更多索引的时候才会在后台进行删除内容的清理。</p>\n<h3 id=\"3-2-5-搜索数据\"><a href=\"#3-2-5-搜索数据\" class=\"headerlink\" title=\"3.2.5 搜索数据\"></a>3.2.5 搜索数据</h3><p>1、根据id搜索</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030123-d35bcdb8e1a34c599da2c6af06b5999c.png\" alt=\"2020030123\"></p>\n<p>2、全部搜索</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030124-6dd8f7b0b6f64d43b78f007096a0266e.png\" alt=\"2020030124\"></p>\n<p>3、关键词搜索</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030125-6496d651790a4eeaaf6ef01d89007434.png\" alt=\"2020030125\"></p>\n<p>4、查询部分字段</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030128-39b83bc7128041ada8913de3d60d7f94.png\" alt=\"2020030128\"></p>\n<p>5、分页查询</p>\n<pre><code>和SQL使用 LIMIT 关键字返回只有一页的结果一样，Elasticsearch接受 from 和 size 参数：\n\nsize: 结果数，默认10\nfrom: 跳过开始的结果数，默认0\n</code></pre>\n<p><img src=\"https://image.eelve.com/eblog/2020030129-6cfe8b9d5e3e4eabb08e850336caa524.png\" alt=\"2020030129\"></p>\n<pre><code>应该当心分页太深或者一次请求太多的结果。结果在返回前会被排序。但是记住一个搜索请求常常涉及多个分片。每个分片生成自己排好序的结果，它们接着需要集中起来排序以确保整体排序正确。\n\n在集群系统中深度分页\n为了理解为什么深度分页是有问题的，让我们假设在一个有5个主分片的索引中搜索。当我们请求结果的第一页（结果1到10）时，每个分片产生自己最顶端10个结果然后返回它们给请求节点(requesting node)，\n它再排序这所有的50个结果以选出顶端的10个结果。现在假设我们请求第1000页——结果10001到10010。工作方式都相同，不同的是每个分片都必须产生顶端的10010个结果。\n然后请求节点排序这50050个结果并丢弃50040个！可以看到在分布式系统中，排序结果的花费随着分页的深入而成倍增长。这也是为什么网络搜索引擎中任何语句不能返回多于1000个结果的原因。\n</code></pre>\n<h3 id=\"3-2-6-DSL搜索\"><a href=\"#3-2-6-DSL搜索\" class=\"headerlink\" title=\"3.2.6 DSL搜索\"></a>3.2.6 DSL搜索</h3><pre><code>Elasticsearch提供丰富且灵活的查询语言叫做DSL查询(Query DSL),它允许你构建更加复杂、强大的查询。\nDSL(Domain Specific Language特定领域语言)以JSON请求体的形式出现\n</code></pre>\n<p><img src=\"https://image.eelve.com/eblog/2020030126-fdc18d55a95b49608130225d3aa15d67.png\" alt=\"2020030126\"></p>\n<p>如图我们查询了一个年龄大于10岁，性别为男性的数据</p>\n<h3 id=\"3-2-7-聚合\"><a href=\"#3-2-7-聚合\" class=\"headerlink\" title=\"3.2.7 聚合\"></a>3.2.7 聚合</h3><pre><code>在Elasticsearch中，支持聚合操作，类似SQL中的group by操作。\n</code></pre>\n<p><img src=\"https://image.eelve.com/eblog/2020030127-dbc8906ff8e540c58e7cb598aabd35e9.png\" alt=\"2020030127\"></p>\n<h3 id=\"3-2-8-bulk操作\"><a href=\"#3-2-8-bulk操作\" class=\"headerlink\" title=\"3.2.8 _bulk操作\"></a>3.2.8 _bulk操作</h3><pre><code>在Elasticsearch中，支持批量的插入、修改、删除操作，都是通过_bulk的api完成的。\n</code></pre>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; action: &#123; metadata &#125;&#125;\\n</span><br><span class=\"line\">&#123; request body &#125;\\n</span><br><span class=\"line\">&#123; action: &#123; metadata &#125;&#125;\\n</span><br><span class=\"line\">&#123; request body &#125;\\n</span><br><span class=\"line\">...</span><br><span class=\"line\"># 注意每行最后必须有 \\n</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>1、批量插入</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030130-c69ed9ae775445ef90e13bfcf726efd5.png\" alt=\"2020030130\"><br><img src=\"https://image.eelve.com/eblog/2020030131-d32f2761eb464fb085b671a34b08ac0d.png\" alt=\"2020030131\"></p>\n<p>2、批量删除</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030132-b483295fa7054414a91efcdfbdf689e0.png\" alt=\"2020030132\"><br><img src=\"https://image.eelve.com/eblog/2020030134-3433028e01d941e38d143f0f4f2a7bea.png\" alt=\"2020030134\"></p>\n<p>3、批量删除</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030135-13028e1a58e64b82a3f4a8f1316160fb.png\" alt=\"2020030135\"><br><img src=\"https://image.eelve.com/eblog/2020030136-deeff4eb87f143ee95b33468a59a7883.png\" alt=\"2020030136\"></p>\n<p>4、混合操作</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030137-486103db9fab4f16bb639e9ee13c0961.png\" alt=\"2020030137\"><br><img src=\"https://image.eelve.com/eblog/2020030138-dc89cd6f155c48b1a917072b6805c15e.png\" alt=\"2020030138\"></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;took&quot;</span>: <span class=\"number\">5</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;errors&quot;</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;items&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;update&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;_index&quot;</span>: <span class=\"string\">&quot;eelve&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_type&quot;</span>: <span class=\"string\">&quot;user&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_id&quot;</span>: <span class=\"string\">&quot;2002&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_version&quot;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;result&quot;</span>: <span class=\"string\">&quot;updated&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_shards&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;total&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                    <span class=\"attr\">&quot;successful&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                    <span class=\"attr\">&quot;failed&quot;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_seq_no&quot;</span>: <span class=\"number\">7</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_primary_term&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;status&quot;</span>: <span class=\"number\">200</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;delete&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;_index&quot;</span>: <span class=\"string\">&quot;eelve&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_type&quot;</span>: <span class=\"string\">&quot;user&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_id&quot;</span>: <span class=\"string\">&quot;2003&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_version&quot;</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;result&quot;</span>: <span class=\"string\">&quot;deleted&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_shards&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;total&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                    <span class=\"attr\">&quot;successful&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                    <span class=\"attr\">&quot;failed&quot;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_seq_no&quot;</span>: <span class=\"number\">8</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_primary_term&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;status&quot;</span>: <span class=\"number\">200</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre><code>整个批量请求需要被加载到接受我们请求节点的内存里，所以请求越大，给其它请求可用的内存就越小。有一个最佳的bulk请求大小。\n超过这个大小，性能不再提升而且可能降低。\n\n最佳大小，当然并不是一个固定的数字。它完全取决于你的硬件、你文档的大小和复杂度以及索引和搜索的负载。\n幸运的是，这个最佳点(sweetspot)还是容易找到的：试着批量索引标准的文档，随着大小的增长，当性能开始降低，\n说明你每个批次的大小太大了。开始的数量可以在1000~5000个文档之间，如果你的文档非常大，可以使用较小的批次。\n通常着眼于你请求批次的物理大小是非常有用的。一千个1kB的文档和一千个1MB的文档大不相同。一个好的批次最好保持在5-15MB大小间。\n</code></pre>\n<h3 id=\"3-2-9-字段映射\"><a href=\"#3-2-9-字段映射\" class=\"headerlink\" title=\"3.2.9 字段映射\"></a>3.2.9 字段映射</h3><p>前面我们创建的索引以及插入数据，都是由Elasticsearch进行自动判断类型，有些时候我们是需要进行明确字段类型的，否则，自动判断的类型和实际需求是不相符的。</p>\n<p>自动判断的规则如下：</p>\n<table>\n<thead>\n<tr>\n<th>SON type</th>\n<th>Field type</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Boolean:</td>\n<td>true or false “boolean”</td>\n</tr>\n<tr>\n<td>Whole number:</td>\n<td>123 “long”</td>\n</tr>\n<tr>\n<td>Floating point:</td>\n<td>123.45 “double”</td>\n</tr>\n<tr>\n<td>String, valid date:</td>\n<td>“2014-09-15” “date”</td>\n</tr>\n<tr>\n<td>String:</td>\n<td>“foo bar” “string”</td>\n</tr>\n</tbody></table>\n<p>Elasticsearch中支持的类型如下：</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>表示的数据类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>String</td>\n<td>string , text , keyword</td>\n</tr>\n<tr>\n<td>Whole number:</td>\n<td>byte , short , integer , long</td>\n</tr>\n<tr>\n<td>Floating point:</td>\n<td>float , double</td>\n</tr>\n<tr>\n<td>Boolean</td>\n<td>boolean</td>\n</tr>\n<tr>\n<td>Date</td>\n<td>date</td>\n</tr>\n</tbody></table>\n<pre><code>string类型在ElasticSearch 旧版本中使用较多，从ElasticSearch 5.x开始不再支持string，由text和keyword类型替代。\n\ntext 类型，当一个字段是要被全文搜索的，比如Email内容、产品描述，应该使用text类型。设置text类型以后，字段内容会被分析，\n在生成倒排索引以前，字符串会被分析器分成一个一个词项。text类型的字段不用于排序，很少用于聚合。\n\nkeyword类型适用于索引结构化的字段，比如email地址、主机名、状态码和标签。如果字段需要进行过滤(比如查找已发布博客中status属性为published的文章)、排序、聚合。\nkeyword类型的字段只能通过精确值搜索到。\n</code></pre>\n<p><img src=\"https://image.eelve.com/eblog/2020030140-8a169a5294044d41bcfbc531ffa262fb.png\" alt=\"2020030140\"></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;settings&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;index&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;number_of_shards&quot;</span>: <span class=\"string\">&quot;2&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;number_of_replicas&quot;</span>: <span class=\"string\">&quot;0&quot;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;mappings&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;properties&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;name&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;age&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;integer&quot;</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;mail&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;keyword&quot;</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;hobby&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://image.eelve.com/eblog/2020030141-6749ff764e8f46c6a4a2a1e356c129de.png\" alt=\"2020030141\"></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;iio&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;aliases&quot;</span>: &#123;&#125;,</span><br><span class=\"line\">        <span class=\"attr\">&quot;mappings&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;properties&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;age&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;integer&quot;</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">&quot;hobby&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">&quot;mail&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;keyword&quot;</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">&quot;name&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">&quot;settings&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;index&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;creation_date&quot;</span>: <span class=\"string\">&quot;1583052049836&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;number_of_shards&quot;</span>: <span class=\"string\">&quot;2&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;number_of_replicas&quot;</span>: <span class=\"string\">&quot;0&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;uuid&quot;</span>: <span class=\"string\">&quot;CFfnz0C0SnSkgceUONQNEA&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;version&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;created&quot;</span>: <span class=\"string\">&quot;7060099&quot;</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">&quot;provided_name&quot;</span>: <span class=\"string\">&quot;iio&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意的是7.x的版本我6.x的版本创建索引不一样，6.x还需要在properties外面用类型包裹，下面给一个示例</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;settings&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;index&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;number_of_shards&quot;</span>: <span class=\"string\">&quot;2&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;number_of_replicas&quot;</span>: <span class=\"string\">&quot;0&quot;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;mappings&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;person&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;properties&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;name&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;age&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;integer&quot;</span></span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;mail&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;keyword&quot;</span></span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;hobby&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"肆、注意事项\"><a href=\"#肆、注意事项\" class=\"headerlink\" title=\"肆、注意事项\"></a>肆、注意事项</h1><p>注意版本差异，具体关注官方。我这边所演示的整个Elastic stack家族的版本都为7.6.0。另外批量操作的时候，如果有其中某一条执行失败的话，并不会影响其他执行正确的结果。</p>\n<hr>\n<p>【<strong>后面的话</strong>】记住Elasticsearch是整个<strong>Elastic Stack</strong>的核心。具有查询分析、高速度、可扩展性、相关度和弹性，后面我们还会具体实践。另外关于Elasticsearch的还有组合搜索，权重，分词等等还没有实践，等后面实践之后文章会继续更新，可能会写一篇关于Elasticsearch深度使用的文章。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","more":"<p>【<strong>前面的话</strong>】前面我们已经安装好了Elasticsearch，现在我们就来尝试简单的使用。</p>\n<hr>\n<h1 id=\"壹、Elasticsearch介绍\"><a href=\"#壹、Elasticsearch介绍\" class=\"headerlink\" title=\"壹、Elasticsearch介绍\"></a>壹、Elasticsearch介绍</h1><p><img src=\"https://image.eelve.com/eblog/2020010303-6acab887ee4441b488ee408c30359ab5.png\" alt=\"2020010303\"></p>\n<p>Elasticsearch是整个<strong>Elastic Stack</strong>的核心。</p>\n<p>Elasticsearch 是一个分布式、RESTful 风格的搜索和数据分析引擎，能够解决不断涌现出的各种用例。 作为 Elastic Stack 的核心，它集中存储您的数据，帮助您发现意料之中以及意料之外的情况。</p>\n<p>通过 Elasticsearch，您能够执行及合并多种类型的搜索（结构化数据、非结构化数据、地理位置、指标），搜索方式随心而变。先从一个简单的问题出发，试试看能够从中发现些什么。找到与查询最匹配的 10 个文档是一回事。但如果面对的是十亿行日志，又该如何解读呢？Elasticsearch 聚合让您能够从大处着眼，探索数据的趋势和模式。</p>\n<h1 id=\"贰、插件安装\"><a href=\"#贰、插件安装\" class=\"headerlink\" title=\"贰、插件安装\"></a>贰、插件安装</h1><p>由于ES官方并没有为ES提供界面管理工具，仅仅是提供了后台的服务。elasticsearch-head是一个为ES开发的一个页面客户端工具，其源码托管于GitHub，地址为：<br><a href=\"https://github.com/mobz/elasticsearch-head\">https://github.com/mobz/elasticsearch-head</a>。<br>安装方法也比较多：</p>\n<pre><code>1.源码安装，通过npm run start启动\n2.通过docker安装\n3.通过chrome插件安装\n4.通过ES的plugin方式安装\n</code></pre>\n<p>我这边就通过chrome插件的方式安装，在应用商店中搜索，然后安装即可，安装成功之后打开你会得到下面的页面</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030106-e64fe73ddd004fb1bd87885b30563d48.png\" alt=\"2020030106\"></p>\n<p>然后连接集群，就可以进行操作了</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030107-079a29b224d14779999957304c279291.png\" alt=\"2020030107\"></p>\n<pre><code>集群健康值\n1.绿色：代表集群所有分片和副本都可用\n2.黄色：代表集群中不是所有副本都可用，但是分片都可以用\n3.红色： 代表集群中不是所有分片都可用\n</code></pre>\n<p>另外我的集群中出现了<strong>Unassigned</strong>，是因为我搭建的是单机版，而Elasticsearch默认会创建1个副本。</p>\n<h1 id=\"叁、简单使用\"><a href=\"#叁、简单使用\" class=\"headerlink\" title=\"叁、简单使用\"></a>叁、简单使用</h1><h2 id=\"3-1-基本概念\"><a href=\"#3-1-基本概念\" class=\"headerlink\" title=\"3.1 基本概念\"></a>3.1 基本概念</h2><p><strong>索引</strong></p>\n<pre><code>索引（index）是Elasticsearch对逻辑数据的逻辑存储，所以它可以分为更小的部分。\n\n可以把索引看成关系型数据库的表，索引的结构是为快速有效的全文索引准备的，特别是它不存储原始值。\n\nElasticsearch可以把索引存放在一台机器或者分散在多台服务器上，每个索引有一或多个分片（shard），每个\n分片可以有多个副本（replica）。\n</code></pre>\n<p><strong>文档</strong></p>\n<pre><code>存储在Elasticsearch中的主要实体叫文档（document）。用关系型数据库来类比的话，一个文档相当于数据库\n表中的一行记录。\n\nElasticsearch和MongoDB中的文档类似，都可以有不同的结构，但Elasticsearch的文档中，相同字段必须有相\n同类型。\n\n文档由多个字段组成，每个字段可能多次出现在一个文档里，这样的字段叫多值字段（multivalued）。\n每个字段的类型，可以是文本、数值、日期等。字段类型也可以是复杂类型，一个字段包含其他子文档或者数\n组。\n</code></pre>\n<p><strong>映射</strong></p>\n<pre><code>所有文档写进索引之前都会先进行分析，如何将输入的文本分割为词条、哪些词条又会被过滤，这种行为叫做\n映射（mapping）。一般由用户自己定义规则。\n</code></pre>\n<p><strong>文档类型</strong></p>\n<pre><code>在Elasticsearch中，一个索引对象可以存储很多不同用途的对象。例如，一个博客应用程序可以保存文章和评\n论。\n\n每个文档可以有不同的结构。\n\n不同的文档类型不能为相同的属性设置不同的类型。例如，在同一索引中的所有文档类型中，一个叫title的字段\n必须具有相同的类型。\n</code></pre>\n<h2 id=\"3-2-RESTful-API\"><a href=\"#3-2-RESTful-API\" class=\"headerlink\" title=\"3.2 RESTful API\"></a>3.2 RESTful API</h2><pre><code>在Elasticsearch中，提供了功能丰富的RESTful API的操作，包括基本的CRUD、创建索引、删除索引等操作。\n</code></pre>\n<p>下面我就通过Postman来演示一遍</p>\n<h3 id=\"3-2-1-创建非结构化索引\"><a href=\"#3-2-1-创建非结构化索引\" class=\"headerlink\" title=\"3.2.1 创建非结构化索引\"></a>3.2.1 创建非结构化索引</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#创建索引</span><br><span class=\"line\">PUT &#x2F;eelve</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;settings&quot;: &#123;</span><br><span class=\"line\">        &quot;index&quot;: &#123;</span><br><span class=\"line\">        &quot;number_of_shards&quot;: &quot;2&quot;, #分片数</span><br><span class=\"line\">        &quot;number_of_replicas&quot;: &quot;0&quot; #副本数</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://image.eelve.com/eblog/2020030108-491386349bf145df999db01f96dca5b7.png\" alt=\"2020030108\"><br><img src=\"https://image.eelve.com/eblog/2020030109-e2e0dbf0610e4c9e815507b3e08824e6.png\" alt=\"2020030109\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#删除索引</span><br><span class=\"line\">DELETE &#x2F;eelve</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://image.eelve.com/eblog/2020030110-0d0eae2e25ec4788b038d3066e0a34df.png\" alt=\"2020030110\"></p>\n<h3 id=\"3-2-2-插入数据\"><a href=\"#3-2-2-插入数据\" class=\"headerlink\" title=\"3.2.2 插入数据\"></a>3.2.2 插入数据</h3><pre><code>URL规则：\nPOST /&#123;索引&#125;/&#123;类型&#125;/&#123;id&#125;\n</code></pre>\n<p>1、带id</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST &#x2F;eelve&#x2F;user&#x2F;1001</span><br><span class=\"line\">#数据</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t&quot;id&quot;:1001,</span><br><span class=\"line\">\t&quot;name&quot;:&quot;leo&quot;,</span><br><span class=\"line\">\t&quot;age&quot;:26,</span><br><span class=\"line\">\t&quot;sex&quot;:&quot;男&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://image.eelve.com/eblog/2020030111-8901ba31e0c841ea9f19b3b3fbf47745.png\" alt=\"2020030111\"><br><img src=\"https://image.eelve.com/eblog/2020030112-3b009a1840754659a01ff665fe545de8.png\" alt=\"2020030112\"></p>\n<p>2、不带id </p>\n<p><img src=\"https://image.eelve.com/eblog/2020030113-48589935a2ce456491006d43f0001194.png\" alt=\"2020030113\"><br><img src=\"https://image.eelve.com/eblog/2020030114-b2119fc6b17f46b998b9b1aed9be3481.png\" alt=\"2020030114\"></p>\n<h3 id=\"3-2-3-更新数据\"><a href=\"#3-2-3-更新数据\" class=\"headerlink\" title=\"3.2.3 更新数据\"></a>3.2.3 更新数据</h3><pre><code>在Elasticsearch中，文档数据是不为修改的，但是可以通过覆盖的方式进行更新。\n</code></pre>\n<p>1、全部修改</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030115-40f1443a848f42d7bf0b1e4a7895315b.png\" alt=\"2020030115\"><br><img src=\"https://image.eelve.com/eblog/2020030116-a6d802f5b1d040088d02bcd97ed58840.png\" alt=\"2020030116\"></p>\n<p>2、部分修改</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030117-7f32be33ca2b4f2796884f595f31c118.png\" alt=\"2020030117\"><br><img src=\"https://image.eelve.com/eblog/2020030118-69d2588cf500407c87744222d1b9f58a.png\" alt=\"2020030118\"></p>\n<p>可以看到局部更新成功</p>\n<h3 id=\"3-2-4-删除数据\"><a href=\"#3-2-4-删除数据\" class=\"headerlink\" title=\"3.2.4 删除数据\"></a>3.2.4 删除数据</h3><p><img src=\"https://image.eelve.com/eblog/2020030120-cf3c2d9526e94c559da3122114a23bea.png\" alt=\"2020030120\"><br><img src=\"https://image.eelve.com/eblog/2020030121-e5026bfd578247b585b0d1aa9f4f43e9.png\" alt=\"2020030121\"></p>\n<p>数据删除成功之后不会马上删除，只是会打上那个删除标识，Elasticsearch将会在你之后添加更多索引的时候才会在后台进行删除内容的清理。</p>\n<h3 id=\"3-2-5-搜索数据\"><a href=\"#3-2-5-搜索数据\" class=\"headerlink\" title=\"3.2.5 搜索数据\"></a>3.2.5 搜索数据</h3><p>1、根据id搜索</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030123-d35bcdb8e1a34c599da2c6af06b5999c.png\" alt=\"2020030123\"></p>\n<p>2、全部搜索</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030124-6dd8f7b0b6f64d43b78f007096a0266e.png\" alt=\"2020030124\"></p>\n<p>3、关键词搜索</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030125-6496d651790a4eeaaf6ef01d89007434.png\" alt=\"2020030125\"></p>\n<p>4、查询部分字段</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030128-39b83bc7128041ada8913de3d60d7f94.png\" alt=\"2020030128\"></p>\n<p>5、分页查询</p>\n<pre><code>和SQL使用 LIMIT 关键字返回只有一页的结果一样，Elasticsearch接受 from 和 size 参数：\n\nsize: 结果数，默认10\nfrom: 跳过开始的结果数，默认0\n</code></pre>\n<p><img src=\"https://image.eelve.com/eblog/2020030129-6cfe8b9d5e3e4eabb08e850336caa524.png\" alt=\"2020030129\"></p>\n<pre><code>应该当心分页太深或者一次请求太多的结果。结果在返回前会被排序。但是记住一个搜索请求常常涉及多个分片。每个分片生成自己排好序的结果，它们接着需要集中起来排序以确保整体排序正确。\n\n在集群系统中深度分页\n为了理解为什么深度分页是有问题的，让我们假设在一个有5个主分片的索引中搜索。当我们请求结果的第一页（结果1到10）时，每个分片产生自己最顶端10个结果然后返回它们给请求节点(requesting node)，\n它再排序这所有的50个结果以选出顶端的10个结果。现在假设我们请求第1000页——结果10001到10010。工作方式都相同，不同的是每个分片都必须产生顶端的10010个结果。\n然后请求节点排序这50050个结果并丢弃50040个！可以看到在分布式系统中，排序结果的花费随着分页的深入而成倍增长。这也是为什么网络搜索引擎中任何语句不能返回多于1000个结果的原因。\n</code></pre>\n<h3 id=\"3-2-6-DSL搜索\"><a href=\"#3-2-6-DSL搜索\" class=\"headerlink\" title=\"3.2.6 DSL搜索\"></a>3.2.6 DSL搜索</h3><pre><code>Elasticsearch提供丰富且灵活的查询语言叫做DSL查询(Query DSL),它允许你构建更加复杂、强大的查询。\nDSL(Domain Specific Language特定领域语言)以JSON请求体的形式出现\n</code></pre>\n<p><img src=\"https://image.eelve.com/eblog/2020030126-fdc18d55a95b49608130225d3aa15d67.png\" alt=\"2020030126\"></p>\n<p>如图我们查询了一个年龄大于10岁，性别为男性的数据</p>\n<h3 id=\"3-2-7-聚合\"><a href=\"#3-2-7-聚合\" class=\"headerlink\" title=\"3.2.7 聚合\"></a>3.2.7 聚合</h3><pre><code>在Elasticsearch中，支持聚合操作，类似SQL中的group by操作。\n</code></pre>\n<p><img src=\"https://image.eelve.com/eblog/2020030127-dbc8906ff8e540c58e7cb598aabd35e9.png\" alt=\"2020030127\"></p>\n<h3 id=\"3-2-8-bulk操作\"><a href=\"#3-2-8-bulk操作\" class=\"headerlink\" title=\"3.2.8 _bulk操作\"></a>3.2.8 _bulk操作</h3><pre><code>在Elasticsearch中，支持批量的插入、修改、删除操作，都是通过_bulk的api完成的。\n</code></pre>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; action: &#123; metadata &#125;&#125;\\n</span><br><span class=\"line\">&#123; request body &#125;\\n</span><br><span class=\"line\">&#123; action: &#123; metadata &#125;&#125;\\n</span><br><span class=\"line\">&#123; request body &#125;\\n</span><br><span class=\"line\">...</span><br><span class=\"line\"># 注意每行最后必须有 \\n</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>1、批量插入</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030130-c69ed9ae775445ef90e13bfcf726efd5.png\" alt=\"2020030130\"><br><img src=\"https://image.eelve.com/eblog/2020030131-d32f2761eb464fb085b671a34b08ac0d.png\" alt=\"2020030131\"></p>\n<p>2、批量删除</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030132-b483295fa7054414a91efcdfbdf689e0.png\" alt=\"2020030132\"><br><img src=\"https://image.eelve.com/eblog/2020030134-3433028e01d941e38d143f0f4f2a7bea.png\" alt=\"2020030134\"></p>\n<p>3、批量删除</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030135-13028e1a58e64b82a3f4a8f1316160fb.png\" alt=\"2020030135\"><br><img src=\"https://image.eelve.com/eblog/2020030136-deeff4eb87f143ee95b33468a59a7883.png\" alt=\"2020030136\"></p>\n<p>4、混合操作</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030137-486103db9fab4f16bb639e9ee13c0961.png\" alt=\"2020030137\"><br><img src=\"https://image.eelve.com/eblog/2020030138-dc89cd6f155c48b1a917072b6805c15e.png\" alt=\"2020030138\"></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;took&quot;</span>: <span class=\"number\">5</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;errors&quot;</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;items&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;update&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;_index&quot;</span>: <span class=\"string\">&quot;eelve&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_type&quot;</span>: <span class=\"string\">&quot;user&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_id&quot;</span>: <span class=\"string\">&quot;2002&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_version&quot;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;result&quot;</span>: <span class=\"string\">&quot;updated&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_shards&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;total&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                    <span class=\"attr\">&quot;successful&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                    <span class=\"attr\">&quot;failed&quot;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_seq_no&quot;</span>: <span class=\"number\">7</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_primary_term&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;status&quot;</span>: <span class=\"number\">200</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;delete&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;_index&quot;</span>: <span class=\"string\">&quot;eelve&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_type&quot;</span>: <span class=\"string\">&quot;user&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_id&quot;</span>: <span class=\"string\">&quot;2003&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_version&quot;</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;result&quot;</span>: <span class=\"string\">&quot;deleted&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_shards&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;total&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                    <span class=\"attr\">&quot;successful&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                    <span class=\"attr\">&quot;failed&quot;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_seq_no&quot;</span>: <span class=\"number\">8</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_primary_term&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;status&quot;</span>: <span class=\"number\">200</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre><code>整个批量请求需要被加载到接受我们请求节点的内存里，所以请求越大，给其它请求可用的内存就越小。有一个最佳的bulk请求大小。\n超过这个大小，性能不再提升而且可能降低。\n\n最佳大小，当然并不是一个固定的数字。它完全取决于你的硬件、你文档的大小和复杂度以及索引和搜索的负载。\n幸运的是，这个最佳点(sweetspot)还是容易找到的：试着批量索引标准的文档，随着大小的增长，当性能开始降低，\n说明你每个批次的大小太大了。开始的数量可以在1000~5000个文档之间，如果你的文档非常大，可以使用较小的批次。\n通常着眼于你请求批次的物理大小是非常有用的。一千个1kB的文档和一千个1MB的文档大不相同。一个好的批次最好保持在5-15MB大小间。\n</code></pre>\n<h3 id=\"3-2-9-字段映射\"><a href=\"#3-2-9-字段映射\" class=\"headerlink\" title=\"3.2.9 字段映射\"></a>3.2.9 字段映射</h3><p>前面我们创建的索引以及插入数据，都是由Elasticsearch进行自动判断类型，有些时候我们是需要进行明确字段类型的，否则，自动判断的类型和实际需求是不相符的。</p>\n<p>自动判断的规则如下：</p>\n<table>\n<thead>\n<tr>\n<th>SON type</th>\n<th>Field type</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Boolean:</td>\n<td>true or false “boolean”</td>\n</tr>\n<tr>\n<td>Whole number:</td>\n<td>123 “long”</td>\n</tr>\n<tr>\n<td>Floating point:</td>\n<td>123.45 “double”</td>\n</tr>\n<tr>\n<td>String, valid date:</td>\n<td>“2014-09-15” “date”</td>\n</tr>\n<tr>\n<td>String:</td>\n<td>“foo bar” “string”</td>\n</tr>\n</tbody></table>\n<p>Elasticsearch中支持的类型如下：</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>表示的数据类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>String</td>\n<td>string , text , keyword</td>\n</tr>\n<tr>\n<td>Whole number:</td>\n<td>byte , short , integer , long</td>\n</tr>\n<tr>\n<td>Floating point:</td>\n<td>float , double</td>\n</tr>\n<tr>\n<td>Boolean</td>\n<td>boolean</td>\n</tr>\n<tr>\n<td>Date</td>\n<td>date</td>\n</tr>\n</tbody></table>\n<pre><code>string类型在ElasticSearch 旧版本中使用较多，从ElasticSearch 5.x开始不再支持string，由text和keyword类型替代。\n\ntext 类型，当一个字段是要被全文搜索的，比如Email内容、产品描述，应该使用text类型。设置text类型以后，字段内容会被分析，\n在生成倒排索引以前，字符串会被分析器分成一个一个词项。text类型的字段不用于排序，很少用于聚合。\n\nkeyword类型适用于索引结构化的字段，比如email地址、主机名、状态码和标签。如果字段需要进行过滤(比如查找已发布博客中status属性为published的文章)、排序、聚合。\nkeyword类型的字段只能通过精确值搜索到。\n</code></pre>\n<p><img src=\"https://image.eelve.com/eblog/2020030140-8a169a5294044d41bcfbc531ffa262fb.png\" alt=\"2020030140\"></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;settings&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;index&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;number_of_shards&quot;</span>: <span class=\"string\">&quot;2&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;number_of_replicas&quot;</span>: <span class=\"string\">&quot;0&quot;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;mappings&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;properties&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;name&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;age&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;integer&quot;</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;mail&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;keyword&quot;</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;hobby&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://image.eelve.com/eblog/2020030141-6749ff764e8f46c6a4a2a1e356c129de.png\" alt=\"2020030141\"></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;iio&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;aliases&quot;</span>: &#123;&#125;,</span><br><span class=\"line\">        <span class=\"attr\">&quot;mappings&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;properties&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;age&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;integer&quot;</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">&quot;hobby&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">&quot;mail&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;keyword&quot;</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">&quot;name&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">&quot;settings&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;index&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;creation_date&quot;</span>: <span class=\"string\">&quot;1583052049836&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;number_of_shards&quot;</span>: <span class=\"string\">&quot;2&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;number_of_replicas&quot;</span>: <span class=\"string\">&quot;0&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;uuid&quot;</span>: <span class=\"string\">&quot;CFfnz0C0SnSkgceUONQNEA&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;version&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;created&quot;</span>: <span class=\"string\">&quot;7060099&quot;</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">&quot;provided_name&quot;</span>: <span class=\"string\">&quot;iio&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意的是7.x的版本我6.x的版本创建索引不一样，6.x还需要在properties外面用类型包裹，下面给一个示例</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;settings&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;index&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;number_of_shards&quot;</span>: <span class=\"string\">&quot;2&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;number_of_replicas&quot;</span>: <span class=\"string\">&quot;0&quot;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;mappings&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;person&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;properties&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;name&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;age&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;integer&quot;</span></span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;mail&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;keyword&quot;</span></span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;hobby&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"肆、注意事项\"><a href=\"#肆、注意事项\" class=\"headerlink\" title=\"肆、注意事项\"></a>肆、注意事项</h1><p>注意版本差异，具体关注官方。我这边所演示的整个Elastic stack家族的版本都为7.6.0。另外批量操作的时候，如果有其中某一条执行失败的话，并不会影响其他执行正确的结果。</p>\n<hr>\n<p>【<strong>后面的话</strong>】记住Elasticsearch是整个<strong>Elastic Stack</strong>的核心。具有查询分析、高速度、可扩展性、相关度和弹性，后面我们还会具体实践。另外关于Elasticsearch的还有组合搜索，权重，分词等等还没有实践，等后面实践之后文章会继续更新，可能会写一篇关于Elasticsearch深度使用的文章。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","categories":[{"name":"Elastic Stack","path":"api/categories/Elastic Stack.json"}],"tags":[{"name":"ELK","path":"api/tags/ELK.json"},{"name":"Elasticsearch","path":"api/tags/Elasticsearch.json"}]}