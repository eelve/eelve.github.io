{"title":"Sentinel进阶之来源访问控制","slug":"Sentinel进阶之来源访问控制","date":"2021-10-03T04:08:36.000Z","updated":"2021-10-03T04:35:43.971Z","comments":true,"path":"api/articles/Sentinel进阶之来源访问控制.json","excerpt":null,"covers":["https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png"],"content":"<p>【<strong>前面的话</strong>】在前面几篇文章中简单介绍了一下<code>Sentinel</code>的功能都是针对所有的请求资源，今天就来继续说一下<code>Sentinel</code>的来源访问控制。</p>\n<hr>\n<h1 id=\"壹、概述\"><a href=\"#壹、概述\" class=\"headerlink\" title=\"壹、概述\"></a>壹、概述</h1><p>很多时候，我们需要根据调用方来限制资源是否通过，这时候可以使用 <code>Sentinel</code> 的黑白名单控制的功能。黑白名单根据资源的请求来源（<code>origin</code>）限制资源是否通过，若配置白名单则只有请求来源位于白名单内时才可通过；若配置黑名单则请求来源位于黑名单时不通过，其余的请求通过。</p>\n<blockquote>\n<p>调用方信息通过 <code>ContextUtil.enter(resourceName, origin)</code> 方法中的 <code>origin</code> 参数传入。</p>\n</blockquote>\n<h1 id=\"贰、规则配置\"><a href=\"#贰、规则配置\" class=\"headerlink\" title=\"贰、规则配置\"></a>贰、规则配置</h1><p>黑白名单规则（<code>AuthorityRule</code>）非常简单，主要有以下配置项：</p>\n<ul>\n<li><code>resource</code>：资源名，即限流规则的作用对象</li>\n<li><code>limitApp</code>：对应的黑名单/白名单，不同 <code>origin</code> 用 , 分隔，如 <code>appA</code>,<code>appB</code></li>\n<li><code>strategy</code>：限制模式，<code>AUTHORITY_WHITE</code> 为白名单模式，<code>AUTHORITY_BLACK</code> 为黑名单模式，默认为白名单模式</li>\n</ul>\n<h1 id=\"叁、示例\"><a href=\"#叁、示例\" class=\"headerlink\" title=\"叁、示例\"></a>叁、示例</h1><p>比如我们希望控制对资源 <code>test</code> 的访问设置白名单，只有来源为 <code>appA</code> 和 <code>appB</code> 的请求才可通过，则可以配置如下白名单规则：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AuthorityDemo</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String RESOURCE_NAME = <span class=\"string\">&quot;testABC&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;========Testing for black list========&quot;</span>);</span><br><span class=\"line\">        initBlackRules();</span><br><span class=\"line\">        testFor(RESOURCE_NAME, <span class=\"string\">&quot;appA&quot;</span>);</span><br><span class=\"line\">        testFor(RESOURCE_NAME, <span class=\"string\">&quot;appB&quot;</span>);</span><br><span class=\"line\">        testFor(RESOURCE_NAME, <span class=\"string\">&quot;appC&quot;</span>);</span><br><span class=\"line\">        testFor(RESOURCE_NAME, <span class=\"string\">&quot;appE&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;========Testing for white list========&quot;</span>);</span><br><span class=\"line\">        initWhiteRules();</span><br><span class=\"line\">        testFor(RESOURCE_NAME, <span class=\"string\">&quot;appA&quot;</span>);</span><br><span class=\"line\">        testFor(RESOURCE_NAME, <span class=\"string\">&quot;appB&quot;</span>);</span><br><span class=\"line\">        testFor(RESOURCE_NAME, <span class=\"string\">&quot;appC&quot;</span>);</span><br><span class=\"line\">        testFor(RESOURCE_NAME, <span class=\"string\">&quot;appE&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">testFor</span><span class=\"params\">(<span class=\"comment\">/*@NonNull*/</span> String resource, <span class=\"comment\">/*@NonNull*/</span> String origin)</span> </span>&#123;</span><br><span class=\"line\">        ContextUtil.enter(resource, origin);</span><br><span class=\"line\">        Entry entry = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            entry = SphU.entry(resource);</span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;Passed for resource %s, origin is %s&quot;</span>, resource, origin));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (BlockException ex) &#123;</span><br><span class=\"line\">            System.err.println(String.format(<span class=\"string\">&quot;Blocked for resource %s, origin is %s&quot;</span>, resource, origin));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (entry != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                entry.exit();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            ContextUtil.exit();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">initWhiteRules</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        AuthorityRule rule = <span class=\"keyword\">new</span> AuthorityRule();</span><br><span class=\"line\">        rule.setResource(RESOURCE_NAME);</span><br><span class=\"line\">        rule.setStrategy(RuleConstant.AUTHORITY_WHITE);</span><br><span class=\"line\">        rule.setLimitApp(<span class=\"string\">&quot;appA,appE&quot;</span>);</span><br><span class=\"line\">        AuthorityRuleManager.loadRules(Collections.singletonList(rule));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">initBlackRules</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        AuthorityRule rule = <span class=\"keyword\">new</span> AuthorityRule();</span><br><span class=\"line\">        rule.setResource(RESOURCE_NAME);</span><br><span class=\"line\">        rule.setStrategy(RuleConstant.AUTHORITY_BLACK);</span><br><span class=\"line\">        rule.setLimitApp(<span class=\"string\">&quot;appA,appB&quot;</span>);</span><br><span class=\"line\">        AuthorityRuleManager.loadRules(Collections.singletonList(rule));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"肆、SpringBoot中的使用\"><a href=\"#肆、SpringBoot中的使用\" class=\"headerlink\" title=\"肆、SpringBoot中的使用\"></a>肆、SpringBoot中的使用</h1><h2 id=\"4-1、限制来源token\"><a href=\"#4-1、限制来源token\" class=\"headerlink\" title=\"4.1、限制来源token\"></a>4.1、限制来源token</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configurable</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SentinelRequestParserConfig</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> RequestOriginParser <span class=\"title\">requestOriginParser</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (httpServletRequest -&gt; httpServletRequest.getHeader(<span class=\"string\">&quot;token&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-1、限制来源请求地址\"><a href=\"#4-1、限制来源请求地址\" class=\"headerlink\" title=\"4.1、限制来源请求地址\"></a>4.1、限制来源请求地址</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configurable</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SentinelRequestParserConfig</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> RequestOriginParser <span class=\"title\">requestOriginParser</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (httpServletRequest -&gt; httpServletRequest.getRemoteAddr());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p>【<strong>后面的话</strong>】<a href=\"https://github.com/eelve/awesomesentinel\">最后是我自己实践自定义调用链的源码</a> 。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","more":"<p>【<strong>前面的话</strong>】在前面几篇文章中简单介绍了一下<code>Sentinel</code>的功能都是针对所有的请求资源，今天就来继续说一下<code>Sentinel</code>的来源访问控制。</p>\n<hr>\n<h1 id=\"壹、概述\"><a href=\"#壹、概述\" class=\"headerlink\" title=\"壹、概述\"></a>壹、概述</h1><p>很多时候，我们需要根据调用方来限制资源是否通过，这时候可以使用 <code>Sentinel</code> 的黑白名单控制的功能。黑白名单根据资源的请求来源（<code>origin</code>）限制资源是否通过，若配置白名单则只有请求来源位于白名单内时才可通过；若配置黑名单则请求来源位于黑名单时不通过，其余的请求通过。</p>\n<blockquote>\n<p>调用方信息通过 <code>ContextUtil.enter(resourceName, origin)</code> 方法中的 <code>origin</code> 参数传入。</p>\n</blockquote>\n<h1 id=\"贰、规则配置\"><a href=\"#贰、规则配置\" class=\"headerlink\" title=\"贰、规则配置\"></a>贰、规则配置</h1><p>黑白名单规则（<code>AuthorityRule</code>）非常简单，主要有以下配置项：</p>\n<ul>\n<li><code>resource</code>：资源名，即限流规则的作用对象</li>\n<li><code>limitApp</code>：对应的黑名单/白名单，不同 <code>origin</code> 用 , 分隔，如 <code>appA</code>,<code>appB</code></li>\n<li><code>strategy</code>：限制模式，<code>AUTHORITY_WHITE</code> 为白名单模式，<code>AUTHORITY_BLACK</code> 为黑名单模式，默认为白名单模式</li>\n</ul>\n<h1 id=\"叁、示例\"><a href=\"#叁、示例\" class=\"headerlink\" title=\"叁、示例\"></a>叁、示例</h1><p>比如我们希望控制对资源 <code>test</code> 的访问设置白名单，只有来源为 <code>appA</code> 和 <code>appB</code> 的请求才可通过，则可以配置如下白名单规则：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AuthorityDemo</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String RESOURCE_NAME = <span class=\"string\">&quot;testABC&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;========Testing for black list========&quot;</span>);</span><br><span class=\"line\">        initBlackRules();</span><br><span class=\"line\">        testFor(RESOURCE_NAME, <span class=\"string\">&quot;appA&quot;</span>);</span><br><span class=\"line\">        testFor(RESOURCE_NAME, <span class=\"string\">&quot;appB&quot;</span>);</span><br><span class=\"line\">        testFor(RESOURCE_NAME, <span class=\"string\">&quot;appC&quot;</span>);</span><br><span class=\"line\">        testFor(RESOURCE_NAME, <span class=\"string\">&quot;appE&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;========Testing for white list========&quot;</span>);</span><br><span class=\"line\">        initWhiteRules();</span><br><span class=\"line\">        testFor(RESOURCE_NAME, <span class=\"string\">&quot;appA&quot;</span>);</span><br><span class=\"line\">        testFor(RESOURCE_NAME, <span class=\"string\">&quot;appB&quot;</span>);</span><br><span class=\"line\">        testFor(RESOURCE_NAME, <span class=\"string\">&quot;appC&quot;</span>);</span><br><span class=\"line\">        testFor(RESOURCE_NAME, <span class=\"string\">&quot;appE&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">testFor</span><span class=\"params\">(<span class=\"comment\">/*@NonNull*/</span> String resource, <span class=\"comment\">/*@NonNull*/</span> String origin)</span> </span>&#123;</span><br><span class=\"line\">        ContextUtil.enter(resource, origin);</span><br><span class=\"line\">        Entry entry = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            entry = SphU.entry(resource);</span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;Passed for resource %s, origin is %s&quot;</span>, resource, origin));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (BlockException ex) &#123;</span><br><span class=\"line\">            System.err.println(String.format(<span class=\"string\">&quot;Blocked for resource %s, origin is %s&quot;</span>, resource, origin));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (entry != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                entry.exit();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            ContextUtil.exit();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">initWhiteRules</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        AuthorityRule rule = <span class=\"keyword\">new</span> AuthorityRule();</span><br><span class=\"line\">        rule.setResource(RESOURCE_NAME);</span><br><span class=\"line\">        rule.setStrategy(RuleConstant.AUTHORITY_WHITE);</span><br><span class=\"line\">        rule.setLimitApp(<span class=\"string\">&quot;appA,appE&quot;</span>);</span><br><span class=\"line\">        AuthorityRuleManager.loadRules(Collections.singletonList(rule));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">initBlackRules</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        AuthorityRule rule = <span class=\"keyword\">new</span> AuthorityRule();</span><br><span class=\"line\">        rule.setResource(RESOURCE_NAME);</span><br><span class=\"line\">        rule.setStrategy(RuleConstant.AUTHORITY_BLACK);</span><br><span class=\"line\">        rule.setLimitApp(<span class=\"string\">&quot;appA,appB&quot;</span>);</span><br><span class=\"line\">        AuthorityRuleManager.loadRules(Collections.singletonList(rule));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"肆、SpringBoot中的使用\"><a href=\"#肆、SpringBoot中的使用\" class=\"headerlink\" title=\"肆、SpringBoot中的使用\"></a>肆、SpringBoot中的使用</h1><h2 id=\"4-1、限制来源token\"><a href=\"#4-1、限制来源token\" class=\"headerlink\" title=\"4.1、限制来源token\"></a>4.1、限制来源token</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configurable</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SentinelRequestParserConfig</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> RequestOriginParser <span class=\"title\">requestOriginParser</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (httpServletRequest -&gt; httpServletRequest.getHeader(<span class=\"string\">&quot;token&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-1、限制来源请求地址\"><a href=\"#4-1、限制来源请求地址\" class=\"headerlink\" title=\"4.1、限制来源请求地址\"></a>4.1、限制来源请求地址</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configurable</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SentinelRequestParserConfig</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> RequestOriginParser <span class=\"title\">requestOriginParser</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (httpServletRequest -&gt; httpServletRequest.getRemoteAddr());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p>【<strong>后面的话</strong>】<a href=\"https://github.com/eelve/awesomesentinel\">最后是我自己实践自定义调用链的源码</a> 。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","categories":[{"name":"sentinel","path":"api/categories/sentinel.json"}],"tags":[{"name":"sentinel","path":"api/tags/sentinel.json"}]}