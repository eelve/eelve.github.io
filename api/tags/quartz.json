{"name":"quartz","postlist":[{"title":"spring-boot-starter-quartz集群实践","slug":"spring-boot-starter-quartz集群实践","date":"2019-08-09T09:06:12.000Z","updated":"2021-04-19T06:44:39.180Z","comments":true,"path":"api/articles/spring-boot-starter-quartz集群实践.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/1-a8a710a578ad47a8afc8ace72f3cbd7c.png","content":"<p>【<strong>前情提要</strong>】由于项目需要，需要一个定时任务集群，故此有了这个spring-boot-starter-quartz集群的实践。springboot的版本为：2.1.6.RELEASE；quartz的版本为：2.3.1.假如这里一共有两个定时任务的节点，它们的代码完全一样。</p>\n<hr>\n<h1 id=\"壹-jar包依赖\"><a href=\"#壹-jar包依赖\" class=\"headerlink\" title=\"壹.jar包依赖\"></a>壹.jar包依赖</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;properties&gt;</span><br><span class=\"line\">        &lt;java.version&gt;1.8&lt;&#x2F;java.version&gt;</span><br><span class=\"line\">    &lt;&#x2F;properties&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;dependencies&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;spring-boot-starter&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;spring-boot-starter-quartz&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;scope&gt;runtime&lt;&#x2F;scope&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;spring-boot-starter-jdbc&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.projectlombok&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;lombok&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;optional&gt;true&lt;&#x2F;optional&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">    &lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure>\n<p>这里选择将定时任务的数据入库，避免数据直接存在内存中，因应用重启造成的数据丢失和做集群控制。</p>\n<h1 id=\"贰、项目配置\"><a href=\"#贰、项目配置\" class=\"headerlink\" title=\"贰、项目配置\"></a>贰、项目配置</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">server:</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"number\">8080</span></span><br><span class=\"line\">    <span class=\"attr\">servlet:</span></span><br><span class=\"line\">      <span class=\"attr\">context-path:</span> <span class=\"string\">/lovin</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://127.0.0.1:3306/training?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=true</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">driver-class-name:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\">  <span class=\"attr\">quartz:</span></span><br><span class=\"line\">    <span class=\"attr\">job-store-type:</span> <span class=\"string\">jdbc</span> <span class=\"comment\">#数据库方式</span></span><br><span class=\"line\">    <span class=\"attr\">jdbc:</span></span><br><span class=\"line\">      <span class=\"attr\">initialize-schema:</span> <span class=\"string\">never</span> <span class=\"comment\">#不初始化表结构</span></span><br><span class=\"line\">    <span class=\"attr\">properties:</span></span><br><span class=\"line\">      <span class=\"attr\">org:</span></span><br><span class=\"line\">        <span class=\"attr\">quartz:</span></span><br><span class=\"line\">          <span class=\"attr\">scheduler:</span></span><br><span class=\"line\">            <span class=\"attr\">instanceId:</span> <span class=\"string\">AUTO</span> <span class=\"comment\">#默认主机名和时间戳生成实例ID,可以是任何字符串，但对于所有调度程序来说，必须是唯一的 对应qrtz_scheduler_state INSTANCE_NAME字段</span></span><br><span class=\"line\">            <span class=\"comment\">#instanceName: clusteredScheduler #quartzScheduler</span></span><br><span class=\"line\">          <span class=\"attr\">jobStore:</span></span><br><span class=\"line\">            <span class=\"attr\">class:</span> <span class=\"string\">org.quartz.impl.jdbcjobstore.JobStoreTX</span> <span class=\"comment\">#持久化配置</span></span><br><span class=\"line\">            <span class=\"attr\">driverDelegateClass:</span> <span class=\"string\">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span> <span class=\"comment\">#我们仅为数据库制作了特定于数据库的代理</span></span><br><span class=\"line\">            <span class=\"attr\">useProperties:</span> <span class=\"literal\">false</span> <span class=\"comment\">#以指示JDBCJobStore将JobDataMaps中的所有值都作为字符串，因此可以作为名称 - 值对存储而不是在BLOB列中以其序列化形式存储更多复杂的对象。从长远来看，这是更安全的，因为您避免了将非String类序列化为BLOB的类版本问题。</span></span><br><span class=\"line\">            <span class=\"attr\">tablePrefix:</span> <span class=\"string\">qrtz_</span>  <span class=\"comment\">#数据库表前缀</span></span><br><span class=\"line\">            <span class=\"attr\">misfireThreshold:</span> <span class=\"number\">60000</span> <span class=\"comment\">#在被认为“失火”之前，调度程序将“容忍”一个Triggers将其下一个启动时间通过的毫秒数。默认值（如果您在配置中未输入此属性）为60000（60秒）。</span></span><br><span class=\"line\">            <span class=\"attr\">clusterCheckinInterval:</span> <span class=\"number\">5000</span> <span class=\"comment\">#设置此实例“检入”*与群集的其他实例的频率（以毫秒为单位）。影响检测失败实例的速度。</span></span><br><span class=\"line\">            <span class=\"attr\">isClustered:</span> <span class=\"literal\">true</span> <span class=\"comment\">#打开群集功能</span></span><br><span class=\"line\">          <span class=\"attr\">threadPool:</span> <span class=\"comment\">#连接池</span></span><br><span class=\"line\">            <span class=\"attr\">class:</span> <span class=\"string\">org.quartz.simpl.SimpleThreadPool</span></span><br><span class=\"line\">            <span class=\"attr\">threadCount:</span> <span class=\"number\">10</span></span><br><span class=\"line\">            <span class=\"attr\">threadPriority:</span> <span class=\"number\">5</span></span><br><span class=\"line\">            <span class=\"attr\">threadsInheritContextClassLoaderOfInitializingThread:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p><strong>这里需要注意的是两个节点的端口号应该不一致，避免冲突</strong></p>\n<h1 id=\"叁、实现一个Job\"><a href=\"#叁、实现一个Job\" class=\"headerlink\" title=\"叁、实现一个Job\"></a>叁、实现一个Job</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Job</span> <span class=\"keyword\">extends</span> <span class=\"title\">QuartzJobBean</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">executeInternal</span><span class=\"params\">(JobExecutionContext jobExecutionContext)</span> <span class=\"keyword\">throws</span> JobExecutionException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 获取参数</span></span><br><span class=\"line\">        JobDataMap jobDataMap = jobExecutionContext.getJobDetail().getJobDataMap();</span><br><span class=\"line\">        <span class=\"comment\">// 业务逻辑 ...</span></span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;------springbootquartzonejob执行&quot;</span>+jobDataMap.get(<span class=\"string\">&quot;name&quot;</span>).toString()+<span class=\"string\">&quot;###############&quot;</span>+jobExecutionContext.getTrigger());</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p><strong>其中的日志输出是为了便于观察任务执行情况</strong></p>\n<h1 id=\"肆、封装定时任务操作\"><a href=\"#肆、封装定时任务操作\" class=\"headerlink\" title=\"肆、封装定时任务操作\"></a>肆、封装定时任务操作</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QuartzService</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Scheduler scheduler;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostConstruct</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">startScheduler</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            scheduler.start();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 增加一个job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobClass</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务实现类</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务名称</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务组名</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobTime</span></span><br><span class=\"line\"><span class=\"comment\">     *            时间表达式 (这是每隔多少秒为一次任务)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobTimes</span></span><br><span class=\"line\"><span class=\"comment\">     *            运行的次数 （&lt;0:表示不限次数）</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobData</span></span><br><span class=\"line\"><span class=\"comment\">     *            参数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addJob</span><span class=\"params\">(Class&lt;? extends QuartzJobBean&gt; jobClass, String jobName, String jobGroupName, <span class=\"keyword\">int</span> jobTime,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                       <span class=\"keyword\">int</span> jobTimes, Map jobData)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 任务名称和组构成任务key</span></span><br><span class=\"line\">            JobDetail jobDetail = JobBuilder.newJob(jobClass).withIdentity(jobName, jobGroupName)</span><br><span class=\"line\">                    .build();</span><br><span class=\"line\">            <span class=\"comment\">// 设置job参数</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(jobData!= <span class=\"keyword\">null</span> &amp;&amp; jobData.size()&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                jobDetail.getJobDataMap().putAll(jobData);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 使用simpleTrigger规则</span></span><br><span class=\"line\">            Trigger trigger = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (jobTimes &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                trigger = TriggerBuilder.newTrigger().withIdentity(jobName, jobGroupName)</span><br><span class=\"line\">                        .withSchedule(SimpleScheduleBuilder.repeatSecondlyForever(<span class=\"number\">1</span>).withIntervalInSeconds(jobTime))</span><br><span class=\"line\">                        .startNow().build();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                trigger = TriggerBuilder</span><br><span class=\"line\">                        .newTrigger().withIdentity(jobName, jobGroupName).withSchedule(SimpleScheduleBuilder</span><br><span class=\"line\">                                .repeatSecondlyForever(<span class=\"number\">1</span>).withIntervalInSeconds(jobTime).withRepeatCount(jobTimes))</span><br><span class=\"line\">                        .startNow().build();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            scheduler.scheduleJob(jobDetail, trigger);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 增加一个job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobClass</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务实现类</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务名称(建议唯一)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务组名</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobTime</span></span><br><span class=\"line\"><span class=\"comment\">     *            时间表达式 （如：0/5 * * * * ? ）</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobData</span></span><br><span class=\"line\"><span class=\"comment\">     *            参数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addJob</span><span class=\"params\">(Class&lt;? extends QuartzJobBean&gt; jobClass, String jobName, String jobGroupName, String jobTime, Map jobData)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 创建jobDetail实例，绑定Job实现类</span></span><br><span class=\"line\">            <span class=\"comment\">// 指明job的名称，所在组的名称，以及绑定job类</span></span><br><span class=\"line\">            <span class=\"comment\">// 任务名称和组构成任务key</span></span><br><span class=\"line\">            JobDetail jobDetail = JobBuilder.newJob(jobClass).withIdentity(jobName, jobGroupName)</span><br><span class=\"line\">                    .build();</span><br><span class=\"line\">            <span class=\"comment\">// 设置job参数</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(jobData!= <span class=\"keyword\">null</span> &amp;&amp; jobData.size()&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                jobDetail.getJobDataMap().putAll(jobData);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 定义调度触发规则</span></span><br><span class=\"line\">            <span class=\"comment\">// 使用cornTrigger规则</span></span><br><span class=\"line\">            <span class=\"comment\">// 触发器key</span></span><br><span class=\"line\">            Trigger trigger = TriggerBuilder.newTrigger().withIdentity(jobName, jobGroupName)</span><br><span class=\"line\">                    .startAt(DateBuilder.futureDate(<span class=\"number\">1</span>, IntervalUnit.SECOND))</span><br><span class=\"line\">                    .withSchedule(CronScheduleBuilder.cronSchedule(jobTime)).startNow().build();</span><br><span class=\"line\">            <span class=\"comment\">// 把作业和触发器注册到任务调度中</span></span><br><span class=\"line\">            scheduler.scheduleJob(jobDetail, trigger);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 修改 一个job的 时间表达式</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobTime</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateJob</span><span class=\"params\">(String jobName, String jobGroupName, String jobTime)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            TriggerKey triggerKey = TriggerKey.triggerKey(jobName, jobGroupName);</span><br><span class=\"line\">            CronTrigger trigger = (CronTrigger) scheduler.getTrigger(triggerKey);</span><br><span class=\"line\">            trigger = trigger.getTriggerBuilder().withIdentity(triggerKey)</span><br><span class=\"line\">                    .withSchedule(CronScheduleBuilder.cronSchedule(jobTime)).build();</span><br><span class=\"line\">            <span class=\"comment\">// 重启触发器</span></span><br><span class=\"line\">            scheduler.rescheduleJob(triggerKey, trigger);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 删除任务一个job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务名称</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务组名</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deleteJob</span><span class=\"params\">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            scheduler.deleteJob(<span class=\"keyword\">new</span> JobKey(jobName, jobGroupName));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 暂停一个job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">pauseJob</span><span class=\"params\">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class=\"line\">            scheduler.pauseJob(jobKey);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 恢复一个job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">resumeJob</span><span class=\"params\">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class=\"line\">            scheduler.resumeJob(jobKey);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 立即执行一个job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">runAJobNow</span><span class=\"params\">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class=\"line\">            scheduler.triggerJob(jobKey);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取所有计划中的任务列表</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Map&lt;String, Object&gt;&gt; queryAllJob() &#123;</span><br><span class=\"line\">        List&lt;Map&lt;String, Object&gt;&gt; jobList = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            GroupMatcher&lt;JobKey&gt; matcher = GroupMatcher.anyJobGroup();</span><br><span class=\"line\">            Set&lt;JobKey&gt; jobKeys = scheduler.getJobKeys(matcher);</span><br><span class=\"line\">            jobList = <span class=\"keyword\">new</span> ArrayList&lt;Map&lt;String, Object&gt;&gt;();</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (JobKey jobKey : jobKeys) &#123;</span><br><span class=\"line\">                List&lt;? extends Trigger&gt; triggers = scheduler.getTriggersOfJob(jobKey);</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (Trigger trigger : triggers) &#123;</span><br><span class=\"line\">                    Map&lt;String, Object&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">                    map.put(<span class=\"string\">&quot;jobName&quot;</span>, jobKey.getName());</span><br><span class=\"line\">                    map.put(<span class=\"string\">&quot;jobGroupName&quot;</span>, jobKey.getGroup());</span><br><span class=\"line\">                    map.put(<span class=\"string\">&quot;description&quot;</span>, <span class=\"string\">&quot;触发器:&quot;</span> + trigger.getKey());</span><br><span class=\"line\">                    Trigger.TriggerState triggerState = scheduler.getTriggerState(trigger.getKey());</span><br><span class=\"line\">                    map.put(<span class=\"string\">&quot;jobStatus&quot;</span>, triggerState.name());</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (trigger <span class=\"keyword\">instanceof</span> CronTrigger) &#123;</span><br><span class=\"line\">                        CronTrigger cronTrigger = (CronTrigger) trigger;</span><br><span class=\"line\">                        String cronExpression = cronTrigger.getCronExpression();</span><br><span class=\"line\">                        map.put(<span class=\"string\">&quot;jobTime&quot;</span>, cronExpression);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    jobList.add(map);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> jobList;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取所有正在运行的job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Map&lt;String, Object&gt;&gt; queryRunJob() &#123;</span><br><span class=\"line\">        List&lt;Map&lt;String, Object&gt;&gt; jobList = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            List&lt;JobExecutionContext&gt; executingJobs = scheduler.getCurrentlyExecutingJobs();</span><br><span class=\"line\">            jobList = <span class=\"keyword\">new</span> ArrayList&lt;Map&lt;String, Object&gt;&gt;(executingJobs.size());</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (JobExecutionContext executingJob : executingJobs) &#123;</span><br><span class=\"line\">                Map&lt;String, Object&gt; map = <span class=\"keyword\">new</span> HashMap&lt;String, Object&gt;();</span><br><span class=\"line\">                JobDetail jobDetail = executingJob.getJobDetail();</span><br><span class=\"line\">                JobKey jobKey = jobDetail.getKey();</span><br><span class=\"line\">                Trigger trigger = executingJob.getTrigger();</span><br><span class=\"line\">                map.put(<span class=\"string\">&quot;jobName&quot;</span>, jobKey.getName());</span><br><span class=\"line\">                map.put(<span class=\"string\">&quot;jobGroupName&quot;</span>, jobKey.getGroup());</span><br><span class=\"line\">                map.put(<span class=\"string\">&quot;description&quot;</span>, <span class=\"string\">&quot;触发器:&quot;</span> + trigger.getKey());</span><br><span class=\"line\">                Trigger.TriggerState triggerState = scheduler.getTriggerState(trigger.getKey());</span><br><span class=\"line\">                map.put(<span class=\"string\">&quot;jobStatus&quot;</span>, triggerState.name());</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (trigger <span class=\"keyword\">instanceof</span> CronTrigger) &#123;</span><br><span class=\"line\">                    CronTrigger cronTrigger = (CronTrigger) trigger;</span><br><span class=\"line\">                    String cronExpression = cronTrigger.getCronExpression();</span><br><span class=\"line\">                    map.put(<span class=\"string\">&quot;jobTime&quot;</span>, cronExpression);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                jobList.add(map);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> jobList;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"陆、初始化任务\"><a href=\"#陆、初始化任务\" class=\"headerlink\" title=\"陆、初始化任务\"></a>陆、初始化任务</h1><p>这里不准备给用户用web界面来配置定时任务，故此采用<strong>CommandLineRunner</strong>来子啊应用初始化的时候来初始化任务。只需要实现CommandLineRunner的run()方法即可。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">(String... args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        HashMap&lt;String,Object&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">        map.put(<span class=\"string\">&quot;name&quot;</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        quartzService.deleteJob(<span class=\"string\">&quot;job&quot;</span>, <span class=\"string\">&quot;test&quot;</span>);</span><br><span class=\"line\">        quartzService.addJob(Job.class, <span class=\"string\">&quot;job&quot;</span>, <span class=\"string\">&quot;test&quot;</span>, <span class=\"string\">&quot;0 * * * * ?&quot;</span>, map);</span><br><span class=\"line\"></span><br><span class=\"line\">        map.put(<span class=\"string\">&quot;name&quot;</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        quartzService.deleteJob(<span class=\"string\">&quot;job2&quot;</span>, <span class=\"string\">&quot;test&quot;</span>);</span><br><span class=\"line\">        quartzService.addJob(Job.class, <span class=\"string\">&quot;job2&quot;</span>, <span class=\"string\">&quot;test&quot;</span>, <span class=\"string\">&quot;10 * * * * ?&quot;</span>, map);</span><br><span class=\"line\"></span><br><span class=\"line\">        map.put(<span class=\"string\">&quot;name&quot;</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">        quartzService.deleteJob(<span class=\"string\">&quot;job3&quot;</span>, <span class=\"string\">&quot;test2&quot;</span>);</span><br><span class=\"line\">        quartzService.addJob(Job.class, <span class=\"string\">&quot;job3&quot;</span>, <span class=\"string\">&quot;test2&quot;</span>, <span class=\"string\">&quot;15 * * * * ?&quot;</span>, map);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"柒、测试验证\"><a href=\"#柒、测试验证\" class=\"headerlink\" title=\"柒、测试验证\"></a>柒、测试验证</h1><p>分别夏侯启动两个应用，然后观察任务执行，以及在运行过程中杀死某个服务，来观察定时任务的执行。<br><img src=\"https://image.eelve.com/eblog/1-a8a710a578ad47a8afc8ace72f3cbd7c.png\" alt=\"SpringbootquartzoneApplication\"><br><img src=\"https://image.eelve.com/eblog/2-db731d38c3ed4b4b8123482c9b3ef28d.png\" alt=\"SpringbootquartztwoApplication\"></p>\n<p>【<strong>写在后面的话</strong>】下面给出的是所需要脚本的连接地址：<a href=\"http://www.quartz-scheduler.org/downloads/\">脚本下载地址</a>，另外这边又一个自己实现的<a href=\"https://github.com/eelve/springbootquartzs.git\">demo</a></p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"springboot","path":"api/categories/springboot.json"}],"tags":[{"name":"java","path":"api/tags/java.json"},{"name":"springboot","path":"api/tags/springboot.json"},{"name":"quartz","path":"api/tags/quartz.json"}]}]}