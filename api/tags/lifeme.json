{"name":"lifeme","postlist":[{"title":"Hexo拯救计划","slug":"Hexo拯救计划","date":"2020-04-06T06:37:42.000Z","updated":"2021-04-19T06:44:39.033Z","comments":true,"path":"api/articles/Hexo拯救计划.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png","content":"<p>【<strong>前面的话</strong>】就在上个月底，Github遭受了中间人攻击，导致Github Pages的证书被篡改失效，而基于此的一众利用Github Pages生成博客全部都不能访问。鉴于“不能把鸡蛋放在同一个篮子里”的优秀理念，我决定给我的博客找一个新家。</p>\n<h1 id=\"壹、第三方博客\"><a href=\"#壹、第三方博客\" class=\"headerlink\" title=\"壹、第三方博客\"></a>壹、第三方博客</h1><p>本人在有<a href=\"https://zzlve.win/\">Github Pages生成的博客</a>之外，我还有拥有<a href=\"https://eelve.com/\">Halo搭建的博客</a>。<a href=\"https://halo.run/\">Halo</a>一个优秀的开源博客发布应用。</p>\n<h1 id=\"贰、CloudFlare\"><a href=\"#贰、CloudFlare\" class=\"headerlink\" title=\"贰、CloudFlare\"></a>贰、CloudFlare</h1><p>我们可以利用CloudFlare，在Hexo外层套一层证书，进而不使用Github Pages的证书，来避免这个问题。目前我的博客就是使用的CloudFlare，其访问速度和Gihub Pages的Fastly Anycast节点速度差不多，都是比较慢。</p>\n<h1 id=\"叁、Gitee-Coding-GitLab\"><a href=\"#叁、Gitee-Coding-GitLab\" class=\"headerlink\" title=\"叁、Gitee/Coding/GitLab\"></a>叁、Gitee/Coding/GitLab</h1><p>我们也可以使用其他托管平台提供的服务，主要就是你需要将你的源程序上传到对应的平台然后在上面发布，下面说一下优缺点：</p>\n<ul>\n<li><a href=\"https://eelve.gitee.io/\">Gitee</a><ul>\n<li>优点：<ul>\n<li>1.支持HTTPS</li>\n<li>2.上海腾讯云节点</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>自定义域名需要付费套餐（且域名需要备案）  </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Coding<ul>\n<li>优点：<ul>\n<li>1.可自定义域名</li>\n<li>2.支持HTTPS</li>\n<li>3.全球腾讯云新加坡CN2</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>1.不稳定</li>\n<li>2.不能被百度爬虫收录</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>GitLab<ul>\n<li>优点：<ul>\n<li>1.可自定义域名，自定义证书</li>\n<li>2.支持HTTPS，一键SSL配置</li>\n<li>3.GitLab-CI集成</li>\n<li>4.Fastly Anycast节点</li>\n<li>5.与GitHub功能上差不多，自带的GitLab-Ci持续部署能有效地提高效率。</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>1.国内访问速度与GitHub相似</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"肆、Netlify\"><a href=\"#肆、Netlify\" class=\"headerlink\" title=\"肆、Netlify\"></a>肆、Netlify</h1><p>主要特点：</p>\n<ul>\n<li>1.可自定义域名</li>\n<li>2.支持HTTPS HTTP/2 IPv6</li>\n<li>3.自定义页面重定向，静态资源优化</li>\n<li>4.DigitalOcean 美国纽约&amp;新加坡节点</li>\n</ul>\n<p>另外Netlify提供的服务应该算是最多的。自定义插入代码、打包和压缩js/css、压缩，处理图片、自动部署、提供Webhooks与API等功能。</p>\n<p>我自己的实现：<a href=\"https://eelve.netlify.com/\">南国薏米</a>。在我本地提交代码之后会自动触发，重新解析从而可以达到博客同步更新，在这一点上是和Github Pages更新是一样的。</p>\n<h1 id=\"伍、ZEIT\"><a href=\"#伍、ZEIT\" class=\"headerlink\" title=\"伍、ZEIT\"></a>伍、ZEIT</h1><p>主要特点：</p>\n<ul>\n<li>1.可自定义域名，自定义证书（付费）</li>\n<li>2.支持HTTPS</li>\n<li>3.提供ServerLess服务</li>\n<li>4.GCP&amp;AWS节点</li>\n<li>5.国内电信联通走台湾（电信有些地区35段绕美国），移动走美国</li>\n</ul>\n<p>另外大陆速度不错，可使用 now.sh CLI或GitHub，GitLab，Bitbucket导入项目进行自动代码部署，提供ServerLess，会地总分配的*.now.sh域名，但免费额度的流量有点少，限量20G。</p>\n<p>我自己的实现：<a href=\"https://eelve-github-io.now.sh/\">南国薏米</a>。在我本地提交代码之后会自动触发，重新解析从而可以达到博客同步更新，在这一点上是和Github Pages更新是一样的。说实话我们完全可以将博客迁移，并且你之前开发Hexo的不走完全没有改变。另外你的Hexo是采用多分支管理：博客分支和源代码分支。如果你的源代码分支中包含主题子仓库的话，发布之后ZEIT是不能正常解析的，会丢失样式。如果为了解决我们可以配置ZEIT是解析我们Hexo博客分支就 可以了。</p>\n<h1 id=\"陆、云存储\"><a href=\"#陆、云存储\" class=\"headerlink\" title=\"陆、云存储\"></a>陆、云存储</h1><p>我这里有一个利用又拍云实现的案例：<a href=\"https://image.eelve.com/\">南国薏米</a>。我们可以在生成静态页面之后，将页面全部上传的控件中，然后在云存储中开启index首页，就可以正常访问了。这里我们还可以结合hexo的插件来使用：</p>\n<p>安装插件</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-upyundeploy --save</span><br></pre></td></tr></table></figure>\n<p>编辑根目录的_config.yml文件的deploy字段,配置又拍云存储的服务名称、操作员名称、操作员密码</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">upyun</span></span><br><span class=\"line\">    <span class=\"attr\">serviceName:</span> <span class=\"string\">服务名称</span></span><br><span class=\"line\">    <span class=\"attr\">operatorName:</span> <span class=\"string\">操作员名称</span></span><br><span class=\"line\">    <span class=\"attr\">operatorPassword:</span> <span class=\"string\">操作员密码</span></span><br><span class=\"line\">    <span class=\"attr\">path:</span> <span class=\"string\">/</span> <span class=\"string\">上传目录(选填，默认为根目录)</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>【<strong>后面的话</strong>】以上列举的各种方法，叁、肆、伍、陆都是生成静态博客。其中我个人最推荐方案伍，不仅你的开放方式不会改变，另外还能得到比较好的访问速度，还可以被百度的爬虫抓取。另外如果有服务器也喜欢的折腾的话，可以使用地方法博客程序搭建，包括但不仅限于Halo。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"lifeme","path":"api/categories/lifeme.json"}],"tags":[{"name":"lifeme","path":"api/tags/lifeme.json"}]},{"title":"站点迁移指北","slug":"站点迁移指北","date":"2020-11-07T13:53:22.000Z","updated":"2021-04-19T06:44:39.271Z","comments":true,"path":"api/articles/站点迁移指北.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png","content":"<p>【<strong>前面的话</strong>】由于服务器快到期了，就重新另购了一台服务器。这边就来记录一下迁移的过程和日常数据备份等等。</p>\n<h1 id=\"壹、站点概览\"><a href=\"#壹、站点概览\" class=\"headerlink\" title=\"壹、站点概览\"></a>壹、站点概览</h1><p>我的站点使用<code>halo</code>搭建的，主要涉及到的中间件有：<code>Nginx</code>、<code>Mysql</code>等；日常运行产生的数据有站点运行数据和资源数据，所以站点迁移也会从这些方面着手。</p>\n<h1 id=\"贰、中间件迁移\"><a href=\"#贰、中间件迁移\" class=\"headerlink\" title=\"贰、中间件迁移\"></a>贰、中间件迁移</h1><h2 id=\"2-1、Nginx\"><a href=\"#2-1、Nginx\" class=\"headerlink\" title=\"2.1、Nginx\"></a>2.1、Nginx</h2><p>其实<code>Nginx</code>的迁移很简单，只需要在新的服务器中安装即可，然后迁移<code>nginx.conf</code>配置文件。我的站点还用到<code>https</code>，所有在安装的时候要注意安装相应的模块以及证书的迁移。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/usr/<span class=\"built_in\">local</span>/nginx --add-module=../ngx_cache_purge-1.3/  --with-http_stub_status_module --with-http_ssl_module --with-http_flv_module --with-http_gzip_static_module</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-2、Mysql\"><a href=\"#2-2、Mysql\" class=\"headerlink\" title=\"2.2、Mysql\"></a>2.2、Mysql</h2><p>在新的服务器安装<code>Mysql</code>服务，然后导入sql文件即可：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump <span class=\"operator\">-</span>u$db_user <span class=\"operator\">-</span>p$db_password $db_name <span class=\"operator\">|</span> gzip <span class=\"operator\">&gt;</span> <span class=\"operator\">/</span>home<span class=\"operator\">/</span>firbackup<span class=\"operator\">/</span>halodb.sql.gz</span><br></pre></td></tr></table></figure>\n<h1 id=\"叁、资源数据\"><a href=\"#叁、资源数据\" class=\"headerlink\" title=\"叁、资源数据\"></a>叁、资源数据</h1><p>对于资源数据，主要是<code>halo</code>产生的主题以及上传的文章的图片等等。就直接采用压缩打包，然后发送到新服务器再解压即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar czvf /home/firbackup/halo.tar.gz  /root/.halo</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#如果在同一个内网，记得使用内网ip，速度会更快哦</span></span><br><span class=\"line\">scp halo.tar.gz  root@ip.ip.ip.ip:/root/</span><br></pre></td></tr></table></figure>\n<p>然后再解压到<code>/root/.halo</code> 文件夹即可</p>\n<h1 id=\"肆、重新启动\"><a href=\"#肆、重新启动\" class=\"headerlink\" title=\"肆、重新启动\"></a>肆、重新启动</h1><p>配置域名解析和相应的安全策略以及安装<code>JDK</code>之后，你就可以重新启动<code>halo</code>服务就好，到这里站点迁移工作就完成了。</p>\n<hr>\n<h1 id=\"【后面的话】\"><a href=\"#【后面的话】\" class=\"headerlink\" title=\"【后面的话】\"></a>【<strong>后面的话</strong>】</h1><p>日常备份也就是应用的配置文件以及应用产生的必要数据的备份。我这边的方案是定时打包压缩之后发送到邮箱中。下面给出具体脚本：</p>\n<h2 id=\"安装配置mailx\"><a href=\"#安装配置mailx\" class=\"headerlink\" title=\"安装配置mailx\"></a>安装配置<code>mailx</code></h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install mailx</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/mail.rc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#添加如下配置</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> ssl-verify=ignore</span><br><span class=\"line\"><span class=\"built_in\">set</span> nss-config-dir=/root/.certs/   <span class=\"comment\">#使用命令find / -name &quot;cert*.db&quot; 查找位置（根据自身系统而定）</span></span><br><span class=\"line\"><span class=\"comment\">#weikeyi 发送email的设置</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> from=youremail@163.com  <span class=\"comment\">#163邮箱账号</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> smtp=smtps://smtp.163.com:465   <span class=\"comment\">###smtp服务商#端口465#smtps协议</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> smtp-auth-user=youremail@163.com  <span class=\"comment\">#与上邮箱相同</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> smtp-auth-password=yourpasswd   <span class=\"comment\">#自己的授权码#非邮箱密码</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> smtp-auth=login</span><br></pre></td></tr></table></figure>\n<p>如果在测试执行脚本，发现发送报错的话，那就是证书有问题，只需要在上面提到的<code>/root/.certs/</code>文件夹中放置<code>163邮箱</code>的证书即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Resolving host smtp.163.com . . . <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Connecting to 220.181.12.11:465 . . . connected.</span><br><span class=\"line\">Error initializing NSS: Unknown error -8015.</span><br><span class=\"line\"><span class=\"string\">&quot;/root/dead.letter&quot;</span> 236028/17228757</span><br><span class=\"line\">. . . message not sent.</span><br><span class=\"line\">Resolving host smtp.163.com . . . <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Connecting to 220.181.12.16:465 . . . connected.</span><br><span class=\"line\">Error initializing NSS: Unknown error -8015.</span><br><span class=\"line\"><span class=\"string\">&quot;/root/dead.letter&quot;</span> 6966/507305</span><br><span class=\"line\">. . . message not sent.</span><br><span class=\"line\">Resolving host smtp.163.com . . . <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Connecting to 220.181.12.11:465 . . . connected.</span><br><span class=\"line\">Error initializing NSS: Unknown error -8015.</span><br><span class=\"line\"><span class=\"string\">&quot;/root/dead.letter&quot;</span> 324/22426</span><br><span class=\"line\">. . . message not sent.</span><br><span class=\"line\">Resolving host smtp.163.com . . . <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Connecting to 220.181.12.14:465 . . . connected.</span><br><span class=\"line\">Error initializing NSS: Unknown error -8015.</span><br><span class=\"line\"><span class=\"string\">&quot;/root/dead.letter&quot;</span> 48/2440</span><br><span class=\"line\">. . . message not sent.</span><br><span class=\"line\">Resolving host smtp.163.com . . . <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Connecting to 220.181.12.17:465 . . . connected.</span><br><span class=\"line\">Error initializing NSS: Unknown error -8015.</span><br><span class=\"line\"><span class=\"string\">&quot;/root/dead.letter&quot;</span> 342/10021</span><br><span class=\"line\">. . . message not sent.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"编写脚本\"><a href=\"#编写脚本\" class=\"headerlink\" title=\"编写脚本\"></a>编写脚本</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#firbackup 文件和 and database</span></span><br><span class=\"line\"><span class=\"comment\">###################删除halo备份#################</span></span><br><span class=\"line\">rm -fr /home/firbackup/halo_$(date -d <span class=\"string\">&#x27;7 days ago&#x27;</span> +%Y%m%d).tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###################备份halo#################</span></span><br><span class=\"line\">tar czvf /home/firbackup/halo_$(date +%Y%m%d).tar.gz  /root/.halo</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;halo备份的下载地址：http://eelve.com/bp/&#x27;</span>halo_$(date +%Y%m%d).tar.gz &gt;&gt; /home/firbackup/info_$(date +%Y%m%d).txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###################删除备份数据库####################</span></span><br><span class=\"line\">rm -fr /home/firbackup/halodb_$(date -d <span class=\"string\">&#x27;7 days ago&#x27;</span> +%Y%m%d).sql.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###################备份halodb数据库####################</span></span><br><span class=\"line\">db_user=<span class=\"string\">&quot;root&quot;</span>       <span class=\"comment\">#输入你的数据库用户名 </span></span><br><span class=\"line\">db_password=<span class=\"string\">&quot;root&quot;</span> <span class=\"comment\">#输入你的数据库密码</span></span><br><span class=\"line\">db_name=<span class=\"string\">&quot;halodb&quot;</span>       <span class=\"comment\">#输入你要备份的数据库名   </span></span><br><span class=\"line\">mysqldump -u<span class=\"variable\">$db_user</span> -p<span class=\"variable\">$db_password</span> <span class=\"variable\">$db_name</span> | gzip &gt; /home/firbackup/halodb_$(date +%Y%m%d).sql.gz</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;halo数据库备份的下载地址：http://eelve.com/bp/&#x27;</span>halodb_$(date +%Y%m%d).sql.gz &gt;&gt; /home/firbackup/info_$(date +%Y%m%d).txt </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###################准备开始发邮件###############</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /home/firbackup/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###################邮件发halo数据库备份###############</span></span><br><span class=\"line\">mailx -v -s <span class=\"string\">&quot;请注意查收&quot;</span>$(date +%Y%m%d)<span class=\"string\">&quot;halo数据库的相关备份&quot;</span> -a halodb_$(date +%Y%m%d).sql.gz  i@eelve.com&lt;halodb_$(date +%Y%m%d).sql.gz</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置定时任务\"><a href=\"#配置定时任务\" class=\"headerlink\" title=\"配置定时任务\"></a>配置定时任务</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@fir /home]<span class=\"comment\">#crontab -e</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##每天定时01:00:00 执行脚本 /home/firbackup.sh</span></span><br><span class=\"line\">0 1 * * * sh /home/firbackup.sh</span><br><span class=\"line\"><span class=\"comment\">##每天凌晨2点重启springboot应用</span></span><br><span class=\"line\">0 2 * * * sh /home/auto_restart_springboots.sh</span><br></pre></td></tr></table></figure>\n<p>到这里你只需要去邮箱中下载备份的数据就好了。另外邮箱发送附件是有大小限制的，每个邮箱的具体情况不一。另外对于文章中的图片数据可以上传到<code>又拍云</code>等云存储中即可。最后一句话<code>道路千万条，数据备份第一条</code>。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"lifeme","path":"api/categories/lifeme.json"}],"tags":[{"name":"lifeme","path":"api/tags/lifeme.json"}]},{"title":"清明祭","slug":"清明祭","date":"2020-04-04T01:44:57.000Z","updated":"2021-04-19T06:44:39.258Z","comments":true,"path":"api/articles/清明祭.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/20200404.jpg","content":"<p><img src=\"https://image.eelve.com/eblog/20200404.jpg\" alt=\"清明祭\"></p>\n<blockquote>\n<p>今日，全国哀悼。此刻，一起缅怀，为逝去的同胞！</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">filter</span>: progid:DXImageTransform.Microsoft.<span class=\"built_in\">BasicImage</span>(grayscale=<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-filter</span>: <span class=\"built_in\">grayscale</span>(<span class=\"number\">100%</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>或者</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> *&#123;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-filter</span>: <span class=\"built_in\">grayscale</span>(<span class=\"number\">100%</span>); <span class=\"comment\">/* webkit */</span></span><br><span class=\"line\">    <span class=\"attribute\">-moz-filter</span>: <span class=\"built_in\">grayscale</span>(<span class=\"number\">100%</span>); <span class=\"comment\">/*firefox*/</span></span><br><span class=\"line\">    <span class=\"attribute\">-ms-filter</span>: <span class=\"built_in\">grayscale</span>(<span class=\"number\">100%</span>); <span class=\"comment\">/*ie9*/</span></span><br><span class=\"line\">    <span class=\"attribute\">-o-filter</span>: <span class=\"built_in\">grayscale</span>(<span class=\"number\">100%</span>); <span class=\"comment\">/*opera*/</span></span><br><span class=\"line\">    <span class=\"attribute\">filter</span>: <span class=\"built_in\">grayscale</span>(<span class=\"number\">100%</span>);</span><br><span class=\"line\">    <span class=\"attribute\">filter</span>:progid:DXImageTransform.Microsoft.<span class=\"built_in\">BasicImage</span>(grayscale=<span class=\"number\">1</span>); </span><br><span class=\"line\">    <span class=\"attribute\">filter</span>:gray; <span class=\"comment\">/*ie9- */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre><code>南国薏米全站参与默哀!\n</code></pre>\n","raw":null,"categories":[{"name":"lifeme","path":"api/categories/lifeme.json"}],"tags":[{"name":"lifeme","path":"api/tags/lifeme.json"}]}]}