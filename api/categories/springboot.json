{"name":"springboot","postlist":[{"title":"Spring Boot Admin 的使用","slug":"SpringBoot-Admin的使用","date":"2019-08-09T09:07:34.000Z","updated":"2021-04-19T06:44:39.287Z","comments":true,"path":"api/articles/SpringBoot-Admin的使用.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/81-1f39bf9d2ba5497a8bdfa151df35bbd8.png","content":"<p>【<strong>前情提要</strong>】Spring Boot Actuator 提供了对单个 Spring Boot 应用的监控，信息包含应用状态、内存、线程、堆栈等，比较全面的监控了 Spring Boot 应用的整个生命周期。但是这样监控也有一些问题：第一，所有的监控都需要调用固定的接口来查看，如果全面查看应用状态需要调用很多接口，并且接口返回的 JSON 信息不方便运营人员理解；第二，如果 Spring Boot 应用集群非常大，每个应用都需要调用不同的接口来查看监控信息，操作非常繁琐低效。在这样的背景下，就诞生了另外一个开源软件：<strong>Spring Boot Admin</strong>。</p>\n<hr>\n<h1 id=\"壹、什么是Spring-Boot-Admin\"><a href=\"#壹、什么是Spring-Boot-Admin\" class=\"headerlink\" title=\"壹、什么是Spring Boot Admin\"></a>壹、什么是Spring Boot Admin</h1><p>Spring Boot Admin 是一个管理和监控 Spring Boot 应用程序的开源软件，每个应用都认为是一个客户端，通过 HTTP 或者使用 Eureka 注册到 admin server 中进行展示，Spring Boot Admin UI 部分使用 Vue.js 将数据展示在前端。</p>\n<p>Spring Boot Admin 是一个针对 Spring Boot 的 Actuator 接口进行 UI 美化封装的监控工具，它可以在列表中浏览所有被监控 spring-boot 项目的基本信息、详细的 Health 信息、内存信息、JVM 信息、垃圾回收信息、各种配置信息（比如数据源、缓存列表和命中率）等，还可以直接修改 logger 的 level。</p>\n<p>值得注意的是 Spring Boot Admin 并不是 Spring Boot 官方出品的开源软件，但是其软件质量和使用广泛度都非常的高，并且 Spring Boot Admin 会及时随着 Spring Boot 的更新而更新，当 Spring Boot 推出 2.X 版本时 Spring Boot Admin 也及时进行了更新。</p>\n<p>Spring Boot Admin 2.x 不仅是跟着支持了 Spring Boot 2.x，还在 1.x 的基础上进行了大量的更新和优化:</p>\n<pre><code>重新规划了项目依赖包，让项目中更方便的集成 Spring Boot Admin\n1.x 前端使用了 Angular.js，2.x 使用 Vue 对界面进行了重写，界面美观度提升幅度非常高\n提供了支持 Spring Cloud 的组件\n其他更新，具体参考：Changes with 2.x\n</code></pre>\n<p>Spring Boot Admin 分为服务端和客户端，服务端其实就是一个监控后台用来汇总展示所有的监控信息，客户端就是我们的应用，使用时需要先启动服务端，在启动客户端的时候打开 Actuator 的接口，并指向服务端的地址，这样服务端会定时读取相关信息以达到监控的目的。</p>\n<hr>\n<p>接下来演示如何使用 Spring Boot Admin 对 Spring Boot 应用进行监控。</p>\n<h1 id=\"贰、监控单体应用\"><a href=\"#贰、监控单体应用\" class=\"headerlink\" title=\"贰、监控单体应用\"></a>贰、监控单体应用</h1><p>先给大家展示如何使用 Spring Boot Admin 监控单个 Spring Boot 应用。</p>\n<h2 id=\"Admin-Server-端\"><a href=\"#Admin-Server-端\" class=\"headerlink\" title=\"Admin Server 端\"></a>Admin Server 端</h2><h3 id=\"项目依赖\"><a href=\"#项目依赖\" class=\"headerlink\" title=\"项目依赖\"></a>项目依赖</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">  &lt;groupId&gt;de.codecentric&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">  &lt;artifactId&gt;spring-boot-admin-starter-server&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">  &lt;version&gt;2.1.0&lt;&#x2F;version&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">  &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">  &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>2.x 下只需要添加此一个包即可，其他组件会自动依赖添加。</strong></p>\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><p>server.port=8000</p>\n<p>服务端设置端口为：8000。</p>\n<h3 id=\"启动类\"><a href=\"#启动类\" class=\"headerlink\" title=\"启动类\"></a>启动类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@EnableAdminServer</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AdminServerApplication</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    SpringApplication.run(AdminServerApplication.class, args);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>完成上面三步之后，启动服务端，访问网址 <a href=\"http://localhost:8000/\">http://localhost:8000</a> 可以看到以下界面：<br><img src=\"https://image.eelve.com/eblog/81-1f39bf9d2ba5497a8bdfa151df35bbd8.png\" alt=\"监控页面\"><br>因为刚启动没有应用，因此显示：No applications registered.，同时根据上图也可以看出 applications 页面会展示项目的应用数、实例数和状态三个信息。</p>\n<p>接下来我们构建一个客户端，并注册到服务端。</p>\n<h2 id=\"Admin-Client-端\"><a href=\"#Admin-Client-端\" class=\"headerlink\" title=\"Admin Client 端\"></a>Admin Client 端</h2><h2 id=\"项目依赖-1\"><a href=\"#项目依赖-1\" class=\"headerlink\" title=\"项目依赖\"></a>项目依赖</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependencies&gt;</span><br><span class=\"line\">  &lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;de.codecentric&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-admin-starter-client&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;2.1.0&lt;&#x2F;version&gt;</span><br><span class=\"line\">  &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">  &lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">  &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">&lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>添加 spring-boot-starter-web 是为了使应用处于启动状态，spring-boot-admin-starter-client 会自动添加 Actuator 相关依赖。</strong></p>\n<h3 id=\"配置文件-1\"><a href=\"#配置文件-1\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">server.port</span>=<span class=\"string\">8001</span></span><br><span class=\"line\"><span class=\"meta\">spring.application.name</span>=<span class=\"string\">Admin Client</span></span><br><span class=\"line\"><span class=\"meta\">spring.boot.admin.client.url</span>=<span class=\"string\">http://localhost:8000  </span></span><br><span class=\"line\"><span class=\"meta\">management.endpoints.web.exposure.include</span>=<span class=\"string\">*</span></span><br></pre></td></tr></table></figure>\n<pre><code>spring.boot.admin.client.url 配置 Admin Server 的地址\nmanagement.endpoints.web.exposure.include=* 打开客户端 Actuator 的监控\n</code></pre>\n<h3 id=\"启动类-1\"><a href=\"#启动类-1\" class=\"headerlink\" title=\"启动类\"></a>启动类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AdminClientApplication</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    SpringApplication.run(AdminClientApplication.class, args);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>配置完成之后，启动 Client 端，Admin 服务端会自动检查到客户端的变化，并展示其应用：<br><img src=\"https://image.eelve.com/eblog/82-1b588fee05794b2d94a2f578ba805fbb.png\" alt=\"结果\"><br>页面会展示被监控的服务列表，点击项目名称会进入此应用的详细监控信息：<br><img src=\"https://image.eelve.com/eblog/83-d685df514a0e44b1bd45e5b6bd1a9e64.png\" alt=\"详情\"><br>通过上图可以看出，Spring Boot Admin 以图形化的形式展示了应用的各项信息，这些信息大多都来自于 <strong>Spring Boot Actuator</strong> 提供的接口。利用图形化的形式很容易看到应用的各项参数变化，甚至有些页面还可以进行一些操作，比如改变打印日志的级别等。</p>\n<h3 id=\"点击-journal-页面可以看到应用状态变化的历史过程：\"><a href=\"#点击-journal-页面可以看到应用状态变化的历史过程：\" class=\"headerlink\" title=\"点击 journal 页面可以看到应用状态变化的历史过程：\"></a>点击 journal 页面可以看到应用状态变化的历史过程：</h3><p><img src=\"https://image.eelve.com/eblog/84-fa96d9eee75d47d599f55e27533664e4.png\" alt=\"journal\"></p>\n<h3 id=\"点击第一个菜单-wallboard-可以以更形象的方式查看应用数量启动的时间等。\"><a href=\"#点击第一个菜单-wallboard-可以以更形象的方式查看应用数量启动的时间等。\" class=\"headerlink\" title=\"点击第一个菜单 wallboard 可以以更形象的方式查看应用数量启动的时间等。\"></a>点击第一个菜单 wallboard 可以以更形象的方式查看应用数量启动的时间等。</h3><p><img src=\"https://image.eelve.com/eblog/85-c42df15785a14110b7532b20afee8ca1.png\" alt=\"wallboard \"></p>\n<h1 id=\"叁、监控微服务\"><a href=\"#叁、监控微服务\" class=\"headerlink\" title=\"叁、监控微服务\"></a>叁、监控微服务</h1><p>如果我们使用的是单个 Spring Boot 应用，就需要在每一个被监控的应用中配置 Admin Server 的地址信息；如果应用都注册在 Eureka 中就不需要再对每个应用进行配置，Spring Boot Admin 会自动从注册中心抓取应用的相关信息。</p>\n<p>如果使用了 Spring Cloud 的服务发现功能，就不需要再单独添加 Admin Client 客户端，仅仅需要 Spring Boot Server，其他内容会自动进行配置。</p>\n<p>接下来以 Eureka 作为服务发现的示例来进行演示，实际上也可以使用 Consul 或者 Zookeeper。</p>\n<p>（1）服务端和客户端添加 spring-cloud-starter-eureka 到包依赖中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n<p>（2）启动类添加注解</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableAutoConfiguration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableDiscoveryClient</span></span><br><span class=\"line\"><span class=\"meta\">@EnableAdminServer</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringBootAdminApplication</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(SpringBootAdminApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Configuration</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SecurityPermitAllConfig</span> <span class=\"keyword\">extends</span> <span class=\"title\">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">configure</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">            http.authorizeRequests().anyRequest().permitAll()  </span><br><span class=\"line\">                .and().csrf().disable();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>使用类 <strong>SecurityPermitAllConfig</strong> 关闭了安全验证。</p>\n<p>（3）在客户端中配置服务发现的地址</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">eureka:</span>   </span><br><span class=\"line\">  <span class=\"attr\">instance:</span></span><br><span class=\"line\">    <span class=\"attr\">leaseRenewalIntervalInSeconds:</span> <span class=\"number\">10</span></span><br><span class=\"line\">    <span class=\"attr\">health-check-url-path:</span> <span class=\"string\">/actuator/health</span></span><br><span class=\"line\">    <span class=\"attr\">metadata-map:</span></span><br><span class=\"line\">      <span class=\"attr\">startup:</span> <span class=\"string\">$&#123;random.int&#125;</span>    <span class=\"comment\">#needed to trigger info and endpoint update after restart</span></span><br><span class=\"line\">  <span class=\"attr\">client:</span></span><br><span class=\"line\">    <span class=\"attr\">registryFetchIntervalSeconds:</span> <span class=\"number\">5</span></span><br><span class=\"line\">    <span class=\"attr\">serviceUrl:</span></span><br><span class=\"line\">      <span class=\"attr\">defaultZone:</span> <span class=\"string\">$&#123;EUREKA_SERVICE_URL:http://localhost:8761&#125;/eureka/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">management:</span></span><br><span class=\"line\">  <span class=\"attr\">endpoints:</span></span><br><span class=\"line\">    <span class=\"attr\">web:</span></span><br><span class=\"line\">      <span class=\"attr\">exposure:</span></span><br><span class=\"line\">        <span class=\"attr\">include:</span> <span class=\"string\">&quot;*&quot;</span>  </span><br><span class=\"line\">  <span class=\"attr\">endpoint:</span></span><br><span class=\"line\">    <span class=\"attr\">health:</span></span><br><span class=\"line\">      <span class=\"attr\">show-details:</span> <span class=\"string\">ALWAYS</span></span><br></pre></td></tr></table></figure>\n<p><strong>Spring Cloud</strong> 提供了示例代码可以参考这里：<a href=\"https://github.com/codecentric/spring-boot-admin/tree/master/spring-boot-admin-samples/spring-boot-admin-sample-eureka/\">spring-boot-admin-sample-eureka</a>。</p>\n<p>重启启动服务端和客户端之后，访问服务端的相关地址就可以看到监控页面了。</p>\n<h1 id=\"肆、安全控制\"><a href=\"#肆、安全控制\" class=\"headerlink\" title=\"肆、安全控制\"></a>肆、安全控制</h1><p><strong>Spring Boot Admin</strong> 后台有很多的敏感信息和操作，如果公司不做权限控制可能会影响到公司系统的安全性。Spring Boot Admin 也考虑到了这个因素，可以利用前面的 Spring Security 做安全访问控制，在 spring-boot-admin-server 上进行改造。</p>\n<p>（1）添加 Spring Boot Security 依赖包</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-starter-security&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n<p>（2）添加安全访问控制</p>\n<p>和前面的 Security 配置一样，给项目添加访问控制。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SecuritySecureConfig</span> <span class=\"keyword\">extends</span> <span class=\"title\">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String adminContextPath;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SecuritySecureConfig</span><span class=\"params\">(AdminServerProperties adminServerProperties)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.adminContextPath = adminServerProperties.getContextPath();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">configure</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// @formatter:off</span></span><br><span class=\"line\">        SavedRequestAwareAuthenticationSuccessHandler successHandler = <span class=\"keyword\">new</span> SavedRequestAwareAuthenticationSuccessHandler();</span><br><span class=\"line\">        successHandler.setTargetUrlParameter(<span class=\"string\">&quot;redirectTo&quot;</span>);</span><br><span class=\"line\">        successHandler.setDefaultTargetUrl(adminContextPath + <span class=\"string\">&quot;/&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        http.authorizeRequests()</span><br><span class=\"line\">            .antMatchers(adminContextPath + <span class=\"string\">&quot;/assets/**&quot;</span>).permitAll() </span><br><span class=\"line\">            .antMatchers(adminContextPath + <span class=\"string\">&quot;/login&quot;</span>).permitAll()</span><br><span class=\"line\">            .anyRequest().authenticated() </span><br><span class=\"line\">            .and()</span><br><span class=\"line\">        .formLogin().loginPage(adminContextPath + <span class=\"string\">&quot;/login&quot;</span>).successHandler(successHandler).and() </span><br><span class=\"line\">        .logout().logoutUrl(adminContextPath + <span class=\"string\">&quot;/logout&quot;</span>).and()</span><br><span class=\"line\">        .httpBasic().and() </span><br><span class=\"line\">        .csrf()</span><br><span class=\"line\">            .csrfTokenRepository(CookieCsrfTokenRepository.withHttpOnlyFalse())  </span><br><span class=\"line\">            .ignoringAntMatchers(</span><br><span class=\"line\">                adminContextPath + <span class=\"string\">&quot;/instances&quot;</span>,   </span><br><span class=\"line\">                adminContextPath + <span class=\"string\">&quot;/actuator/**&quot;</span>  </span><br><span class=\"line\">            );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    antMatchers(adminContextPath + <span class=\"string\">&quot;/assets/**&quot;</span>).permitAll() 所有静态内容不做安全验证</span><br><span class=\"line\">    anyRequest().authenticated() 其他请求均需要验证</span><br><span class=\"line\">    formLogin() 配置登录</span><br><span class=\"line\">    logout() 配置登出</span><br><span class=\"line\">    httpBasic() 支持 HTTP，引导 Spring Boot Admin 客户端注册</span><br><span class=\"line\">    csrfTokenRepository(CookieCsrfTokenRepository.withHttpOnlyFalse()) 打开跨站点请求保护 Cookies</span><br><span class=\"line\">    adminContextPath + <span class=\"string\">&quot;/instances&quot;</span> 取消跨站点请求保护 <span class=\"string\">&quot;/instances&quot;</span>，方便 Admin 客户端注册</span><br><span class=\"line\">    adminContextPath + <span class=\"string\">&quot;/actuator/** &quot;</span> 取消跨站点请求保护 <span class=\"string\">&quot;/actuator/**&quot;</span>，可以让 Admin 监控到 Actuator 的相关接口</span><br></pre></td></tr></table></figure>\n<p>然后可以给 security 设置一个用户名和密码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring.security.user.name&#x3D;admin</span><br><span class=\"line\">spring.security.user.password&#x3D;admin</span><br></pre></td></tr></table></figure>\n<p>配置完成之后重启 Admin Server 端，访问网址 <a href=\"http://localhost:8000/\">http://localhost:8000</a> 就会发现需要一个登录的用户名和密码了。<br><img src=\"https://image.eelve.com/eblog/86-dc4b6d05194a4c9786383189c6378f26.png\" alt=\"Admin Server\"><br>使用刚才设置的用户名和密码登录之后，发现注册到 Server 端的服务数成为 0 了，这是客户端统一也需要配置帐户名和密码信息。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring.security.user.name&#x3D;admin</span><br><span class=\"line\">spring.security.user.password&#x3D;admin</span><br></pre></td></tr></table></figure>\n<p>配置完成之后重新启动，在服务端就又可以查看监控到的应用了。</p>\n<h1 id=\"伍、其他方式\"><a href=\"#伍、其他方式\" class=\"headerlink\" title=\"伍、其他方式\"></a>伍、其他方式</h1><p>如果 Actuator 的端口被使用 HTTP 认证保护，那么 Spring Boot Admin Server 访问的时候需要凭证信息，这时候可以使用 metadata 的方式对账户和密码进行配置。</p>\n<h2 id=\"直接使用客户端注册的方式：\"><a href=\"#直接使用客户端注册的方式：\" class=\"headerlink\" title=\"直接使用客户端注册的方式：\"></a>直接使用客户端注册的方式：</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring.boot.admin.client:</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">http://localhost:8080</span></span><br><span class=\"line\">    <span class=\"attr\">instance:</span></span><br><span class=\"line\">      <span class=\"attr\">metadata:</span></span><br><span class=\"line\">        <span class=\"attr\">user.name:</span> <span class=\"string\">$&#123;spring.security.user.name&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">user.password:</span> <span class=\"string\">$&#123;spring.security.user.password&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"使用-Eureka-进行注册的方式：\"><a href=\"#使用-Eureka-进行注册的方式：\" class=\"headerlink\" title=\"使用 Eureka 进行注册的方式：\"></a>使用 Eureka 进行注册的方式：</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">eureka:</span></span><br><span class=\"line\">  <span class=\"attr\">instance:</span></span><br><span class=\"line\">    <span class=\"attr\">metadata-map:</span></span><br><span class=\"line\">      <span class=\"attr\">user.name:</span> <span class=\"string\">$&#123;spring.security.user.name&#125;</span></span><br><span class=\"line\">      <span class=\"attr\">user.password:</span> <span class=\"string\">$&#123;spring.security.user.password&#125;</span></span><br></pre></td></tr></table></figure>\n<p>Eureka 中的 metadataMap 是专门用来存放一些自定义的数据，当注册中心或者其他服务需要此服务的某些配置时可以在 metadataMap 里取。实际上，每个 instance 都有各自的 metadataMap，map 中存放着需要用到的属性。例如，上面配置中的 eureka.instance.metadata-map.user.name，当这个服务成功注册到 Eureka 上，Spring Boot Admin 就会拿到这个 instance，进而拿到 metadataMap 里的属性，然后放入请求头，向此服务发送请求，访问此服务的 Actuator 开放的端点。</p>\n<h1 id=\"陆、邮件告警\"><a href=\"#陆、邮件告警\" class=\"headerlink\" title=\"陆、邮件告警\"></a>陆、邮件告警</h1><p>Spring Boot Admin 将微服务中所有应用信息在后台进行了展示，非常方便我们对微服务整体的监控和治理。但是我们的运营人员也不可能一天 24 小时盯着监控后台，因此如果服务有异常的时候，有对应的邮件告警就太好了，其实 Spring Boot Admin 也给出了支持。</p>\n<p>我们对上面的示例项目 spring-boot-admin-server 进行改造。</p>\n<h2 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">  &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">  &lt;artifactId&gt;spring-boot-starter-mail&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"增加了邮件发送的-starter-包。\"><a href=\"#增加了邮件发送的-starter-包。\" class=\"headerlink\" title=\"增加了邮件发送的 starter 包。\"></a>增加了邮件发送的 starter 包。</h2><h3 id=\"配置文件-2\"><a href=\"#配置文件-2\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">spring.mail.host</span>=<span class=\"string\">smtp.qq.com</span></span><br><span class=\"line\"><span class=\"meta\">spring.mail.username</span>=<span class=\"string\">xxx@qq.com</span></span><br><span class=\"line\"><span class=\"meta\">spring.mail.password</span>=<span class=\"string\">xxx</span></span><br><span class=\"line\"><span class=\"meta\">spring.mail.properties.mail.smtp.auth</span>=<span class=\"string\">true</span></span><br><span class=\"line\"><span class=\"meta\">spring.mail.properties.mail.smtp.starttls.enable</span>=<span class=\"string\">true</span></span><br><span class=\"line\"><span class=\"meta\">spring.mail.properties.mail.smtp.starttls.required</span>=<span class=\"string\">true</span></span><br><span class=\"line\"><span class=\"meta\">spring.boot.admin.notify.mail.from</span>=<span class=\"string\">yyyy@qq.com</span></span><br><span class=\"line\"><span class=\"meta\">spring.boot.admin.notify.mail.to</span>=<span class=\"string\">zzz@qq.com</span></span><br></pre></td></tr></table></figure>\n<p><strong>在配置文件中添加邮件发送相关信息：邮件的发送者、接受者、协议、移动授权码等</strong>。</p>\n<p>配置完成后，重新启动项目 spring-boot-admin-server，这样 Admin Server 就具备了邮件告警的功能，默认情况下 Admin Server 对 Eureka 中的服务上下线都进行了监控，当服务上下线的时候我们就会收到相应的告警邮件。</p>\n<p>当然这只是最基本的邮件监控，在实际的使用过程中，需要根据情况对邮件告警内容进行自定义，比如监控堆内存的使用情况，当到达一定比例的时候进行告警等。</p>\n<p>【写在后面的话】Spring Boot Admin 解决了我们对大规模 Spring Boot 应用监控的需求，Spring Boot Admin 充分利用了 Actuator 开放的相关接口，采用优秀的图形界面将这些信息进行了展示，方便我们更加直观的查看集群中应用的状态。Spring Boot Admin 不仅可以监控单个 Spring Boot 应用，也可以结合 Spring Cloud 监控注册到服务中心的所有应用状态，再结合报警系统的使用就可以随时感知到应用的状态变化。在实际工作中 Spring Boot Admin 是我们在后期运营中频繁用到的一个组件，应该作为重点关注。</p>\n<hr>\n<p>最后是一个用http方式监听的demo：<a href=\"https://github.com/eelve/springbootadmin\">Spring Boot Admin使用http连接server端</a></p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"springboot","path":"api/categories/springboot.json"}],"tags":[{"name":"java","path":"api/tags/java.json"},{"name":"springboot","path":"api/tags/springboot.json"},{"name":"springboot-admin","path":"api/tags/springboot-admin.json"}]},{"title":"spring-boot-starter-quartz集群实践","slug":"spring-boot-starter-quartz集群实践","date":"2019-08-09T09:06:12.000Z","updated":"2021-04-19T06:44:39.180Z","comments":true,"path":"api/articles/spring-boot-starter-quartz集群实践.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/1-a8a710a578ad47a8afc8ace72f3cbd7c.png","content":"<p>【<strong>前情提要</strong>】由于项目需要，需要一个定时任务集群，故此有了这个spring-boot-starter-quartz集群的实践。springboot的版本为：2.1.6.RELEASE；quartz的版本为：2.3.1.假如这里一共有两个定时任务的节点，它们的代码完全一样。</p>\n<hr>\n<h1 id=\"壹-jar包依赖\"><a href=\"#壹-jar包依赖\" class=\"headerlink\" title=\"壹.jar包依赖\"></a>壹.jar包依赖</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;properties&gt;</span><br><span class=\"line\">        &lt;java.version&gt;1.8&lt;&#x2F;java.version&gt;</span><br><span class=\"line\">    &lt;&#x2F;properties&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;dependencies&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;spring-boot-starter&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;spring-boot-starter-quartz&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;scope&gt;runtime&lt;&#x2F;scope&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;spring-boot-starter-jdbc&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.projectlombok&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;lombok&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;optional&gt;true&lt;&#x2F;optional&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">    &lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure>\n<p>这里选择将定时任务的数据入库，避免数据直接存在内存中，因应用重启造成的数据丢失和做集群控制。</p>\n<h1 id=\"贰、项目配置\"><a href=\"#贰、项目配置\" class=\"headerlink\" title=\"贰、项目配置\"></a>贰、项目配置</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">server:</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"number\">8080</span></span><br><span class=\"line\">    <span class=\"attr\">servlet:</span></span><br><span class=\"line\">      <span class=\"attr\">context-path:</span> <span class=\"string\">/lovin</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://127.0.0.1:3306/training?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=true</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">driver-class-name:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\">  <span class=\"attr\">quartz:</span></span><br><span class=\"line\">    <span class=\"attr\">job-store-type:</span> <span class=\"string\">jdbc</span> <span class=\"comment\">#数据库方式</span></span><br><span class=\"line\">    <span class=\"attr\">jdbc:</span></span><br><span class=\"line\">      <span class=\"attr\">initialize-schema:</span> <span class=\"string\">never</span> <span class=\"comment\">#不初始化表结构</span></span><br><span class=\"line\">    <span class=\"attr\">properties:</span></span><br><span class=\"line\">      <span class=\"attr\">org:</span></span><br><span class=\"line\">        <span class=\"attr\">quartz:</span></span><br><span class=\"line\">          <span class=\"attr\">scheduler:</span></span><br><span class=\"line\">            <span class=\"attr\">instanceId:</span> <span class=\"string\">AUTO</span> <span class=\"comment\">#默认主机名和时间戳生成实例ID,可以是任何字符串，但对于所有调度程序来说，必须是唯一的 对应qrtz_scheduler_state INSTANCE_NAME字段</span></span><br><span class=\"line\">            <span class=\"comment\">#instanceName: clusteredScheduler #quartzScheduler</span></span><br><span class=\"line\">          <span class=\"attr\">jobStore:</span></span><br><span class=\"line\">            <span class=\"attr\">class:</span> <span class=\"string\">org.quartz.impl.jdbcjobstore.JobStoreTX</span> <span class=\"comment\">#持久化配置</span></span><br><span class=\"line\">            <span class=\"attr\">driverDelegateClass:</span> <span class=\"string\">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span> <span class=\"comment\">#我们仅为数据库制作了特定于数据库的代理</span></span><br><span class=\"line\">            <span class=\"attr\">useProperties:</span> <span class=\"literal\">false</span> <span class=\"comment\">#以指示JDBCJobStore将JobDataMaps中的所有值都作为字符串，因此可以作为名称 - 值对存储而不是在BLOB列中以其序列化形式存储更多复杂的对象。从长远来看，这是更安全的，因为您避免了将非String类序列化为BLOB的类版本问题。</span></span><br><span class=\"line\">            <span class=\"attr\">tablePrefix:</span> <span class=\"string\">qrtz_</span>  <span class=\"comment\">#数据库表前缀</span></span><br><span class=\"line\">            <span class=\"attr\">misfireThreshold:</span> <span class=\"number\">60000</span> <span class=\"comment\">#在被认为“失火”之前，调度程序将“容忍”一个Triggers将其下一个启动时间通过的毫秒数。默认值（如果您在配置中未输入此属性）为60000（60秒）。</span></span><br><span class=\"line\">            <span class=\"attr\">clusterCheckinInterval:</span> <span class=\"number\">5000</span> <span class=\"comment\">#设置此实例“检入”*与群集的其他实例的频率（以毫秒为单位）。影响检测失败实例的速度。</span></span><br><span class=\"line\">            <span class=\"attr\">isClustered:</span> <span class=\"literal\">true</span> <span class=\"comment\">#打开群集功能</span></span><br><span class=\"line\">          <span class=\"attr\">threadPool:</span> <span class=\"comment\">#连接池</span></span><br><span class=\"line\">            <span class=\"attr\">class:</span> <span class=\"string\">org.quartz.simpl.SimpleThreadPool</span></span><br><span class=\"line\">            <span class=\"attr\">threadCount:</span> <span class=\"number\">10</span></span><br><span class=\"line\">            <span class=\"attr\">threadPriority:</span> <span class=\"number\">5</span></span><br><span class=\"line\">            <span class=\"attr\">threadsInheritContextClassLoaderOfInitializingThread:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p><strong>这里需要注意的是两个节点的端口号应该不一致，避免冲突</strong></p>\n<h1 id=\"叁、实现一个Job\"><a href=\"#叁、实现一个Job\" class=\"headerlink\" title=\"叁、实现一个Job\"></a>叁、实现一个Job</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Job</span> <span class=\"keyword\">extends</span> <span class=\"title\">QuartzJobBean</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">executeInternal</span><span class=\"params\">(JobExecutionContext jobExecutionContext)</span> <span class=\"keyword\">throws</span> JobExecutionException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 获取参数</span></span><br><span class=\"line\">        JobDataMap jobDataMap = jobExecutionContext.getJobDetail().getJobDataMap();</span><br><span class=\"line\">        <span class=\"comment\">// 业务逻辑 ...</span></span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;------springbootquartzonejob执行&quot;</span>+jobDataMap.get(<span class=\"string\">&quot;name&quot;</span>).toString()+<span class=\"string\">&quot;###############&quot;</span>+jobExecutionContext.getTrigger());</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p><strong>其中的日志输出是为了便于观察任务执行情况</strong></p>\n<h1 id=\"肆、封装定时任务操作\"><a href=\"#肆、封装定时任务操作\" class=\"headerlink\" title=\"肆、封装定时任务操作\"></a>肆、封装定时任务操作</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QuartzService</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Scheduler scheduler;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostConstruct</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">startScheduler</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            scheduler.start();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 增加一个job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobClass</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务实现类</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务名称</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务组名</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobTime</span></span><br><span class=\"line\"><span class=\"comment\">     *            时间表达式 (这是每隔多少秒为一次任务)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobTimes</span></span><br><span class=\"line\"><span class=\"comment\">     *            运行的次数 （&lt;0:表示不限次数）</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobData</span></span><br><span class=\"line\"><span class=\"comment\">     *            参数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addJob</span><span class=\"params\">(Class&lt;? extends QuartzJobBean&gt; jobClass, String jobName, String jobGroupName, <span class=\"keyword\">int</span> jobTime,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                       <span class=\"keyword\">int</span> jobTimes, Map jobData)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 任务名称和组构成任务key</span></span><br><span class=\"line\">            JobDetail jobDetail = JobBuilder.newJob(jobClass).withIdentity(jobName, jobGroupName)</span><br><span class=\"line\">                    .build();</span><br><span class=\"line\">            <span class=\"comment\">// 设置job参数</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(jobData!= <span class=\"keyword\">null</span> &amp;&amp; jobData.size()&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                jobDetail.getJobDataMap().putAll(jobData);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 使用simpleTrigger规则</span></span><br><span class=\"line\">            Trigger trigger = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (jobTimes &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                trigger = TriggerBuilder.newTrigger().withIdentity(jobName, jobGroupName)</span><br><span class=\"line\">                        .withSchedule(SimpleScheduleBuilder.repeatSecondlyForever(<span class=\"number\">1</span>).withIntervalInSeconds(jobTime))</span><br><span class=\"line\">                        .startNow().build();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                trigger = TriggerBuilder</span><br><span class=\"line\">                        .newTrigger().withIdentity(jobName, jobGroupName).withSchedule(SimpleScheduleBuilder</span><br><span class=\"line\">                                .repeatSecondlyForever(<span class=\"number\">1</span>).withIntervalInSeconds(jobTime).withRepeatCount(jobTimes))</span><br><span class=\"line\">                        .startNow().build();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            scheduler.scheduleJob(jobDetail, trigger);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 增加一个job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobClass</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务实现类</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务名称(建议唯一)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务组名</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobTime</span></span><br><span class=\"line\"><span class=\"comment\">     *            时间表达式 （如：0/5 * * * * ? ）</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobData</span></span><br><span class=\"line\"><span class=\"comment\">     *            参数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addJob</span><span class=\"params\">(Class&lt;? extends QuartzJobBean&gt; jobClass, String jobName, String jobGroupName, String jobTime, Map jobData)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 创建jobDetail实例，绑定Job实现类</span></span><br><span class=\"line\">            <span class=\"comment\">// 指明job的名称，所在组的名称，以及绑定job类</span></span><br><span class=\"line\">            <span class=\"comment\">// 任务名称和组构成任务key</span></span><br><span class=\"line\">            JobDetail jobDetail = JobBuilder.newJob(jobClass).withIdentity(jobName, jobGroupName)</span><br><span class=\"line\">                    .build();</span><br><span class=\"line\">            <span class=\"comment\">// 设置job参数</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(jobData!= <span class=\"keyword\">null</span> &amp;&amp; jobData.size()&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                jobDetail.getJobDataMap().putAll(jobData);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 定义调度触发规则</span></span><br><span class=\"line\">            <span class=\"comment\">// 使用cornTrigger规则</span></span><br><span class=\"line\">            <span class=\"comment\">// 触发器key</span></span><br><span class=\"line\">            Trigger trigger = TriggerBuilder.newTrigger().withIdentity(jobName, jobGroupName)</span><br><span class=\"line\">                    .startAt(DateBuilder.futureDate(<span class=\"number\">1</span>, IntervalUnit.SECOND))</span><br><span class=\"line\">                    .withSchedule(CronScheduleBuilder.cronSchedule(jobTime)).startNow().build();</span><br><span class=\"line\">            <span class=\"comment\">// 把作业和触发器注册到任务调度中</span></span><br><span class=\"line\">            scheduler.scheduleJob(jobDetail, trigger);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 修改 一个job的 时间表达式</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobTime</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateJob</span><span class=\"params\">(String jobName, String jobGroupName, String jobTime)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            TriggerKey triggerKey = TriggerKey.triggerKey(jobName, jobGroupName);</span><br><span class=\"line\">            CronTrigger trigger = (CronTrigger) scheduler.getTrigger(triggerKey);</span><br><span class=\"line\">            trigger = trigger.getTriggerBuilder().withIdentity(triggerKey)</span><br><span class=\"line\">                    .withSchedule(CronScheduleBuilder.cronSchedule(jobTime)).build();</span><br><span class=\"line\">            <span class=\"comment\">// 重启触发器</span></span><br><span class=\"line\">            scheduler.rescheduleJob(triggerKey, trigger);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 删除任务一个job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务名称</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务组名</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deleteJob</span><span class=\"params\">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            scheduler.deleteJob(<span class=\"keyword\">new</span> JobKey(jobName, jobGroupName));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 暂停一个job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">pauseJob</span><span class=\"params\">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class=\"line\">            scheduler.pauseJob(jobKey);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 恢复一个job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">resumeJob</span><span class=\"params\">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class=\"line\">            scheduler.resumeJob(jobKey);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 立即执行一个job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">runAJobNow</span><span class=\"params\">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class=\"line\">            scheduler.triggerJob(jobKey);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取所有计划中的任务列表</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Map&lt;String, Object&gt;&gt; queryAllJob() &#123;</span><br><span class=\"line\">        List&lt;Map&lt;String, Object&gt;&gt; jobList = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            GroupMatcher&lt;JobKey&gt; matcher = GroupMatcher.anyJobGroup();</span><br><span class=\"line\">            Set&lt;JobKey&gt; jobKeys = scheduler.getJobKeys(matcher);</span><br><span class=\"line\">            jobList = <span class=\"keyword\">new</span> ArrayList&lt;Map&lt;String, Object&gt;&gt;();</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (JobKey jobKey : jobKeys) &#123;</span><br><span class=\"line\">                List&lt;? extends Trigger&gt; triggers = scheduler.getTriggersOfJob(jobKey);</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (Trigger trigger : triggers) &#123;</span><br><span class=\"line\">                    Map&lt;String, Object&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">                    map.put(<span class=\"string\">&quot;jobName&quot;</span>, jobKey.getName());</span><br><span class=\"line\">                    map.put(<span class=\"string\">&quot;jobGroupName&quot;</span>, jobKey.getGroup());</span><br><span class=\"line\">                    map.put(<span class=\"string\">&quot;description&quot;</span>, <span class=\"string\">&quot;触发器:&quot;</span> + trigger.getKey());</span><br><span class=\"line\">                    Trigger.TriggerState triggerState = scheduler.getTriggerState(trigger.getKey());</span><br><span class=\"line\">                    map.put(<span class=\"string\">&quot;jobStatus&quot;</span>, triggerState.name());</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (trigger <span class=\"keyword\">instanceof</span> CronTrigger) &#123;</span><br><span class=\"line\">                        CronTrigger cronTrigger = (CronTrigger) trigger;</span><br><span class=\"line\">                        String cronExpression = cronTrigger.getCronExpression();</span><br><span class=\"line\">                        map.put(<span class=\"string\">&quot;jobTime&quot;</span>, cronExpression);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    jobList.add(map);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> jobList;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取所有正在运行的job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Map&lt;String, Object&gt;&gt; queryRunJob() &#123;</span><br><span class=\"line\">        List&lt;Map&lt;String, Object&gt;&gt; jobList = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            List&lt;JobExecutionContext&gt; executingJobs = scheduler.getCurrentlyExecutingJobs();</span><br><span class=\"line\">            jobList = <span class=\"keyword\">new</span> ArrayList&lt;Map&lt;String, Object&gt;&gt;(executingJobs.size());</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (JobExecutionContext executingJob : executingJobs) &#123;</span><br><span class=\"line\">                Map&lt;String, Object&gt; map = <span class=\"keyword\">new</span> HashMap&lt;String, Object&gt;();</span><br><span class=\"line\">                JobDetail jobDetail = executingJob.getJobDetail();</span><br><span class=\"line\">                JobKey jobKey = jobDetail.getKey();</span><br><span class=\"line\">                Trigger trigger = executingJob.getTrigger();</span><br><span class=\"line\">                map.put(<span class=\"string\">&quot;jobName&quot;</span>, jobKey.getName());</span><br><span class=\"line\">                map.put(<span class=\"string\">&quot;jobGroupName&quot;</span>, jobKey.getGroup());</span><br><span class=\"line\">                map.put(<span class=\"string\">&quot;description&quot;</span>, <span class=\"string\">&quot;触发器:&quot;</span> + trigger.getKey());</span><br><span class=\"line\">                Trigger.TriggerState triggerState = scheduler.getTriggerState(trigger.getKey());</span><br><span class=\"line\">                map.put(<span class=\"string\">&quot;jobStatus&quot;</span>, triggerState.name());</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (trigger <span class=\"keyword\">instanceof</span> CronTrigger) &#123;</span><br><span class=\"line\">                    CronTrigger cronTrigger = (CronTrigger) trigger;</span><br><span class=\"line\">                    String cronExpression = cronTrigger.getCronExpression();</span><br><span class=\"line\">                    map.put(<span class=\"string\">&quot;jobTime&quot;</span>, cronExpression);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                jobList.add(map);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> jobList;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"陆、初始化任务\"><a href=\"#陆、初始化任务\" class=\"headerlink\" title=\"陆、初始化任务\"></a>陆、初始化任务</h1><p>这里不准备给用户用web界面来配置定时任务，故此采用<strong>CommandLineRunner</strong>来子啊应用初始化的时候来初始化任务。只需要实现CommandLineRunner的run()方法即可。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">(String... args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        HashMap&lt;String,Object&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">        map.put(<span class=\"string\">&quot;name&quot;</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        quartzService.deleteJob(<span class=\"string\">&quot;job&quot;</span>, <span class=\"string\">&quot;test&quot;</span>);</span><br><span class=\"line\">        quartzService.addJob(Job.class, <span class=\"string\">&quot;job&quot;</span>, <span class=\"string\">&quot;test&quot;</span>, <span class=\"string\">&quot;0 * * * * ?&quot;</span>, map);</span><br><span class=\"line\"></span><br><span class=\"line\">        map.put(<span class=\"string\">&quot;name&quot;</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        quartzService.deleteJob(<span class=\"string\">&quot;job2&quot;</span>, <span class=\"string\">&quot;test&quot;</span>);</span><br><span class=\"line\">        quartzService.addJob(Job.class, <span class=\"string\">&quot;job2&quot;</span>, <span class=\"string\">&quot;test&quot;</span>, <span class=\"string\">&quot;10 * * * * ?&quot;</span>, map);</span><br><span class=\"line\"></span><br><span class=\"line\">        map.put(<span class=\"string\">&quot;name&quot;</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">        quartzService.deleteJob(<span class=\"string\">&quot;job3&quot;</span>, <span class=\"string\">&quot;test2&quot;</span>);</span><br><span class=\"line\">        quartzService.addJob(Job.class, <span class=\"string\">&quot;job3&quot;</span>, <span class=\"string\">&quot;test2&quot;</span>, <span class=\"string\">&quot;15 * * * * ?&quot;</span>, map);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"柒、测试验证\"><a href=\"#柒、测试验证\" class=\"headerlink\" title=\"柒、测试验证\"></a>柒、测试验证</h1><p>分别夏侯启动两个应用，然后观察任务执行，以及在运行过程中杀死某个服务，来观察定时任务的执行。<br><img src=\"https://image.eelve.com/eblog/1-a8a710a578ad47a8afc8ace72f3cbd7c.png\" alt=\"SpringbootquartzoneApplication\"><br><img src=\"https://image.eelve.com/eblog/2-db731d38c3ed4b4b8123482c9b3ef28d.png\" alt=\"SpringbootquartztwoApplication\"></p>\n<p>【<strong>写在后面的话</strong>】下面给出的是所需要脚本的连接地址：<a href=\"http://www.quartz-scheduler.org/downloads/\">脚本下载地址</a>，另外这边又一个自己实现的<a href=\"https://github.com/eelve/springbootquartzs.git\">demo</a></p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"springboot","path":"api/categories/springboot.json"}],"tags":[{"name":"java","path":"api/tags/java.json"},{"name":"springboot","path":"api/tags/springboot.json"},{"name":"quartz","path":"api/tags/quartz.json"}]},{"title":"springboot+jsp打jar问题","slug":"springboot-jsp打jar问题","date":"2019-08-09T09:11:29.000Z","updated":"2021-04-19T06:44:39.192Z","comments":true,"path":"api/articles/springboot-jsp打jar问题.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/O$VVNDUD1GCU8FT%5DQH5Z@TM-23f04197a92d4a5db24b6e3fb656b7c1.png","content":"<p>【<strong>前情提要</strong>】最近做了一个项目，项目是springboot+jsp结构的，但是在发布生产环境的时候又需要用maven打成jar包，但是一开始的默认配置都不成功。下面的文章就是具体的解决过程。</p>\n<hr>\n<h1 id=\"壹、项目结构\"><a href=\"#壹、项目结构\" class=\"headerlink\" title=\"壹、项目结构\"></a>壹、项目结构</h1><p><img src=\"https://image.eelve.com/eblog/O$VVNDUD1GCU8FT%5DQH5Z@TM-23f04197a92d4a5db24b6e3fb656b7c1.png\" alt=\"项目结构\"></p>\n<h1 id=\"贰、异常现象\"><a href=\"#贰、异常现象\" class=\"headerlink\" title=\"贰、异常现象\"></a>贰、异常现象</h1><p>使用的JDK为1.8，springboot版本为：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.5.6.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">relativePath</span>/&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.build.sourceEncoding</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.reporting.outputEncoding</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">java.version</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">java.version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>打成的jar只包含class文件，没有见资源文件引入。<br><img src=\"https://image.eelve.com/eblog/20190713-90f9d3c88e4940de8c8faaa0b2d4ec7c.png\" alt=\"没有包含resourse的编译结果\"></p>\n<h1 id=\"叁、解决办法\"><a href=\"#叁、解决办法\" class=\"headerlink\" title=\"叁、解决办法\"></a>叁、解决办法</h1><h2 id=\"1-添加资源路径的映射\"><a href=\"#1-添加资源路径的映射\" class=\"headerlink\" title=\"1. 添加资源路径的映射\"></a>1. 添加资源路径的映射</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/resources<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/**<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!-- 开启过滤，用指定的参数替换directory下的文件中的参数 --&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/webapp<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">targetPath</span>&gt;</span>META-INF/resources<span class=\"tag\">&lt;/<span class=\"name\">targetPath</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/**<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/java<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">excludes</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">exclude</span>&gt;</span></span><br><span class=\"line\">                        **/*.java</span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">exclude</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">excludes</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-修改maven编译版本为1-4-2\"><a href=\"#2-修改maven编译版本为1-4-2\" class=\"headerlink\" title=\"2. 修改maven编译版本为1.4.2\"></a>2. 修改maven编译版本为1.4.2</h2><p>只有使用这个版本打jar包才能解析jsp</p>\n<h2 id=\"3-设置mainClass\"><a href=\"#3-设置mainClass\" class=\"headerlink\" title=\"3. 设置mainClass\"></a>3. 设置mainClass</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!-- maven插件 --&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.4.2.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">mainClass</span>&gt;</span>com.gt.LaysshApplication<span class=\"tag\">&lt;/<span class=\"name\">mainClass</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-添加视图配置（可选）\"><a href=\"#4-添加视图配置（可选）\" class=\"headerlink\" title=\"4. 添加视图配置（可选）\"></a>4. 添加视图配置（可选）</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring.mvc.view.prefix=/WEB-INF/jsp/</span><br><span class=\"line\"></span><br><span class=\"line\">spring.mvc.view.suffix=.jsp</span><br></pre></td></tr></table></figure>\n<p>下面给出一个比较完整的maven编译配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/resources<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/**<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!-- 开启过滤，用指定的参数替换directory下的文件中的参数 --&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/webapp<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">targetPath</span>&gt;</span>META-INF/resources<span class=\"tag\">&lt;/<span class=\"name\">targetPath</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/**<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/java<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">excludes</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">exclude</span>&gt;</span></span><br><span class=\"line\">                        **/*.java</span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">exclude</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">excludes</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!-- maven插件 --&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.4.2.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">mainClass</span>&gt;</span>com.gt.MyApplication<span class=\"tag\">&lt;/<span class=\"name\">mainClass</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>下面就是修改编译配置之后的结果</p>\n<p><img src=\"https://image.eelve.com/eblog/201907192-13a348f78e4c4d1cb0b6485cf535dfbe.png\" alt=\"正确的结果\"></p>\n<hr>\n<p>【写在后面的话】现代的模板解析引擎已经有了这么多了，为什么不试一下<strong>thymeleaf</strong>，但是在最近的项目中碰到了th:src标签不解析的问题，目前还不清楚具体原因，而且相同的写法在其他页面都生效，真是怪异啊。鉴于目前还是又很多人使用springboot+jsp来进行开发，但是因为使用IDEA工具创建的SpringBoot项目本身是没有webapp目录的。如果我们想要添加webapp目录的话，可以手动添加。下面就简单的来说一下配置过程。</p>\n<hr>\n<h2 id=\"1-点开项目结构管理，点击IDEA右上角的Project-Structure\"><a href=\"#1-点开项目结构管理，点击IDEA右上角的Project-Structure\" class=\"headerlink\" title=\"1.点开项目结构管理，点击IDEA右上角的Project Structure\"></a>1.点开项目结构管理，点击IDEA右上角的Project Structure</h2><p><img src=\"https://image.eelve.com/eblog/201907193-7d050c6d01c1449f999bb49a5c11fda8.png\" alt=\"Project Structure\"></p>\n<h2 id=\"2-先点击下图中的-号，再点击Web\"><a href=\"#2-先点击下图中的-号，再点击Web\" class=\"headerlink\" title=\"2.先点击下图中的+号，再点击Web\"></a>2.先点击下图中的+号，再点击Web</h2><p><img src=\"https://image.eelve.com/eblog/2019071904-f795ae6044024bafbd02136c86fbfbda.png\" alt=\"2019071904\"></p>\n<h2 id=\"3-修改配置\"><a href=\"#3-修改配置\" class=\"headerlink\" title=\"3.修改配置\"></a>3.修改配置</h2><p>下图是修改配置前的默认配置<br><img src=\"https://image.eelve.com/eblog/20190705-bb62a58b15d24b098aa2db949d18de32.png\" alt=\"修改前的配置\"><br>下面将webapp配置到传统的main目录下<br><img src=\"https://image.eelve.com/eblog/2019071906-d580c788cbd94ff7ba7cb43d70fb5ebb.png\" alt=\"修改后的配置\"><br><img src=\"https://image.eelve.com/eblog/2019071906-4c565cc7039a4ed7b0dff2044d3e1bae.png\" alt=\"配置Artifacts\"><br><img src=\"https://image.eelve.com/eblog/2019071907-1a3c18ec66514327b6f5b635dfde0f67.png\" alt=\"最后的配置成功的结果\"></p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"springboot","path":"api/categories/springboot.json"}],"tags":[{"name":"java","path":"api/tags/java.json"},{"name":"springboot","path":"api/tags/springboot.json"},{"name":"jsp","path":"api/tags/jsp.json"},{"name":"jar","path":"api/tags/jar.json"}]},{"title":"SpringBoot打可执行war包","slug":"springboot-war","date":"2020-04-29T06:23:21.000Z","updated":"2021-04-19T06:44:39.199Z","comments":true,"path":"api/articles/springboot-war.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png","content":"<p>【<strong>前情提要</strong>】最近做了一个Springboot项目，但是最后需要打成WAR包在容器中部署，下面就简单记录一下。</p>\n<hr>\n<h1 id=\"壹、修改pom文件\"><a href=\"#壹、修改pom文件\" class=\"headerlink\" title=\"壹、修改pom文件\"></a>壹、修改pom文件</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.eelve<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springboot-war<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 打包方式 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>war<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2.6.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">relativePath</span>/&gt;</span> <span class=\"comment\">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- 嵌入式tomcat相关jar将被放入到WEB-INF\\lib-provided下 --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 打包插件 --&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"贰、修改启动类\"><a href=\"#贰、修改启动类\" class=\"headerlink\" title=\"贰、修改启动类\"></a>贰、修改启动类</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.eelve.springboot.war;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.web.support.SpringBootServletInitializer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringbootWarApplication</span> <span class=\"keyword\">extends</span> <span class=\"title\">SpringBootServletInitializer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> SpringApplicationBuilder <span class=\"title\">configure</span><span class=\"params\">(SpringApplicationBuilder application)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> application.sources(SpringbootWarApplication.class);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tSpringApplication.run(SpringbootWarApplication.class, args);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<hr>\n<p>【<strong>后面的话</strong>】使用maven打包(clean package)，生成的war包可以用于传统的部署方式（外部tomcat），也可以直接使用java -jar 的方式运行。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"springboot","path":"api/categories/springboot.json"}],"tags":[{"name":"java","path":"api/tags/java.json"},{"name":"springboot","path":"api/tags/springboot.json"},{"name":"jar","path":"api/tags/jar.json"}]},{"title":"使用Jasypt对SpringBoot配置文件加密","slug":"使用Jasypt对SpringBoot配置文件加密","date":"2019-08-09T09:14:23.000Z","updated":"2021-04-19T06:44:39.204Z","comments":true,"path":"api/articles/使用Jasypt对SpringBoot配置文件加密.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/springbootjasypydiagrams-3a7616cc841c4f7583fc7173e32aaab4.png","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a><strong>前言</strong></h1><p>在日前安全形势越来越严重的情况下，让我意识到在项目中存在一个我们经常忽略的漏洞，那就是我们的项目的配置文件中配置信息的安全，尤其是数据库连接的用户名和密码的安全。所以这里我们就需要对数据库的用户名和密码进行加密，这也是本文的由来。本文采用Jasypt对Spring Boot配置文件加密的相关方法，其实呢，也还有其他方案，具体的会在后面的相关文章中说明。</p>\n<h1 id=\"引入jasypt\"><a href=\"#引入jasypt\" class=\"headerlink\" title=\"引入jasypt\"></a><strong>引入jasypt</strong></h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.ulisesbocchio<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jasypt-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"1-生成要加密的字符串\"><a href=\"#1-生成要加密的字符串\" class=\"headerlink\" title=\"1.生成要加密的字符串\"></a><strong>1.生成要加密的字符串</strong></h1><h2 id=\"1-1-将数据库的用户名和密码进行加密\"><a href=\"#1-1-将数据库的用户名和密码进行加密\" class=\"headerlink\" title=\"1.1 将数据库的用户名和密码进行加密\"></a>1.1 将数据库的用户名和密码进行加密</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">contextLoads</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        BasicTextEncryptor textEncryptor = <span class=\"keyword\">new</span> BasicTextEncryptor();</span><br><span class=\"line\">        <span class=\"comment\">//加密所需的salt(盐)</span></span><br><span class=\"line\">        textEncryptor.setPassword(<span class=\"string\">&quot;1Qaz0oKm&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//要加密的数据（数据库的用户名或密码）</span></span><br><span class=\"line\">        String username = textEncryptor.encrypt(<span class=\"string\">&quot;root&quot;</span>);</span><br><span class=\"line\">        String password = textEncryptor.encrypt(<span class=\"string\">&quot;root&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;username:&quot;</span>+username);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;password:&quot;</span>+password);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p><strong>输出信息</strong></p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">username:NZmLHOOHX0SEjc285iG9YQ==</span><br><span class=\"line\">password:1JByM5wu5o+9H1Ba2o++Pg==</span><br><span class=\"line\">2019-06-14 14:55:49.863  INFO 8904 --- [       Thread-3] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService &#x27;applicationTaskExecutor&#x27;</span><br><span class=\"line\">2019-06-14 14:55:49.863  INFO 8904 --- [       Thread-3] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit &#x27;default&#x27;</span><br><span class=\"line\">2019-06-14 14:55:49.863  INFO 8904 --- [       Thread-3] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...</span><br><span class=\"line\">2019-06-14 14:55:49.878  INFO 8904 --- [       Thread-3] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-2-或者使用Maven下载好的jar包加密-Maven-org-jasypt-jasypt-2-0-0-jasypt-2-0-0-jar\"><a href=\"#1-2-或者使用Maven下载好的jar包加密-Maven-org-jasypt-jasypt-2-0-0-jasypt-2-0-0-jar\" class=\"headerlink\" title=\"1.2. 或者使用Maven下载好的jar包加密\\Maven\\org\\jasypt\\jasypt\\2.0.0\\jasypt-2.0.0.jar\"></a>1.2. 或者使用Maven下载好的jar包加密\\Maven\\org\\jasypt\\jasypt\\2.0.0\\jasypt-2.0.0.jar</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -cp jasypt-1.9.2.jar org.jasypt.intf.cli.JasyptPBEStringEncryptionCLI password=1Qaz0oKm algorithm=PBEWithMD5AndDES input=root</span><br></pre></td></tr></table></figure>\n<p><strong>输出信息</strong></p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">----ENVIRONMENT-----------------</span><br><span class=\"line\">Runtime: Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.171-b11</span><br><span class=\"line\"></span><br><span class=\"line\">----ARGUMENTS-------------------</span><br><span class=\"line\">input: root</span><br><span class=\"line\">algorithm: PBEWithMD5AndDES</span><br><span class=\"line\">password: 1Qaz0oKm </span><br><span class=\"line\"></span><br><span class=\"line\">----OUTPUT----------------------</span><br><span class=\"line\">NZmLHOOHX0SEjc285iG9YQ==</span><br></pre></td></tr></table></figure>\n<p>拷贝-OUTPUT-下的结果即可</p>\n<h1 id=\"2-配置properties文件\"><a href=\"#2-配置properties文件\" class=\"headerlink\" title=\"2.配置properties文件\"></a><strong>2.配置properties文件</strong></h1><p>将生成的加密串配置ENC(加密串)到application.properties中</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">8080</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://localhost:3306/test?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=true</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">ENC(GHK23XVFNHoQQ97vIW523Q==)</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">ENC(aTKef0XcG05Cfzao92EqqQ==)</span></span><br><span class=\"line\">    <span class=\"attr\">data-username:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\">  <span class=\"attr\">jpa:</span></span><br><span class=\"line\">    <span class=\"attr\">show-sql:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">database-platform:</span> <span class=\"string\">org.hibernate.dialect.MySQL5InnoDBDialect</span></span><br><span class=\"line\">    <span class=\"attr\">database:</span> <span class=\"string\">MYSQL</span></span><br><span class=\"line\">    <span class=\"attr\">hibernate:</span></span><br><span class=\"line\">      <span class=\"attr\">ddl-auto:</span> <span class=\"string\">update</span></span><br><span class=\"line\"><span class=\"attr\">jasypt:</span></span><br><span class=\"line\">  <span class=\"attr\">encryptor:</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">1Qaz0oKm</span> <span class=\"comment\">#加密所需的salt(盐)</span></span><br><span class=\"line\">    <span class=\"comment\">#algorithm: PBEWithMD5AndDES   # 默认加密方式PBEWithMD5AndDES,可以更改为PBEWithMD5AndTripleDES</span></span><br></pre></td></tr></table></figure>\n<p><strong>加密方式对应的类为BasicTextEncryptor和StrongTextEncryptor</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> StandardPBEStringEncryptor encryptor = <span class=\"keyword\">new</span> StandardPBEStringEncryptor();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">BasicTextEncryptor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.encryptor.setAlgorithm(<span class=\"string\">&quot;PBEWithMD5AndDES&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> StandardPBEStringEncryptor encryptor = <span class=\"keyword\">new</span> StandardPBEStringEncryptor();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">StrongTextEncryptor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.encryptor.setAlgorithm(<span class=\"string\">&quot;PBEWithMD5AndTripleDES&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://image.eelve.com/eblog/springbootjasypydiagrams-3a7616cc841c4f7583fc7173e32aaab4.png\" alt=\"图片.png\"></p>\n<h1 id=\"3-部署时配置salt-盐-值\"><a href=\"#3-部署时配置salt-盐-值\" class=\"headerlink\" title=\"3.部署时配置salt(盐)值\"></a><strong>3.部署时配置salt(盐)值</strong></h1><p><strong>1. 为了防止salt(盐)泄露,反解出密码.可以在项目部署的时候使用命令传入salt(盐)值</strong></p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar -Djasypt.encryptor.password=1Qaz0oKm xxx.jar</span><br></pre></td></tr></table></figure>\n<p><strong>2. 或者在服务器的环境变量里配置,进一步提高安全性</strong></p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">打开/etc/profile文件</span><br><span class=\"line\">vim /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">文件末尾插入</span><br><span class=\"line\">export JASYPT_PASSWORD = G0CvDz7oJn6</span><br><span class=\"line\"></span><br><span class=\"line\">编译 </span><br><span class=\"line\">source /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">运行 </span><br><span class=\"line\">java -jar -Djasypt.encryptor.password=$&#123;JASYPT_PASSWORD&#125; xxx.jar</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/eelve/jasypt\">下面是一个我自己的具体实现：https://github.com/eelve/jasypt，使用Jasypt对数据库用信息加密后，可以成功连接上数据库</a><br><img src=\"https://image.eelve.com/eblog/springbootjasypyresult-5f2ef70fe5124f5595a48b341807f2c3.png\" alt=\"图片.png\"></p>\n<p><a href=\"https://github.com/ulisesbocchio/jasypt-spring-boot\">官方地址：https://github.com/ulisesbocchio/jasypt-spring-boot</a></p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"springboot","path":"api/categories/springboot.json"}],"tags":[{"name":"java","path":"api/tags/java.json"},{"name":"springboot","path":"api/tags/springboot.json"},{"name":"jasypt","path":"api/tags/jasypt.json"}]},{"title":"SpringBoot配置web访问H2","slug":"SpringBoot配置web访问H2","date":"2019-08-09T09:13:41.000Z","updated":"2021-04-19T06:44:39.290Z","comments":true,"path":"api/articles/SpringBoot配置web访问H2.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/h2databasecollection-bffb24f29c9947b8871454427c88a9a3.png","content":"<p>【<strong>前情提要</strong>】最近开始搭建博客，在本地调试的时候使用的数据库是h2，但是调试的时候需要查看数据库，本文也由此而来。</p>\n<hr>\n<p>下面是我用到的方法：</p>\n<ol>\n<li>使用IDEA的Database连接工具，具体操作方法就是按照要求配置连接url，用户名和密码即可。具体操作见下图：<br><img src=\"https://image.eelve.com/eblog/h2databasecollection-bffb24f29c9947b8871454427c88a9a3.png\" alt=\"h2ideadatabase配置\"><br>查询结果：<br><img src=\"https://image.eelve.com/eblog/h2databaseselect-5f10495470e446f98af7b8aff0228ef2.png\" alt=\"h2ideadatabase查询结果\"><br>但是但是这个时候启动<strong>项目会报错</strong>：<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">org.h2.jdbc.JdbcSQLException: Database may be already in use: null. Possible solutions: close all other connection(s); use the server mode [90020-197]</span><br><span class=\"line\">\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:357) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.message.DbException.get(DbException.java:168) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.mvstore.db.MVTableEngine$Store.convertIllegalStateException(MVTableEngine.java:188) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:168) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:100) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.Database.getPageStore(Database.java:2538) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.Database.open(Database.java:709) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.Database.openDatabase(Database.java:286) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.Database.&lt;init&gt;(Database.java:280) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.Engine.openSession(Engine.java:66) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.Engine.openSession(Engine.java:179) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.Engine.createSessionAndValidate(Engine.java:157) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.Engine.createSession(Engine.java:140) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.Engine.createSession(Engine.java:28) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:351) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.jdbc.JdbcConnection.&lt;init&gt;(JdbcConnection.java:124) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.jdbc.JdbcConnection.&lt;init&gt;(JdbcConnection.java:103) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.Driver.connect(Driver.java:69) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136) ~[HikariCP-3.2.0.jar:na]</span><br><span class=\"line\">\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369) ~[HikariCP-3.2.0.jar:na]</span><br><span class=\"line\">\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198) ~[HikariCP-3.2.0.jar:na]</span><br><span class=\"line\">\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467) [HikariCP-3.2.0.jar:na]</span><br><span class=\"line\">\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541) [HikariCP-3.2.0.jar:na]</span><br><span class=\"line\">\tat com.zaxxer.hikari.pool.HikariPool.&lt;init&gt;(HikariPool.java:115) [HikariCP-3.2.0.jar:na]</span><br><span class=\"line\">\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) [HikariCP-3.2.0.jar:na]</span><br><span class=\"line\">\tat org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157) [spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) [spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78) [spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319) [spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356) [spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73) [spring-boot-autoconfigure-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142) [spring-boot-autoconfigure-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113) [spring-boot-autoconfigure-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$4bb137a5.CGLIB$jpaVendorAdapter$6(&lt;generated&gt;) [spring-boot-autoconfigure-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$4bb137a5$$FastClassBySpringCGLIB$$824457c4.invoke(&lt;generated&gt;) [spring-boot-autoconfigure-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) [spring-core-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) [spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$4bb137a5.jpaVendorAdapter(&lt;generated&gt;) [spring-boot-autoconfigure-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_161]</span><br><span class=\"line\">\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_161]</span><br><span class=\"line\">\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]</span><br><span class=\"line\">\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:218) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1325) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1171) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:226) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:101) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.&lt;init&gt;(ServletContextInitializerBeans.java:88) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory$Initializer.onStartup(UndertowServletWebServerFactory.java:616) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat io.undertow.servlet.core.DeploymentManagerImpl$1.call(DeploymentManagerImpl.java:203) ~[undertow-servlet-2.0.17.Final.jar:2.0.17.Final]</span><br><span class=\"line\">\tat io.undertow.servlet.core.DeploymentManagerImpl$1.call(DeploymentManagerImpl.java:185) ~[undertow-servlet-2.0.17.Final.jar:2.0.17.Final]</span><br><span class=\"line\">\tat io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:42) ~[undertow-servlet-2.0.17.Final.jar:2.0.17.Final]</span><br><span class=\"line\">\tat io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43) ~[undertow-servlet-2.0.17.Final.jar:2.0.17.Final]</span><br><span class=\"line\">\tat io.undertow.servlet.core.DeploymentManagerImpl.deploy(DeploymentManagerImpl.java:250) ~[undertow-servlet-2.0.17.Final.jar:2.0.17.Final]</span><br><span class=\"line\">\tat org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory.createDeploymentManager(UndertowServletWebServerFactory.java:284) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory.getWebServer(UndertowServletWebServerFactory.java:208) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat run.halo.app.Application.main(Application.java:31) ~[classes/:na]</span><br><span class=\"line\">\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_161]</span><br><span class=\"line\">\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_161]</span><br><span class=\"line\">\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]</span><br><span class=\"line\">\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]</span><br><span class=\"line\">\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) ~[spring-boot-devtools-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">Caused by: java.lang.IllegalStateException: The file is locked: nio:C:/Users/Chirius/.halo/db/halo.mv.db [1.4.197/7]</span><br><span class=\"line\">\tat org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:870) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.mvstore.FileStore.open(FileStore.java:173) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.mvstore.MVStore.&lt;init&gt;(MVStore.java:350) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.mvstore.MVStore$Builder.open(MVStore.java:2934) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:155) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\t... 152 common frames omitted</span><br></pre></td></tr></table></figure>\n所以笔主在这里不推荐这种方法，因为会占用h2数据库连接，用了这种数据库连接就不能启动项目，反之亦然。</li>\n</ol>\n<hr>\n<ol start=\"2\">\n<li>使用H2 Console进行查看，由于项目是SpringBoot的，所以在这里只需要修改相应配置即可，由<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h2:</span><br><span class=\"line\">    console:</span><br><span class=\"line\">      settings:</span><br><span class=\"line\">        web-allow-others: false</span><br><span class=\"line\">      path: &#x2F;h2-console</span><br><span class=\"line\">      enabled: false</span><br></pre></td></tr></table></figure>\n改为<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h2:</span><br><span class=\"line\">    console:</span><br><span class=\"line\">      settings:</span><br><span class=\"line\">        web-allow-others: false</span><br><span class=\"line\">      path: &#x2F;h2-console</span><br><span class=\"line\">      enabled: false</span><br></pre></td></tr></table></figure>\n即可，启动项目，然后在项目访问路径后面加上配置的path**/h2-console**就可以查看具体结果了：<br><img src=\"https://image.eelve.com/eblog/12344-e3c905ae1b794528af9706227afa9b38.png\" alt=\"通过H2 Console查看的结果\"></li>\n</ol>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"springboot","path":"api/categories/springboot.json"}],"tags":[{"name":"java","path":"api/tags/java.json"},{"name":"springboot","path":"api/tags/springboot.json"},{"name":"h2","path":"api/tags/h2.json"}]},{"title":"浅析Spring Boot单体应用熔断技术","slug":"浅析Spring-Boot单体应用熔断技术","date":"2021-01-20T12:20:20.000Z","updated":"2021-04-19T06:44:39.305Z","comments":true,"path":"api/articles/浅析Spring-Boot单体应用熔断技术.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/2021012001.png","content":"<p>【<strong>前面的话</strong>】最近在看服务熔断的相关技术，下面就来总结一下。</p>\n<h1 id=\"壹、入围方案\"><a href=\"#壹、入围方案\" class=\"headerlink\" title=\"壹、入围方案\"></a>壹、入围方案</h1><ul>\n<li>Sentinel<ul>\n<li><a href=\"https://github.com/alibaba/Sentinel\">github地址</a></li>\n<li><a href=\"https://sentinelguard.io/zh-cn/docs/introduction.html\">https://sentinelguard.io/zh-cn/docs/introduction.html</a></li>\n<li>阿里出品，Spring Cloud Alibaba限流组件，目前持续更新中</li>\n<li>自带Dashboard，可以查看接口Qps等，并且可以动态修改各种规则</li>\n<li>流量控制，直接限流、冷启动、排队</li>\n<li>熔断降级，限制并发限制数和相应时间</li>\n<li>系统负载保护，提供系统级别防护，限制总体CPU等</li>\n<li>主要核心：资源，规则（流量控制规则、熔断降级规则、系统保护规则、来源访问控制规则 和 热点参数规则。），和指标</li>\n<li>文档非常清晰和详细，中文</li>\n<li>支持动态规则（推模式和拉模式）</li>\n</ul>\n</li>\n<li>Hystrix<ul>\n<li><a href=\"https://github.com/Netflix/Hystrix\">github地址</a></li>\n<li><a href=\"https://github.com/Netflix/Hystrix/wiki\">https://github.com/Netflix/Hystrix/wiki</a></li>\n<li>Netflix出品，Spring Cloud Netflix限流组件，已经停止新特性开发，只进行bug修复，最近更新为2018年，功能稳定</li>\n<li>有简单的dashboard页面</li>\n<li>以隔离和熔断为主的容错机制，超时或被熔断的调用将会快速失败，并可以提供 fallback 机制的初代熔断框架，异常统计基于滑动窗口</li>\n</ul>\n</li>\n<li>resilience4j<ul>\n<li><a href=\"https://github.com/resilience4j/resilience4j\">github地址</a></li>\n<li><a href=\"https://resilience4j.readme.io/docs\">https://resilience4j.readme.io/docs</a></li>\n<li>是一款轻量、简单，并且文档非常清晰、丰富的熔断工具。是Hystrix替代品，实现思路和Hystrix一致，目前持续更新中</li>\n<li>需要自己对micrometer、prometheus以及Dropwizard metrics进行整合</li>\n<li>CircuitBreaker 熔断</li>\n<li>Bulkhead 隔离</li>\n<li>RateLimiter QPS限制</li>\n<li>Retry 重试</li>\n<li>TimeLimiter 超时限制</li>\n<li>Cache 缓存</li>\n</ul>\n</li>\n<li>自己实现(基于Guava)<ul>\n<li>基于Guava的令牌桶，可以轻松实现对QPS进行限流</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"贰、技术对比\"><a href=\"#贰、技术对比\" class=\"headerlink\" title=\"贰、技术对比\"></a>贰、技术对比</h1><table>\n<thead>\n<tr>\n<th></th>\n<th><strong>Sentinel</strong></th>\n<th><strong>Hystrix</strong></th>\n<th><strong>resilience4j</strong></th>\n<th>使用Guava实现</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>隔离策略</td>\n<td>信号量隔离（并发线程数限流）</td>\n<td>线程池隔离/信号量隔离</td>\n<td>信号量隔离</td>\n<td></td>\n</tr>\n<tr>\n<td>熔断降级策略</td>\n<td>基于响应时间、异常比率、异常数</td>\n<td>基于异常比率</td>\n<td>基于异常比率、响应时间</td>\n<td></td>\n</tr>\n<tr>\n<td>实时统计实现</td>\n<td>滑动窗口（LeapArray）</td>\n<td>滑动窗口（基于 RxJava）</td>\n<td>Ring Bit Buffer</td>\n<td>令牌桶</td>\n</tr>\n<tr>\n<td>动态规则配置</td>\n<td>支持多种数据源</td>\n<td>支持多种数据源</td>\n<td>有限支持</td>\n<td></td>\n</tr>\n<tr>\n<td>扩展性</td>\n<td>多个扩展点</td>\n<td>插件的形式</td>\n<td>接口的形式</td>\n<td></td>\n</tr>\n<tr>\n<td>基于注解的支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>单机限流</td>\n<td>基于 QPS，支持基于调用关系的限流</td>\n<td>有限的支持</td>\n<td>Rate Limiter</td>\n<td>基于 QPS</td>\n</tr>\n<tr>\n<td>集群流控</td>\n<td>支持</td>\n<td>不支持</td>\n<td>不支持</td>\n<td></td>\n</tr>\n<tr>\n<td>流量整形</td>\n<td>支持预热模式与匀速排队控制效果</td>\n<td>不支持</td>\n<td>简单的 Rate Limiter 模式</td>\n<td></td>\n</tr>\n<tr>\n<td>系统自适应保护</td>\n<td>支持</td>\n<td>不支持</td>\n<td>不支持</td>\n<td></td>\n</tr>\n<tr>\n<td>热点识别/防护</td>\n<td>支持</td>\n<td>不支持</td>\n<td>不支持</td>\n<td></td>\n</tr>\n<tr>\n<td>Service Mesh 支持</td>\n<td>支持 Envoy/Istio</td>\n<td>不支持</td>\n<td>不支持</td>\n<td></td>\n</tr>\n<tr>\n<td>控制台</td>\n<td>提供开箱即用的控制台，可配置规则、实时监控、机器发现等</td>\n<td>简单的监控查看</td>\n<td>不提供控制台，可对接其它监控系统</td>\n<td></td>\n</tr>\n<tr>\n<td>是否支持默认规则</td>\n<td>不支持，需要针对每个接口配置规则</td>\n<td>支持</td>\n<td>支持</td>\n<td></td>\n</tr>\n<tr>\n<td>是否支持过滤异常</td>\n<td>注解单个接口支持</td>\n<td>注解和全局默认配置</td>\n<td>注解和全局默认配置</td>\n<td></td>\n</tr>\n</tbody></table>\n<h1 id=\"叁、应用改造\"><a href=\"#叁、应用改造\" class=\"headerlink\" title=\"叁、应用改造\"></a>叁、应用改造</h1><h2 id=\"3-1、sentinel\"><a href=\"#3-1、sentinel\" class=\"headerlink\" title=\"3.1、sentinel\"></a>3.1、sentinel</h2><h3 id=\"3-1-1、引入依赖\"><a href=\"#3-1-1、引入依赖\" class=\"headerlink\" title=\"3.1.1、引入依赖\"></a>3.1.1、引入依赖</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;com.alibaba.cloud&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-cloud-starter-alibaba-sentinel&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;2.0.3.RELEASE&lt;&#x2F;version&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-1-2、改造接口或者service层\"><a href=\"#3-1-2、改造接口或者service层\" class=\"headerlink\" title=\"3.1.2、改造接口或者service层\"></a>3.1.2、改造接口或者service层</h3><blockquote>\n<p>@SentinelResource(value = “allInfos”,fallback = “errorReturn”)</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Target(&#123;ElementType.METHOD, ElementType.TYPE&#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Inherited</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> SentinelResource &#123;</span><br><span class=\"line\">    <span class=\"comment\">//资源名称</span></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">value</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//流量方向</span></span><br><span class=\"line\">    <span class=\"function\">EntryType <span class=\"title\">entryType</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> EntryType.OUT</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//资源类型</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">resourceType</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> 0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//异常处理方法</span></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">blockHandler</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//异常处理类</span></span><br><span class=\"line\">    Class&lt;?&gt;[] blockHandlerClass() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//熔断方法</span></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">fallback</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//默认熔断方法</span></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">defaultFallback</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//熔断类</span></span><br><span class=\"line\">    Class&lt;?&gt;[] fallbackClass() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//统计异常</span></span><br><span class=\"line\">    Class&lt;? extends Throwable&gt;[] exceptionsToTrace() <span class=\"keyword\">default</span> &#123;Throwable.class&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//忽略异常</span></span><br><span class=\"line\">    Class&lt;? extends Throwable&gt;[] exceptionsToIgnore() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/get&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\"><span class=\"meta\">@SentinelResource(value = &quot;allInfos&quot;,fallback = &quot;errorReturn&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">allInfos</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@RequestParam</span> Integer num)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (num % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                log.info(<span class=\"string\">&quot;num % 2 == 0&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BaseException(<span class=\"string\">&quot;something bad with 2&quot;</span>, <span class=\"number\">400</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JsonResult.ok();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ProgramException e) &#123;</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;error&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JsonResult.error(<span class=\"string\">&quot;error&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-1-3、针对接口配置熔断方法或者限流方法\"><a href=\"#3-1-3、针对接口配置熔断方法或者限流方法\" class=\"headerlink\" title=\"3.1.3、针对接口配置熔断方法或者限流方法\"></a>3.1.3、针对接口配置熔断方法或者限流方法</h3><blockquote>\n<p>默认过滤拦截所有Controller接口</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 限流，参数需要和方法保持一致</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> request</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> response</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> num</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> BlockException</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">errorReturn</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@RequestParam</span> Integer num)</span> <span class=\"keyword\">throws</span> BlockException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.error(<span class=\"string\">&quot;error 限流&quot;</span> + num );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 熔断，参数需要和方法保持一直，并且需要添加BlockException异常</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> request</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> response</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> num</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> b</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> BlockException</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">errorReturn</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@RequestParam</span> Integer num,BlockException b)</span> <span class=\"keyword\">throws</span> BlockException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.error(<span class=\"string\">&quot;error 熔断&quot;</span> + num );</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意也可以不配置限流或者熔断方法。通过全局异常去捕获<strong>UndeclaredThrowableException</strong>或者<strong>BlockException</strong>避免大量的开发量</p>\n</blockquote>\n<h3 id=\"3-1-4、接入dashboard\"><a href=\"#3-1-4、接入dashboard\" class=\"headerlink\" title=\"3.1.4、接入dashboard\"></a>3.1.4、接入dashboard</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">sentinel:</span></span><br><span class=\"line\">      <span class=\"attr\">transport:</span></span><br><span class=\"line\">        <span class=\"attr\">port:</span> <span class=\"number\">8719</span></span><br><span class=\"line\">        <span class=\"attr\">dashboard:</span> <span class=\"string\">localhost:8080</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://image.eelve.com/eblog/2021012001.png\" alt=\"sentinel\"></p>\n<h3 id=\"3-1-5、规则持久化和动态更新\"><a href=\"#3-1-5、规则持久化和动态更新\" class=\"headerlink\" title=\"3.1.5、规则持久化和动态更新\"></a>3.1.5、规则持久化和动态更新</h3><blockquote>\n<p>接入配置中心如：zookeeper等等，并对规则采用推模式</p>\n</blockquote>\n<h2 id=\"3-2、hystrix\"><a href=\"#3-2、hystrix\" class=\"headerlink\" title=\"3.2、hystrix\"></a>3.2、hystrix</h2><h3 id=\"3-2-1、引入依赖\"><a href=\"#3-2-1、引入依赖\" class=\"headerlink\" title=\"3.2.1、引入依赖\"></a>3.2.1、引入依赖</h3> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-starter-actuator&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix-dashboard&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;2.0.4.RELEASE&lt;&#x2F;version&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;2.0.4.RELEASE&lt;&#x2F;version&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-2、改造接口\"><a href=\"#3-2-2、改造接口\" class=\"headerlink\" title=\"3.2.2、改造接口\"></a>3.2.2、改造接口</h3><blockquote>\n<p>@HystrixCommand(fallbackMethod = “timeOutError”)</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Target(&#123;ElementType.METHOD&#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Inherited</span></span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> HystrixCommand &#123;</span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">groupKey</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">commandKey</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">threadPoolKey</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">fallbackMethod</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    HystrixProperty[] commandProperties() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    HystrixProperty[] threadPoolProperties() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    Class&lt;? extends Throwable&gt;[] ignoreExceptions() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">ObservableExecutionMode <span class=\"title\">observableExecutionMode</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> ObservableExecutionMode.EAGER</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    HystrixException[] raiseHystrixExceptions() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">defaultFallback</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/get&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\"><span class=\"meta\">@HystrixCommand(fallbackMethod = &quot;fallbackMethod&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">allInfos</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@RequestParam</span> Integer num)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num % <span class=\"number\">3</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;num % 3 == 0&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BaseException(<span class=\"string\">&quot;something bad whitch 3&quot;</span>, <span class=\"number\">400</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.ok();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (ProgramException | InterruptedException exception) &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;error&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.error(<span class=\"string\">&quot;error&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-3、针对接口配置熔断方法\"><a href=\"#3-2-3、针对接口配置熔断方法\" class=\"headerlink\" title=\"3.2.3、针对接口配置熔断方法\"></a>3.2.3、针对接口配置熔断方法</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 该方法是熔断回调方法，参数需要和接口保持一致</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> request</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> response</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> num</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">fallbackMethod</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@RequestParam</span> Integer num)</span> </span>&#123;</span><br><span class=\"line\">    response.setStatus(<span class=\"number\">500</span>);</span><br><span class=\"line\">    log.info(<span class=\"string\">&quot;发生了熔断！！&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> JsonResult.error(<span class=\"string\">&quot;熔断&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-4、配置默认策略\"><a href=\"#3-2-4、配置默认策略\" class=\"headerlink\" title=\"3.2.4、配置默认策略\"></a>3.2.4、配置默认策略</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hystrix:</span><br><span class=\"line\">  command:</span><br><span class=\"line\">    default:</span><br><span class=\"line\">      execution:</span><br><span class=\"line\">        isolation:</span><br><span class=\"line\">          strategy: THREAD</span><br><span class=\"line\">          thread:</span><br><span class=\"line\">            # 线程超时15秒,调用Fallback方法</span><br><span class=\"line\">            timeoutInMilliseconds: 15000</span><br><span class=\"line\">      metrics:</span><br><span class=\"line\">        rollingStats:</span><br><span class=\"line\">          timeInMilliseconds: 15000</span><br><span class=\"line\">      circuitBreaker:</span><br><span class=\"line\">        # 10秒内出现3个以上请求(已临近阀值),并且出错率在50%以上,开启断路器.断开服务,调用Fallback方法</span><br><span class=\"line\">        requestVolumeThreshold: 3</span><br><span class=\"line\">        sleepWindowInMilliseconds: 10000</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-5、接入监控\"><a href=\"#3-2-5、接入监控\" class=\"headerlink\" title=\"3.2.5、接入监控\"></a>3.2.5、接入监控</h3><p><img src=\"https://image.eelve.com/eblog/2021012002.png\" alt=\"hystrix\"></p>\n<p><img src=\"https://image.eelve.com/eblog/2021012003.png\" alt=\"hystrix示意图\"></p>\n<blockquote>\n<p>曲线：用来记录2分钟内流量的相对变化，我们可以通过它来观察到流量的上升和下降趋势。</p>\n</blockquote>\n<blockquote>\n<p><strong>集群监控需要用到注册中心</strong></p>\n</blockquote>\n<h2 id=\"3-3、resilience4j\"><a href=\"#3-3、resilience4j\" class=\"headerlink\" title=\"3.3、resilience4j\"></a>3.3、resilience4j</h2><h3 id=\"3-3-1、引入依赖\"><a href=\"#3-3-1、引入依赖\" class=\"headerlink\" title=\"3.3.1、引入依赖\"></a>3.3.1、引入依赖</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;io.github.resilience4j&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;resilience4j-spring-boot2&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;1.6.1&lt;&#x2F;version&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;io.github.resilience4j&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;resilience4j-bulkhead&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;1.6.1&lt;&#x2F;version&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;io.github.resilience4j&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;resilience4j-ratelimiter&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;1.6.1&lt;&#x2F;version&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;io.github.resilience4j&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;resilience4j-timelimiter&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;1.6.1&lt;&#x2F;version&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>可以按需要引入：bulkhead，ratelimiter，timelimiter等</p>\n</blockquote>\n<h3 id=\"3-3-2、改造接口\"><a href=\"#3-3-2、改造接口\" class=\"headerlink\" title=\"3.3.2、改造接口\"></a>3.3.2、改造接口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/get&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\"><span class=\"comment\">//@TimeLimiter(name = &quot;BulkheadA&quot;,fallbackMethod = &quot;fallbackMethod&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@CircuitBreaker(name = &quot;BulkheadA&quot;,fallbackMethod = &quot;fallbackMethod&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@Bulkhead(name = &quot;BulkheadA&quot;,fallbackMethod = &quot;fallbackMethod&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">allInfos</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@RequestParam</span> Integer num)</span></span>&#123;</span><br><span class=\"line\">    log.info(<span class=\"string\">&quot;param-----&gt;&quot;</span> + num);</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//Thread.sleep(num);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;num % 2 == 0&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BaseException(<span class=\"string\">&quot;something bad with 2&quot;</span>, <span class=\"number\">400</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num % <span class=\"number\">3</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;num % 3 == 0&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BaseException(<span class=\"string\">&quot;something bad whitch 3&quot;</span>, <span class=\"number\">400</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num % <span class=\"number\">5</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;num % 5 == 0&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ProgramException(<span class=\"string\">&quot;something bad whitch 5&quot;</span>, <span class=\"number\">400</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num % <span class=\"number\">7</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;num % 7 == 0&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> res = <span class=\"number\">1</span> / <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.ok();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (BufferUnderflowException e) &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;error&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.error(<span class=\"string\">&quot;error&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-3、针对接口配置熔断方法\"><a href=\"#3-3-3、针对接口配置熔断方法\" class=\"headerlink\" title=\"3.3.3、针对接口配置熔断方法\"></a>3.3.3、针对接口配置熔断方法</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 需要参数一致，并且加上相应异常</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> request</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> response</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> num</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> exception</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">fallbackMethod</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@RequestParam</span> Integer num, BulkheadFullException exception)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> JsonResult.error(<span class=\"string\">&quot;error 熔断&quot;</span> + num );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-4、配置规则\"><a href=\"#3-3-4、配置规则\" class=\"headerlink\" title=\"3.3.4、配置规则\"></a>3.3.4、配置规则</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">resilience4j.circuitbreaker:</span></span><br><span class=\"line\">    <span class=\"attr\">instances:</span></span><br><span class=\"line\">        <span class=\"attr\">backendA:</span></span><br><span class=\"line\">            <span class=\"attr\">registerHealthIndicator:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            <span class=\"attr\">slidingWindowSize:</span> <span class=\"number\">100</span></span><br><span class=\"line\">        <span class=\"attr\">backendB:</span></span><br><span class=\"line\">            <span class=\"attr\">registerHealthIndicator:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            <span class=\"attr\">slidingWindowSize:</span> <span class=\"number\">10</span></span><br><span class=\"line\">            <span class=\"attr\">permittedNumberOfCallsInHalfOpenState:</span> <span class=\"number\">3</span></span><br><span class=\"line\">            <span class=\"attr\">slidingWindowType:</span> <span class=\"string\">TIME_BASED</span></span><br><span class=\"line\">            <span class=\"attr\">minimumNumberOfCalls:</span> <span class=\"number\">20</span></span><br><span class=\"line\">            <span class=\"attr\">waitDurationInOpenState:</span> <span class=\"string\">50s</span></span><br><span class=\"line\">            <span class=\"attr\">failureRateThreshold:</span> <span class=\"number\">50</span></span><br><span class=\"line\">            <span class=\"attr\">eventConsumerBufferSize:</span> <span class=\"number\">10</span></span><br><span class=\"line\">            <span class=\"attr\">recordFailurePredicate:</span> <span class=\"string\">io.github.robwin.exception.RecordFailurePredicate</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">resilience4j.retry:</span></span><br><span class=\"line\">    <span class=\"attr\">instances:</span></span><br><span class=\"line\">        <span class=\"attr\">backendA:</span></span><br><span class=\"line\">            <span class=\"attr\">maxRetryAttempts:</span> <span class=\"number\">3</span></span><br><span class=\"line\">            <span class=\"attr\">waitDuration:</span> <span class=\"string\">10s</span></span><br><span class=\"line\">            <span class=\"attr\">enableExponentialBackoff:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            <span class=\"attr\">exponentialBackoffMultiplier:</span> <span class=\"number\">2</span></span><br><span class=\"line\">            <span class=\"attr\">retryExceptions:</span></span><br><span class=\"line\">                <span class=\"bullet\">-</span> <span class=\"string\">org.springframework.web.client.HttpServerErrorException</span></span><br><span class=\"line\">                <span class=\"bullet\">-</span> <span class=\"string\">java.io.IOException</span></span><br><span class=\"line\">            <span class=\"attr\">ignoreExceptions:</span></span><br><span class=\"line\">                <span class=\"bullet\">-</span> <span class=\"string\">io.github.robwin.exception.BusinessException</span></span><br><span class=\"line\">        <span class=\"attr\">backendB:</span></span><br><span class=\"line\">            <span class=\"attr\">maxRetryAttempts:</span> <span class=\"number\">3</span></span><br><span class=\"line\">            <span class=\"attr\">waitDuration:</span> <span class=\"string\">10s</span></span><br><span class=\"line\">            <span class=\"attr\">retryExceptions:</span></span><br><span class=\"line\">                <span class=\"bullet\">-</span> <span class=\"string\">org.springframework.web.client.HttpServerErrorException</span></span><br><span class=\"line\">                <span class=\"bullet\">-</span> <span class=\"string\">java.io.IOException</span></span><br><span class=\"line\">            <span class=\"attr\">ignoreExceptions:</span></span><br><span class=\"line\">                <span class=\"bullet\">-</span> <span class=\"string\">io.github.robwin.exception.BusinessException</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">resilience4j.bulkhead:</span></span><br><span class=\"line\">    <span class=\"attr\">instances:</span></span><br><span class=\"line\">        <span class=\"attr\">backendA:</span></span><br><span class=\"line\">            <span class=\"attr\">maxConcurrentCalls:</span> <span class=\"number\">10</span></span><br><span class=\"line\">        <span class=\"attr\">backendB:</span></span><br><span class=\"line\">            <span class=\"attr\">maxWaitDuration:</span> <span class=\"string\">10ms</span></span><br><span class=\"line\">            <span class=\"attr\">maxConcurrentCalls:</span> <span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">resilience4j.thread-pool-bulkhead:</span></span><br><span class=\"line\">  <span class=\"attr\">instances:</span></span><br><span class=\"line\">    <span class=\"attr\">backendC:</span></span><br><span class=\"line\">      <span class=\"attr\">maxThreadPoolSize:</span> <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"attr\">coreThreadPoolSize:</span> <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"attr\">queueCapacity:</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">resilience4j.ratelimiter:</span></span><br><span class=\"line\">    <span class=\"attr\">instances:</span></span><br><span class=\"line\">        <span class=\"attr\">backendA:</span></span><br><span class=\"line\">            <span class=\"attr\">limitForPeriod:</span> <span class=\"number\">10</span></span><br><span class=\"line\">            <span class=\"attr\">limitRefreshPeriod:</span> <span class=\"string\">1s</span></span><br><span class=\"line\">            <span class=\"attr\">timeoutDuration:</span> <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"attr\">registerHealthIndicator:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            <span class=\"attr\">eventConsumerBufferSize:</span> <span class=\"number\">100</span></span><br><span class=\"line\">        <span class=\"attr\">backendB:</span></span><br><span class=\"line\">            <span class=\"attr\">limitForPeriod:</span> <span class=\"number\">6</span></span><br><span class=\"line\">            <span class=\"attr\">limitRefreshPeriod:</span> <span class=\"string\">500ms</span></span><br><span class=\"line\">            <span class=\"attr\">timeoutDuration:</span> <span class=\"string\">3s</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">resilience4j.timelimiter:</span></span><br><span class=\"line\">    <span class=\"attr\">instances:</span></span><br><span class=\"line\">        <span class=\"attr\">backendA:</span></span><br><span class=\"line\">            <span class=\"attr\">timeoutDuration:</span> <span class=\"string\">2s</span></span><br><span class=\"line\">            <span class=\"attr\">cancelRunningFuture:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">backendB:</span></span><br><span class=\"line\">            <span class=\"attr\">timeoutDuration:</span> <span class=\"string\">1s</span></span><br><span class=\"line\">            <span class=\"attr\">cancelRunningFuture:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>配置的规则可以被代码覆盖</p>\n</blockquote>\n<h3 id=\"3-3-5、配置监控\"><a href=\"#3-3-5、配置监控\" class=\"headerlink\" title=\"3.3.5、配置监控\"></a>3.3.5、配置监控</h3><blockquote>\n<p>如grafana等</p>\n</blockquote>\n<h1 id=\"肆、关注点\"><a href=\"#肆、关注点\" class=\"headerlink\" title=\"肆、关注点\"></a>肆、关注点</h1><ul>\n<li>是否需要过滤部分异常</li>\n<li>是否需要全局默认规则</li>\n<li>可能需要引入其他中间件</li>\n<li>k8s流量控制</li>\n<li>规则存储和动态修改</li>\n<li>接入改造代价</li>\n</ul>\n<h1 id=\"【后面的话】\"><a href=\"#【后面的话】\" class=\"headerlink\" title=\"【后面的话】\"></a>【<strong>后面的话</strong>】</h1><p>个人建议的话，比较推荐sentinel，它提供了很多接口便于开发者自己拓展，同时我觉得他的规则动态更新也比较方便。最后是相关示例代码:<a href=\"https://github.com/eelve/limiting\">单体应用示例代码</a></p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"springboot","path":"api/categories/springboot.json"}],"tags":[{"name":"java","path":"api/tags/java.json"},{"name":"springboot","path":"api/tags/springboot.json"}]}]}