{"name":"hide","postlist":[{"title":"Elastic Stack实战之Beats家族介绍本地版","slug":"Elastic-Stack实战之Beats家族介绍本地版","date":"2020-03-05T12:30:10.000Z","updated":"2021-04-19T07:47:19.507Z","comments":true,"path":"api/articles/Elastic-Stack实战之Beats家族介绍本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2020/3/illustration-beats-header-overflow-1ba7ff649dbf41598d71ed24d1ade8da.png","content":"<p>【<strong>前面的话</strong>】前面我们已经体验过了Elasticsearch、Logstash和Kibanan，也是就是ELK三大剑客。记得在前文<a href=\"https://eelve.com/archives/logstash\">Elastic Stack实战之Logstash初体验</a>中提到过Elastic Stack大家族中增加了一个新的高效率的采集组件，那就是Beats家族，那今天就来了解一下。</p>\n<hr>\n<h1 id=\"壹、什么是Beats\"><a href=\"#壹、什么是Beats\" class=\"headerlink\" title=\"壹、什么是Beats\"></a>壹、什么是Beats</h1><p><img src=\"https://eelve.com/upload/2020/3/illustration-beats-header-overflow-1ba7ff649dbf41598d71ed24d1ade8da.png\" alt=\"illustration-beats-header-overflow\"></p>\n<p><strong>Beats</strong>是轻量型数据采集器。</p>\n<p><strong>Beats</strong>平台集合了多种单一用途数据采集器。它们从成百上千或成千上万台机器和系统向 Logstash 或 Elasticsearch 发送数据。 </p>\n<h1 id=\"贰、Beats系列简介\"><a href=\"#贰、Beats系列简介\" class=\"headerlink\" title=\"贰、Beats系列简介\"></a>贰、Beats系列简介</h1><p>全品类采集器，搞定所有数据类型。</p>\n<ul>\n<li><p><a href=\"https://www.elastic.co/beats/filebeat\">Filebeat</a>：用于采集日志文件</p>\n</li>\n<li><p><a href=\"https://www.elastic.co/beats/metricbeat\">Metricbeat</a>: 用于采集指标数据</p>\n</li>\n<li><p><a href=\"https://www.elastic.co/beats/packetbeat\">Packetbeat</a>: 用于采集网络数据</p>\n</li>\n<li><p><a href=\"https://www.elastic.co/beats/winlogbeat\">Winlogbeat</a>: 用于采集Windows事件</p>\n</li>\n<li><p><a href=\"https://www.elastic.co/beats/auditbeat\">Auditbeat</a>: 用于采集审计数据</p>\n</li>\n<li><p><a href=\"https://www.elastic.co/beats/heartbeat\">Heartbeat</a>: 用于采集运行时间监控</p>\n</li>\n<li><p><a href=\"https://www.elastic.co/beats/functionbeat\">Functionbeat</a>: 是一个无需服务器的采集器</p>\n</li>\n</ul>\n<h1 id=\"叁、Beats特点\"><a href=\"#叁、Beats特点\" class=\"headerlink\" title=\"叁、Beats特点\"></a>叁、Beats特点</h1><ul>\n<li>轻量型：Beats 是数据采集的得力工具。将Beats和您的容器一起置于服务器上，或者将Beats作为功能加以部署，然后便可在 Elasticsearch中集中处理数据。Beats能够采集符合 Elastic Common Schema(ECS)要求的数据，如果您希望拥有更加强大的处理能力，Beats能够将数据转发至Logstash进行转换和解析。 </li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/illustration-beats-lightweight-d6ee1493b6a64579a71fb63e2e95b4ac.svg\" alt=\"illustration-beats-lightweight\"></p>\n<ul>\n<li>即插即用：借助模块加速数据可视化体验。Filebeat 和 Metricbeat 中包含的一些模块能够简化从关键数据源（例如云平台、容器和系统，以及网络技术）采集、解析和可视化信息的过程。只需运行一行命令，即可开始探索。 </li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/screenshot-beats-modules-8dec132b351e4c6a9835d806e24e520e.jpg\" alt=\"screenshot-beats-modules\"></p>\n<ul>\n<li>从环境中获得洞见：Beats 从您的专属环境中收集日志和指标，然后通过来自主机、诸如 Docker 和 Kubernetes 等容器平台以及云服务提供商的必要元数据对这些内容进行记录，然后再传输到 Elastic Stack 中。从监测容器到从无需服务器的架构传输数据，我们确保您拥有所需的上下文。 </li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/screenshot-infrastructure-ui-368a637d105b42a4b87d0df2b2158275.png\" alt=\"screenshot-infrastructure-ui\"></p>\n<ul>\n<li>可扩展：缺少某种采集器？别着急。您可以自行构建并分享。每款开源 Beat 都以 libbeat（转发数据时所用的通用库）为基石。需要监控某个专用协议？自行构建。我们将为您提供所需的构建基块。</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/illustration-beats-exstensible-555-white-bg-1767d533ca824a5290360eb027eed811.svg\" alt=\"illustration-beats-exstensible-555-white-bg\"></p>\n<ul>\n<li>托管式：Beats 同样能向 Elastic Cloud 输送数据</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/illustration-beats-elasticsearch-service-e783d59f07bc406c95c0942484f91c22.svg\" alt=\"illustration-beats-elasticsearch-service\"></p>\n<hr>\n<p>【<strong>后面的话</strong>】本文只是Beats家族的一个介绍，后面还有相关文章进行体验。Beats采集数据之后可以直接给Elasticsearch，也可以经过Logstash过滤处理之后再由Logstash存入Elasticsearch。在后面的文章会做相应的演示的。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"Elastic Stack实战之Elasticsearch初体验(三)","slug":"Elastic-Stack实战之Elasticsearch初体验(三)","date":"2020-03-01T11:49:22.000Z","updated":"2021-04-19T06:52:48.632Z","comments":true,"path":"api/articles/Elastic-Stack实战之Elasticsearch初体验(三).json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png","content":"<p>【<strong>前面的话</strong>】书接上文<a href=\"https://eelve.com/archives/elasticsearch01\">Elastic Stack实践之Elasticsearch使用(一)</a>。</p>\n<hr>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"Elastic Stack实战之Elasticsearch初体验(一)本地版","slug":"Elastic-Stack实战之Elasticsearch初体验(一)本地版","date":"2020-03-01T04:34:22.000Z","updated":"2021-04-19T07:47:19.511Z","comments":true,"path":"api/articles/Elastic-Stack实战之Elasticsearch初体验(一)本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2020/3/2020010301-5b565f99650d4acbb3ba464408dca641.png","content":"<p>【<strong>前面的话</strong>】前面已经准备好了服务器环境，今天就来开始安装<a href=\"https://www.elastic.co/cn/elasticsearch\">Elasticsearch</a>然后体验。</p>\n<hr>\n<h1 id=\"壹、软件版本\"><a href=\"#壹、软件版本\" class=\"headerlink\" title=\"壹、软件版本\"></a>壹、软件版本</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">Centos：CentOS-7-x86_64-Minimal-1908</span></span><br><span class=\"line\"><span class=\"attr\">VM:</span> <span class=\"number\">15.5</span><span class=\"number\">.0</span> <span class=\"string\">build-14665864</span></span><br><span class=\"line\"><span class=\"attr\">Java:</span> <span class=\"number\">1.8</span><span class=\"string\">.0_211</span></span><br><span class=\"line\"><span class=\"attr\">Elasticsearch:</span> <span class=\"string\">elasticsearch-7.6.0</span></span><br></pre></td></tr></table></figure>\n<p>这里说一下，Elasticsearch是依赖Java环境的，elasticsearch-7.6.0要求至少为1.8，官方建议为11.如果你的机器上还没有Java环境的话，记得要先准备环境。当然安装也是非常简单：</p>\n<p>1.下载linux版本的jdk</p>\n<p>2.解压然后配置环境变量</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">java environment</span></span><br><span class=\"line\">export JAVA_HOME=/usr/jdk</span><br><span class=\"line\">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/jre/lib/rt.jar:$&#123;JAVA_HOME&#125;/lib/dt.jar:$&#123;JAVA_HOME&#125;/lib/tools.jar</span><br><span class=\"line\">export PATH=$PATH:$&#123;JAVA_HOME&#125;/bin</span><br></pre></td></tr></table></figure>\n<p>3.刷新环境变量，检查结果</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@192 ~]# source /etc/profile</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@192 ~]# java -version</span><br><span class=\"line\">java version &quot;1.8.0_211&quot;</span><br><span class=\"line\">Java(TM) SE Runtime Environment (build 1.8.0_211-b12)</span><br><span class=\"line\">Java HotSpot(TM) 64-Bit Server VM (build 25.211-b12, mixed mode)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"贰、Elasticsearch安装\"><a href=\"#贰、Elasticsearch安装\" class=\"headerlink\" title=\"贰、Elasticsearch安装\"></a>贰、Elasticsearch安装</h1><h2 id=\"2-1-下载地址\"><a href=\"#2-1-下载地址\" class=\"headerlink\" title=\"2.1 下载地址\"></a>2.1 下载地址</h2><h2 id=\"elasticsearch-7-6-0-linux-x86-64-tar-gz\"><a href=\"#elasticsearch-7-6-0-linux-x86-64-tar-gz\" class=\"headerlink\" title=\"elasticsearch-7.6.0-linux-x86_64.tar.gz\"></a><a href=\"https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.6.0-linux-x86_64.tar.gz\">elasticsearch-7.6.0-linux-x86_64.tar.gz</a></h2><h2 id=\"2-2-解压elasticsearch-7-6-0-linux-x86-64-tar-gz\"><a href=\"#2-2-解压elasticsearch-7-6-0-linux-x86-64-tar-gz\" class=\"headerlink\" title=\"2.2 解压elasticsearch-7.6.0-linux-x86_64.tar.gz\"></a>2.2 解压elasticsearch-7.6.0-linux-x86_64.tar.gz</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zvxf elasticsearch-7.6.0-linux-x86_64.tar.gz -C /usr/elastic</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-3-修改elasticsearch配置\"><a href=\"#2-3-修改elasticsearch配置\" class=\"headerlink\" title=\"2.3 修改elasticsearch配置\"></a>2.3 修改elasticsearch配置</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@192 elastic]# cd /usr/elastic/elasticsearch/config/</span><br><span class=\"line\">[root@192 config]# vi elasticsearch.yml</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>下面给出单机版安装最小配置</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">node.name:</span> <span class=\"string\">node-1</span> <span class=\"comment\">#节点名字</span></span><br><span class=\"line\"><span class=\"attr\">network.host:</span> <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span> <span class=\"comment\">#生产配置为127.0.0.1，测试可以为其他地址</span></span><br><span class=\"line\"><span class=\"attr\">http.port:</span> <span class=\"number\">9200</span> <span class=\"comment\">#端口</span></span><br><span class=\"line\"><span class=\"attr\">cluster.initial_master_nodes:</span> [<span class=\"string\">&quot;node-1&quot;</span>] <span class=\"comment\">#初始化master节点</span></span><br><span class=\"line\"><span class=\"attr\">http.cors.enabled:</span> <span class=\"literal\">true</span>  <span class=\"comment\">#开启跨域</span></span><br><span class=\"line\"><span class=\"attr\">http.cors.allow-origin:</span> <span class=\"string\">&quot;*&quot;</span> <span class=\"comment\">#开启跨域</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-4-后台启动\"><a href=\"#2-4-后台启动\" class=\"headerlink\" title=\"2.4 后台启动\"></a>2.4 后台启动</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@192 bin]# ./elasticsearch</span><br><span class=\"line\">[1] 1620</span><br><span class=\"line\">[root@192 bin]# future versions of Elasticsearch will require Java 11; your Java version from [/usr/jdk/jre] does not meet this requirement</span><br><span class=\"line\">[2020-03-01T11:55:38,871][ERROR][o.e.b.ElasticsearchUncaughtExceptionHandler] [node-1] uncaught exception in thread [main]</span><br><span class=\"line\">org.elasticsearch.bootstrap.StartupException: java.lang.RuntimeException: can not run elasticsearch as root</span><br><span class=\"line\">\tat org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:174) ~[elasticsearch-7.6.0.jar:7.6.0]</span><br><span class=\"line\">\tat org.elasticsearch.bootstrap.Elasticsearch.execute(Elasticsearch.java:161) ~[elasticsearch-7.6.0.jar:7.6.0]</span><br><span class=\"line\">\tat org.elasticsearch.cli.EnvironmentAwareCommand.execute(EnvironmentAwareCommand.java:86) ~[elasticsearch-7.6.0.jar:7.6.0]</span><br><span class=\"line\">\tat org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:125) ~[elasticsearch-cli-7.6.0.jar:7.6.0]</span><br><span class=\"line\">\tat org.elasticsearch.cli.Command.main(Command.java:90) ~[elasticsearch-cli-7.6.0.jar:7.6.0]</span><br><span class=\"line\">\tat org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:126) ~[elasticsearch-7.6.0.jar:7.6.0]</span><br><span class=\"line\">\tat org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:92) ~[elasticsearch-7.6.0.jar:7.6.0]</span><br><span class=\"line\">Caused by: java.lang.RuntimeException: can not run elasticsearch as root</span><br><span class=\"line\">\tat org.elasticsearch.bootstrap.Bootstrap.initializeNatives(Bootstrap.java:105) ~[elasticsearch-7.6.0.jar:7.6.0]</span><br><span class=\"line\">\tat org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:172) ~[elasticsearch-7.6.0.jar:7.6.0]</span><br><span class=\"line\">\tat org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:349) ~[elasticsearch-7.6.0.jar:7.6.0]</span><br><span class=\"line\">\tat org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:170) ~[elasticsearch-7.6.0.jar:7.6.0]</span><br><span class=\"line\">\t... 6 more</span><br><span class=\"line\">uncaught exception in thread [main]</span><br><span class=\"line\">java.lang.RuntimeException: can not run elasticsearch as root</span><br><span class=\"line\">\tat org.elasticsearch.bootstrap.Bootstrap.initializeNatives(Bootstrap.java:105)</span><br><span class=\"line\">\tat org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:172)</span><br><span class=\"line\">\tat org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:349)</span><br><span class=\"line\">\tat org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:170)</span><br><span class=\"line\">\tat org.elasticsearch.bootstrap.Elasticsearch.execute(Elasticsearch.java:161)</span><br><span class=\"line\">\tat org.elasticsearch.cli.EnvironmentAwareCommand.execute(EnvironmentAwareCommand.java:86)</span><br><span class=\"line\">\tat org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:125)</span><br><span class=\"line\">\tat org.elasticsearch.cli.Command.main(Command.java:90)</span><br><span class=\"line\">\tat org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:126)</span><br><span class=\"line\">\tat org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:92)</span><br><span class=\"line\">For complete error details, refer to the log at /usr/elastic/elasticsearch/logs/eelve.log</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>这里说的是elasticsearch不能用root用户启动，这里就需要添加一个用户，然后重新启动</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@192 bin]# adduser iio</span><br><span class=\"line\">[root@192 bin]# passwd iio</span><br><span class=\"line\">Changing password for user iio.</span><br><span class=\"line\">New password: </span><br><span class=\"line\">Retype new password: </span><br><span class=\"line\">passwd: all authentication tokens updated successfully.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>然后更改elasticsearch用户组</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@192 bin]# chown -R iio:iio /usr/elastic/elasticsearch/</span><br></pre></td></tr></table></figure>\n<p>然后就可以启动成功了</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@192 bin]# su iio</span><br><span class=\"line\">[iio@192 bin]$ ./elasticsearch</span><br><span class=\"line\">future versions of Elasticsearch will require Java 11; your Java version from [/usr/jdk/jre] does not meet this requirement</span><br><span class=\"line\">[2020-03-01T12:03:32,970][INFO ][o.e.e.NodeEnvironment    ] [node-1] using [1] data paths, mounts [[/ (rootfs)]], net usable_space [20.9gb], net total_space [25.9gb], types [rootfs]</span><br><span class=\"line\">[2020-03-01T12:03:32,972][INFO ][o.e.e.NodeEnvironment    ] [node-1] heap size [990.7mb], compressed ordinary object pointers [true]</span><br><span class=\"line\">[2020-03-01T12:03:33,103][INFO ][o.e.n.Node               ] [node-1] node name [node-1], node ID [2IBvVjP0QbeA-FDLFoLFFg], cluster name [eelve]</span><br><span class=\"line\">[2020-03-01T12:03:33,103][INFO ][o.e.n.Node               ] [node-1] version[7.6.0], pid[1952], build[default/tar/7f634e9f44834fbc12724506cc1da681b0c3b1e3/2020-02-06T00:09:00.449973Z], OS[Linux/3.10.0-1062.el7.x86_64/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_211/25.211-b12]</span><br><span class=\"line\">[2020-03-01T12:03:33,103][INFO ][o.e.n.Node               ] [node-1] JVM home [/usr/jdk/jre]</span><br><span class=\"line\">[2020-03-01T12:03:33,104][INFO ][o.e.n.Node               ] [node-1] JVM arguments [-Des.networkaddress.cache.ttl=60, -Des.networkaddress.cache.negative.ttl=10, -XX:+AlwaysPreTouch, -Xss1m, -Djava.awt.headless=true, -Dfile.encoding=UTF-8, -Djna.nosys=true, -XX:-OmitStackTraceInFastThrow, -Dio.netty.noUnsafe=true, -Dio.netty.noKeySetOptimization=true, -Dio.netty.recycler.maxCapacityPerThread=0, -Dio.netty.allocator.numDirectArenas=0, -Dlog4j.shutdownHookEnabled=false, -Dlog4j2.disable.jmx=true, -Djava.locale.providers=COMPAT, -Xms1g, -Xmx1g, -XX:+UseConcMarkSweepGC, -XX:CMSInitiatingOccupancyFraction=75, -XX:+UseCMSInitiatingOccupancyOnly, -Djava.io.tmpdir=/tmp/elasticsearch-5828849950285366888, -XX:+HeapDumpOnOutOfMemoryError, -XX:HeapDumpPath=data, -XX:ErrorFile=logs/hs_err_pid%p.log, -XX:+PrintGCDetails, -XX:+PrintGCDateStamps, -XX:+PrintTenuringDistribution, -XX:+PrintGCApplicationStoppedTime, -Xloggc:logs/gc.log, -XX:+UseGCLogFileRotation, -XX:NumberOfGCLogFiles=32, -XX:GCLogFileSize=64m, -XX:MaxDirectMemorySize=536870912, -Des.path.home=/usr/elastic/elasticsearch, -Des.path.conf=/usr/elastic/elasticsearch/config, -Des.distribution.flavor=default, -Des.distribution.type=tar, -Des.bundled_jdk=true]</span><br><span class=\"line\">[2020-03-01T12:03:34,656][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [aggs-matrix-stats]</span><br><span class=\"line\">[2020-03-01T12:03:34,656][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [analysis-common]</span><br><span class=\"line\">[2020-03-01T12:03:34,656][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [flattened]</span><br><span class=\"line\">[2020-03-01T12:03:34,657][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [frozen-indices]</span><br><span class=\"line\">[2020-03-01T12:03:34,657][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [ingest-common]</span><br><span class=\"line\">[2020-03-01T12:03:34,657][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [ingest-geoip]</span><br><span class=\"line\">[2020-03-01T12:03:34,657][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [ingest-user-agent]</span><br><span class=\"line\">[2020-03-01T12:03:34,657][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [lang-expression]</span><br><span class=\"line\">[2020-03-01T12:03:34,658][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [lang-mustache]</span><br><span class=\"line\">[2020-03-01T12:03:34,658][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [lang-painless]</span><br><span class=\"line\">[2020-03-01T12:03:34,658][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [mapper-extras]</span><br><span class=\"line\">[2020-03-01T12:03:34,658][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [parent-join]</span><br><span class=\"line\">[2020-03-01T12:03:34,658][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [percolator]</span><br><span class=\"line\">[2020-03-01T12:03:34,658][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [rank-eval]</span><br><span class=\"line\">[2020-03-01T12:03:34,659][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [reindex]</span><br><span class=\"line\">[2020-03-01T12:03:34,659][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [repository-url]</span><br><span class=\"line\">[2020-03-01T12:03:34,659][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [search-business-rules]</span><br><span class=\"line\">[2020-03-01T12:03:34,659][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [spatial]</span><br><span class=\"line\">[2020-03-01T12:03:34,659][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [transform]</span><br><span class=\"line\">[2020-03-01T12:03:34,659][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [transport-netty4]</span><br><span class=\"line\">[2020-03-01T12:03:34,659][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [vectors]</span><br><span class=\"line\">[2020-03-01T12:03:34,660][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [x-pack-analytics]</span><br><span class=\"line\">[2020-03-01T12:03:34,660][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [x-pack-ccr]</span><br><span class=\"line\">[2020-03-01T12:03:34,660][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [x-pack-core]</span><br><span class=\"line\">[2020-03-01T12:03:34,660][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [x-pack-deprecation]</span><br><span class=\"line\">[2020-03-01T12:03:34,660][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [x-pack-enrich]</span><br><span class=\"line\">[2020-03-01T12:03:34,660][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [x-pack-graph]</span><br><span class=\"line\">[2020-03-01T12:03:34,661][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [x-pack-ilm]</span><br><span class=\"line\">[2020-03-01T12:03:34,661][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [x-pack-logstash]</span><br><span class=\"line\">[2020-03-01T12:03:34,661][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [x-pack-ml]</span><br><span class=\"line\">[2020-03-01T12:03:34,661][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [x-pack-monitoring]</span><br><span class=\"line\">[2020-03-01T12:03:34,661][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [x-pack-rollup]</span><br><span class=\"line\">[2020-03-01T12:03:34,661][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [x-pack-security]</span><br><span class=\"line\">[2020-03-01T12:03:34,662][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [x-pack-sql]</span><br><span class=\"line\">[2020-03-01T12:03:34,662][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [x-pack-voting-only-node]</span><br><span class=\"line\">[2020-03-01T12:03:34,662][INFO ][o.e.p.PluginsService     ] [node-1] loaded module [x-pack-watcher]</span><br><span class=\"line\">[2020-03-01T12:03:34,662][INFO ][o.e.p.PluginsService     ] [node-1] no plugins loaded</span><br><span class=\"line\">[2020-03-01T12:03:37,968][INFO ][o.e.x.s.a.s.FileRolesStore] [node-1] parsed [0] roles from file [/usr/elastic/elasticsearch/config/roles.yml]</span><br><span class=\"line\">[2020-03-01T12:03:38,382][INFO ][o.e.x.m.p.l.CppLogMessageHandler] [node-1] [controller/2044] [Main.cc@110] controller (64 bit): Version 7.6.0 (Build 1c8cca13fa9631) Copyright (c) 2020 Elasticsearch BV</span><br><span class=\"line\">[2020-03-01T12:03:38,870][DEBUG][o.e.a.ActionModule       ] [node-1] Using REST wrapper from plugin org.elasticsearch.xpack.security.Security</span><br><span class=\"line\">[2020-03-01T12:03:38,999][INFO ][o.e.d.DiscoveryModule    ] [node-1] using discovery type [zen] and seed hosts providers [settings]</span><br><span class=\"line\">[2020-03-01T12:03:39,805][INFO ][o.e.n.Node               ] [node-1] initialized</span><br><span class=\"line\">[2020-03-01T12:03:39,805][INFO ][o.e.n.Node               ] [node-1] starting ...</span><br><span class=\"line\">[2020-03-01T12:03:39,954][INFO ][o.e.t.TransportService   ] [node-1] publish_address &#123;192.168.237.11:9300&#125;, bound_addresses &#123;[::]:9300&#125;</span><br><span class=\"line\">[2020-03-01T12:03:40,352][INFO ][o.e.b.BootstrapChecks    ] [node-1] bound or publishing to a non-loopback address, enforcing bootstrap checks</span><br><span class=\"line\">[2020-03-01T12:03:40,380][INFO ][o.e.c.c.Coordinator      ] [node-1] cluster UUID [PKv57dWOS5OAazrBgqoLcQ]</span><br><span class=\"line\">[2020-03-01T12:03:40,565][INFO ][o.e.c.s.MasterService    ] [node-1] elected-as-master ([1] nodes joined)[&#123;node-1&#125;&#123;2IBvVjP0QbeA-FDLFoLFFg&#125;&#123;kGzTwK3ZRLGujF_9zhpR9A&#125;&#123;192.168.237.11&#125;&#123;192.168.237.11:9300&#125;&#123;dilm&#125;&#123;ml.machine_memory=3954036736, xpack.installed=true, ml.max_open_jobs=20&#125; elect leader, _BECOME_MASTER_TASK_, _FINISH_ELECTION_], term: 9, version: 279, delta: master node changed &#123;previous [], current [&#123;node-1&#125;&#123;2IBvVjP0QbeA-FDLFoLFFg&#125;&#123;kGzTwK3ZRLGujF_9zhpR9A&#125;&#123;192.168.237.11&#125;&#123;192.168.237.11:9300&#125;&#123;dilm&#125;&#123;ml.machine_memory=3954036736, xpack.installed=true, ml.max_open_jobs=20&#125;]&#125;</span><br><span class=\"line\">[2020-03-01T12:03:40,674][INFO ][o.e.c.s.ClusterApplierService] [node-1] master node changed &#123;previous [], current [&#123;node-1&#125;&#123;2IBvVjP0QbeA-FDLFoLFFg&#125;&#123;kGzTwK3ZRLGujF_9zhpR9A&#125;&#123;192.168.237.11&#125;&#123;192.168.237.11:9300&#125;&#123;dilm&#125;&#123;ml.machine_memory=3954036736, xpack.installed=true, ml.max_open_jobs=20&#125;]&#125;, term: 9, version: 279, reason: Publication&#123;term=9, version=279&#125;</span><br><span class=\"line\">[2020-03-01T12:03:40,741][INFO ][o.e.h.AbstractHttpServerTransport] [node-1] publish_address &#123;192.168.237.11:9200&#125;, bound_addresses &#123;[::]:9200&#125;</span><br><span class=\"line\">[2020-03-01T12:03:40,741][INFO ][o.e.n.Node               ] [node-1] started</span><br><span class=\"line\">[2020-03-01T12:03:41,213][INFO ][o.e.l.LicenseService     ] [node-1] license [b7ab8f1c-3e13-45f0-a4d2-6f5f31a554a1] mode [basic] - valid</span><br><span class=\"line\">[2020-03-01T12:03:41,214][INFO ][o.e.x.s.s.SecurityStatusChangeListener] [node-1] Active license is now [BASIC]; Security is disabled</span><br><span class=\"line\">[2020-03-01T12:03:41,220][INFO ][o.e.g.GatewayService     ] [node-1] recovered [9] indices into cluster_state</span><br><span class=\"line\">[2020-03-01T12:03:42,116][INFO ][o.e.c.r.a.AllocationService] [node-1] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[metricbeat-7.6.0][0]]]).</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>这里说明一下，有可能会碰到内存不足，因为elasticsearch的<strong>jvm.options</strong>中配置的内存参数为1g，如果你的虚拟机给的内存不够就会出问题<br>修改<strong>jvm.options</strong>中的虚拟机参数为合适的参数，然后就可以启动成功了</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">-Xms1g</span></span><br><span class=\"line\"><span class=\"string\">-Xmx1g</span></span><br></pre></td></tr></table></figure>\n<p>这里还需要修改liunx的环境配置参数，避免重新启动的时候报错：<br>vi 编辑 /etc/security/limits.conf，在末尾加上：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">*</span> <span class=\"string\">soft</span> <span class=\"string\">nofile</span> <span class=\"number\">65536</span></span><br><span class=\"line\"><span class=\"string\">*</span> <span class=\"string\">hard</span> <span class=\"string\">nofile</span> <span class=\"number\">65536</span></span><br><span class=\"line\"><span class=\"string\">*</span> <span class=\"string\">soft</span> <span class=\"string\">nproc</span> <span class=\"number\">32000</span></span><br><span class=\"line\"><span class=\"string\">*</span> <span class=\"string\">hard</span> <span class=\"string\">nproc</span> <span class=\"number\">32000</span></span><br><span class=\"line\"><span class=\"string\">*</span> <span class=\"string\">hard</span> <span class=\"string\">memlock</span> <span class=\"string\">unlimited</span></span><br><span class=\"line\"><span class=\"string\">*</span> <span class=\"string\">soft</span> <span class=\"string\">memlock</span> <span class=\"string\">unlimited</span></span><br></pre></td></tr></table></figure>\n<p>vi 编辑 /etc/sysctl.conf，在末尾加上：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">vm.max_map_count=655360</span></span><br></pre></td></tr></table></figure>\n<p>然后刷新配置</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">root@192</span> <span class=\"string\">bin</span>]<span class=\"comment\"># sysctl -p</span></span><br><span class=\"line\"><span class=\"string\">kernel.printk</span> <span class=\"string\">=</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"string\">vm.max_map_count</span> <span class=\"string\">=</span> <span class=\"number\">655360</span></span><br><span class=\"line\">[<span class=\"string\">root@192</span> <span class=\"string\">bin</span>]<span class=\"comment\">#</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>再次启动，然后检查</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020010301-5b565f99650d4acbb3ba464408dca641.png\" alt=\"2020010301\"><br><img src=\"https://eelve.com/upload/2020/3/2020030102-ff4ef388edeb4bb1b88ddf45df96543f.png\" alt=\"2020030102\"></p>\n<hr>\n<p>【<strong>后面的话</strong>】<br>后台启动</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ ./elasticsearch -d</span><br></pre></td></tr></table></figure>\n<p>查看进程,这里的常用的命令可能不好使，我们可以使用下面的命令查找进程</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ jps</span><br><span class=\"line\">2294 Jps</span><br><span class=\"line\">2135 Elasticsearch</span><br><span class=\"line\">[iio@192 bin]$ kill -9 2135</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"Elastic Stack实战之Elasticsearch初体验(二)本地版","slug":"Elastic-Stack实战之Elasticsearch初体验(二)本地版","date":"2020-03-01T11:49:22.000Z","updated":"2021-04-19T07:47:19.512Z","comments":true,"path":"api/articles/Elastic-Stack实战之Elasticsearch初体验(二)本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2020/3/2020010303-6acab887ee4441b488ee408c30359ab5.png","content":"<p>【<strong>前面的话</strong>】前面我们已经安装好了Elasticsearch，现在我们就来尝试简单的使用。</p>\n<hr>\n<h1 id=\"壹、Elasticsearch介绍\"><a href=\"#壹、Elasticsearch介绍\" class=\"headerlink\" title=\"壹、Elasticsearch介绍\"></a>壹、Elasticsearch介绍</h1><p><img src=\"https://eelve.com/upload/2020/3/2020010303-6acab887ee4441b488ee408c30359ab5.png\" alt=\"2020010303\"></p>\n<p>Elasticsearch是整个<strong>Elastic Stack</strong>的核心。</p>\n<p>Elasticsearch 是一个分布式、RESTful 风格的搜索和数据分析引擎，能够解决不断涌现出的各种用例。 作为 Elastic Stack 的核心，它集中存储您的数据，帮助您发现意料之中以及意料之外的情况。</p>\n<p>通过 Elasticsearch，您能够执行及合并多种类型的搜索（结构化数据、非结构化数据、地理位置、指标），搜索方式随心而变。先从一个简单的问题出发，试试看能够从中发现些什么。找到与查询最匹配的 10 个文档是一回事。但如果面对的是十亿行日志，又该如何解读呢？Elasticsearch 聚合让您能够从大处着眼，探索数据的趋势和模式。</p>\n<h1 id=\"贰、插件安装\"><a href=\"#贰、插件安装\" class=\"headerlink\" title=\"贰、插件安装\"></a>贰、插件安装</h1><p>由于ES官方并没有为ES提供界面管理工具，仅仅是提供了后台的服务。elasticsearch-head是一个为ES开发的一个页面客户端工具，其源码托管于GitHub，地址为：<br><a href=\"https://github.com/mobz/elasticsearch-head\">https://github.com/mobz/elasticsearch-head</a>。<br>安装方法也比较多：</p>\n<pre><code>1.源码安装，通过npm run start启动\n2.通过docker安装\n3.通过chrome插件安装\n4.通过ES的plugin方式安装\n</code></pre>\n<p>我这边就通过chrome插件的方式安装，在应用商店中搜索，然后安装即可，安装成功之后打开你会得到下面的页面</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030106-e64fe73ddd004fb1bd87885b30563d48.png\" alt=\"2020030106\"></p>\n<p>然后连接集群，就可以进行操作了</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030107-079a29b224d14779999957304c279291.png\" alt=\"2020030107\"></p>\n<pre><code>集群健康值\n1.绿色：代表集群所有分片和副本都可用\n2.黄色：代表集群中不是所有副本都可用，但是分片都可以用\n3.红色： 代表集群中不是所有分片都可用\n</code></pre>\n<p>另外我的集群中出现了<strong>Unassigned</strong>，是因为我搭建的是单机版，而Elasticsearch默认会创建1个副本。</p>\n<h1 id=\"叁、简单使用\"><a href=\"#叁、简单使用\" class=\"headerlink\" title=\"叁、简单使用\"></a>叁、简单使用</h1><h2 id=\"3-1-基本概念\"><a href=\"#3-1-基本概念\" class=\"headerlink\" title=\"3.1 基本概念\"></a>3.1 基本概念</h2><p><strong>索引</strong></p>\n<pre><code>索引（index）是Elasticsearch对逻辑数据的逻辑存储，所以它可以分为更小的部分。\n\n可以把索引看成关系型数据库的表，索引的结构是为快速有效的全文索引准备的，特别是它不存储原始值。\n\nElasticsearch可以把索引存放在一台机器或者分散在多台服务器上，每个索引有一或多个分片（shard），每个\n分片可以有多个副本（replica）。\n</code></pre>\n<p><strong>文档</strong></p>\n<pre><code>存储在Elasticsearch中的主要实体叫文档（document）。用关系型数据库来类比的话，一个文档相当于数据库\n表中的一行记录。\n\nElasticsearch和MongoDB中的文档类似，都可以有不同的结构，但Elasticsearch的文档中，相同字段必须有相\n同类型。\n\n文档由多个字段组成，每个字段可能多次出现在一个文档里，这样的字段叫多值字段（multivalued）。\n每个字段的类型，可以是文本、数值、日期等。字段类型也可以是复杂类型，一个字段包含其他子文档或者数\n组。\n</code></pre>\n<p><strong>映射</strong></p>\n<pre><code>所有文档写进索引之前都会先进行分析，如何将输入的文本分割为词条、哪些词条又会被过滤，这种行为叫做\n映射（mapping）。一般由用户自己定义规则。\n</code></pre>\n<p><strong>文档类型</strong></p>\n<pre><code>在Elasticsearch中，一个索引对象可以存储很多不同用途的对象。例如，一个博客应用程序可以保存文章和评\n论。\n\n每个文档可以有不同的结构。\n\n不同的文档类型不能为相同的属性设置不同的类型。例如，在同一索引中的所有文档类型中，一个叫title的字段\n必须具有相同的类型。\n</code></pre>\n<h2 id=\"3-2-RESTful-API\"><a href=\"#3-2-RESTful-API\" class=\"headerlink\" title=\"3.2 RESTful API\"></a>3.2 RESTful API</h2><pre><code>在Elasticsearch中，提供了功能丰富的RESTful API的操作，包括基本的CRUD、创建索引、删除索引等操作。\n</code></pre>\n<p>下面我就通过Postman来演示一遍</p>\n<h3 id=\"3-2-1-创建非结构化索引\"><a href=\"#3-2-1-创建非结构化索引\" class=\"headerlink\" title=\"3.2.1 创建非结构化索引\"></a>3.2.1 创建非结构化索引</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#创建索引</span><br><span class=\"line\">PUT &#x2F;eelve</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;settings&quot;: &#123;</span><br><span class=\"line\">        &quot;index&quot;: &#123;</span><br><span class=\"line\">        &quot;number_of_shards&quot;: &quot;2&quot;, #分片数</span><br><span class=\"line\">        &quot;number_of_replicas&quot;: &quot;0&quot; #副本数</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030108-491386349bf145df999db01f96dca5b7.png\" alt=\"2020030108\"><br><img src=\"https://eelve.com/upload/2020/3/2020030109-e2e0dbf0610e4c9e815507b3e08824e6.png\" alt=\"2020030109\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#删除索引</span><br><span class=\"line\">DELETE &#x2F;eelve</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030110-0d0eae2e25ec4788b038d3066e0a34df.png\" alt=\"2020030110\"></p>\n<h3 id=\"3-2-2-插入数据\"><a href=\"#3-2-2-插入数据\" class=\"headerlink\" title=\"3.2.2 插入数据\"></a>3.2.2 插入数据</h3><pre><code>URL规则：\nPOST /&#123;索引&#125;/&#123;类型&#125;/&#123;id&#125;\n</code></pre>\n<p>1、带id</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST &#x2F;eelve&#x2F;user&#x2F;1001</span><br><span class=\"line\">#数据</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t&quot;id&quot;:1001,</span><br><span class=\"line\">\t&quot;name&quot;:&quot;leo&quot;,</span><br><span class=\"line\">\t&quot;age&quot;:26,</span><br><span class=\"line\">\t&quot;sex&quot;:&quot;男&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030111-8901ba31e0c841ea9f19b3b3fbf47745.png\" alt=\"2020030111\"><br><img src=\"https://eelve.com/upload/2020/3/2020030112-3b009a1840754659a01ff665fe545de8.png\" alt=\"2020030112\"></p>\n<p>2、不带id </p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030113-48589935a2ce456491006d43f0001194.png\" alt=\"2020030113\"><br><img src=\"https://eelve.com/upload/2020/3/2020030114-b2119fc6b17f46b998b9b1aed9be3481.png\" alt=\"2020030114\"></p>\n<h3 id=\"3-2-3-更新数据\"><a href=\"#3-2-3-更新数据\" class=\"headerlink\" title=\"3.2.3 更新数据\"></a>3.2.3 更新数据</h3><pre><code>在Elasticsearch中，文档数据是不为修改的，但是可以通过覆盖的方式进行更新。\n</code></pre>\n<p>1、全部修改</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030115-40f1443a848f42d7bf0b1e4a7895315b.png\" alt=\"2020030115\"><br><img src=\"https://eelve.com/upload/2020/3/2020030116-a6d802f5b1d040088d02bcd97ed58840.png\" alt=\"2020030116\"></p>\n<p>2、部分修改</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030117-7f32be33ca2b4f2796884f595f31c118.png\" alt=\"2020030117\"><br><img src=\"https://eelve.com/upload/2020/3/2020030118-69d2588cf500407c87744222d1b9f58a.png\" alt=\"2020030118\"></p>\n<p>可以看到局部更新成功</p>\n<h3 id=\"3-2-4-删除数据\"><a href=\"#3-2-4-删除数据\" class=\"headerlink\" title=\"3.2.4 删除数据\"></a>3.2.4 删除数据</h3><p><img src=\"https://eelve.com/upload/2020/3/2020030120-cf3c2d9526e94c559da3122114a23bea.png\" alt=\"2020030120\"><br><img src=\"https://eelve.com/upload/2020/3/2020030121-e5026bfd578247b585b0d1aa9f4f43e9.png\" alt=\"2020030121\"></p>\n<p>数据删除成功之后不会马上删除，只是会打上那个删除标识，Elasticsearch将会在你之后添加更多索引的时候才会在后台进行删除内容的清理。</p>\n<h3 id=\"3-2-5-搜索数据\"><a href=\"#3-2-5-搜索数据\" class=\"headerlink\" title=\"3.2.5 搜索数据\"></a>3.2.5 搜索数据</h3><p>1、根据id搜索</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030123-d35bcdb8e1a34c599da2c6af06b5999c.png\" alt=\"2020030123\"></p>\n<p>2、全部搜索</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030124-6dd8f7b0b6f64d43b78f007096a0266e.png\" alt=\"2020030124\"></p>\n<p>3、关键词搜索</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030125-6496d651790a4eeaaf6ef01d89007434.png\" alt=\"2020030125\"></p>\n<p>4、查询部分字段</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030128-39b83bc7128041ada8913de3d60d7f94.png\" alt=\"2020030128\"></p>\n<p>5、分页查询</p>\n<pre><code>和SQL使用 LIMIT 关键字返回只有一页的结果一样，Elasticsearch接受 from 和 size 参数：\n\nsize: 结果数，默认10\nfrom: 跳过开始的结果数，默认0\n</code></pre>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030129-6cfe8b9d5e3e4eabb08e850336caa524.png\" alt=\"2020030129\"></p>\n<pre><code>应该当心分页太深或者一次请求太多的结果。结果在返回前会被排序。但是记住一个搜索请求常常涉及多个分片。每个分片生成自己排好序的结果，它们接着需要集中起来排序以确保整体排序正确。\n\n在集群系统中深度分页\n为了理解为什么深度分页是有问题的，让我们假设在一个有5个主分片的索引中搜索。当我们请求结果的第一页（结果1到10）时，每个分片产生自己最顶端10个结果然后返回它们给请求节点(requesting node)，\n它再排序这所有的50个结果以选出顶端的10个结果。现在假设我们请求第1000页——结果10001到10010。工作方式都相同，不同的是每个分片都必须产生顶端的10010个结果。\n然后请求节点排序这50050个结果并丢弃50040个！可以看到在分布式系统中，排序结果的花费随着分页的深入而成倍增长。这也是为什么网络搜索引擎中任何语句不能返回多于1000个结果的原因。\n</code></pre>\n<h3 id=\"3-2-6-DSL搜索\"><a href=\"#3-2-6-DSL搜索\" class=\"headerlink\" title=\"3.2.6 DSL搜索\"></a>3.2.6 DSL搜索</h3><pre><code>Elasticsearch提供丰富且灵活的查询语言叫做DSL查询(Query DSL),它允许你构建更加复杂、强大的查询。\nDSL(Domain Specific Language特定领域语言)以JSON请求体的形式出现\n</code></pre>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030126-fdc18d55a95b49608130225d3aa15d67.png\" alt=\"2020030126\"></p>\n<p>如图我们查询了一个年龄大于10岁，性别为男性的数据</p>\n<h3 id=\"3-2-7-聚合\"><a href=\"#3-2-7-聚合\" class=\"headerlink\" title=\"3.2.7 聚合\"></a>3.2.7 聚合</h3><pre><code>在Elasticsearch中，支持聚合操作，类似SQL中的group by操作。\n</code></pre>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030127-dbc8906ff8e540c58e7cb598aabd35e9.png\" alt=\"2020030127\"></p>\n<h3 id=\"3-2-8-bulk操作\"><a href=\"#3-2-8-bulk操作\" class=\"headerlink\" title=\"3.2.8 _bulk操作\"></a>3.2.8 _bulk操作</h3><pre><code>在Elasticsearch中，支持批量的插入、修改、删除操作，都是通过_bulk的api完成的。\n</code></pre>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; action: &#123; metadata &#125;&#125;\\n</span><br><span class=\"line\">&#123; request body &#125;\\n</span><br><span class=\"line\">&#123; action: &#123; metadata &#125;&#125;\\n</span><br><span class=\"line\">&#123; request body &#125;\\n</span><br><span class=\"line\">...</span><br><span class=\"line\"># 注意每行最后必须有 \\n</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>1、批量插入</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030130-c69ed9ae775445ef90e13bfcf726efd5.png\" alt=\"2020030130\"><br><img src=\"https://eelve.com/upload/2020/3/2020030131-d32f2761eb464fb085b671a34b08ac0d.png\" alt=\"2020030131\"></p>\n<p>2、批量删除</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030132-b483295fa7054414a91efcdfbdf689e0.png\" alt=\"2020030132\"><br><img src=\"https://eelve.com/upload/2020/3/2020030134-3433028e01d941e38d143f0f4f2a7bea.png\" alt=\"2020030134\"></p>\n<p>3、批量删除</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030135-13028e1a58e64b82a3f4a8f1316160fb.png\" alt=\"2020030135\"><br><img src=\"https://eelve.com/upload/2020/3/2020030136-deeff4eb87f143ee95b33468a59a7883.png\" alt=\"2020030136\"></p>\n<p>4、混合操作</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030137-486103db9fab4f16bb639e9ee13c0961.png\" alt=\"2020030137\"><br><img src=\"https://eelve.com/upload/2020/3/2020030138-dc89cd6f155c48b1a917072b6805c15e.png\" alt=\"2020030138\"></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;took&quot;</span>: <span class=\"number\">5</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;errors&quot;</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;items&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;update&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;_index&quot;</span>: <span class=\"string\">&quot;eelve&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_type&quot;</span>: <span class=\"string\">&quot;user&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_id&quot;</span>: <span class=\"string\">&quot;2002&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_version&quot;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;result&quot;</span>: <span class=\"string\">&quot;updated&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_shards&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;total&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                    <span class=\"attr\">&quot;successful&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                    <span class=\"attr\">&quot;failed&quot;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_seq_no&quot;</span>: <span class=\"number\">7</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_primary_term&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;status&quot;</span>: <span class=\"number\">200</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;delete&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;_index&quot;</span>: <span class=\"string\">&quot;eelve&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_type&quot;</span>: <span class=\"string\">&quot;user&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_id&quot;</span>: <span class=\"string\">&quot;2003&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_version&quot;</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;result&quot;</span>: <span class=\"string\">&quot;deleted&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_shards&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;total&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                    <span class=\"attr\">&quot;successful&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                    <span class=\"attr\">&quot;failed&quot;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_seq_no&quot;</span>: <span class=\"number\">8</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;_primary_term&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;status&quot;</span>: <span class=\"number\">200</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre><code>整个批量请求需要被加载到接受我们请求节点的内存里，所以请求越大，给其它请求可用的内存就越小。有一个最佳的bulk请求大小。\n超过这个大小，性能不再提升而且可能降低。\n\n最佳大小，当然并不是一个固定的数字。它完全取决于你的硬件、你文档的大小和复杂度以及索引和搜索的负载。\n幸运的是，这个最佳点(sweetspot)还是容易找到的：试着批量索引标准的文档，随着大小的增长，当性能开始降低，\n说明你每个批次的大小太大了。开始的数量可以在1000~5000个文档之间，如果你的文档非常大，可以使用较小的批次。\n通常着眼于你请求批次的物理大小是非常有用的。一千个1kB的文档和一千个1MB的文档大不相同。一个好的批次最好保持在5-15MB大小间。\n</code></pre>\n<h3 id=\"3-2-9-字段映射\"><a href=\"#3-2-9-字段映射\" class=\"headerlink\" title=\"3.2.9 字段映射\"></a>3.2.9 字段映射</h3><p>前面我们创建的索引以及插入数据，都是由Elasticsearch进行自动判断类型，有些时候我们是需要进行明确字段类型的，否则，自动判断的类型和实际需求是不相符的。</p>\n<p>自动判断的规则如下：</p>\n<table>\n<thead>\n<tr>\n<th>SON type</th>\n<th>Field type</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Boolean:</td>\n<td>true or false “boolean”</td>\n</tr>\n<tr>\n<td>Whole number:</td>\n<td>123 “long”</td>\n</tr>\n<tr>\n<td>Floating point:</td>\n<td>123.45 “double”</td>\n</tr>\n<tr>\n<td>String, valid date:</td>\n<td>“2014-09-15” “date”</td>\n</tr>\n<tr>\n<td>String:</td>\n<td>“foo bar” “string”</td>\n</tr>\n</tbody></table>\n<p>Elasticsearch中支持的类型如下：</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>表示的数据类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>String</td>\n<td>string , text , keyword</td>\n</tr>\n<tr>\n<td>Whole number:</td>\n<td>byte , short , integer , long</td>\n</tr>\n<tr>\n<td>Floating point:</td>\n<td>float , double</td>\n</tr>\n<tr>\n<td>Boolean</td>\n<td>boolean</td>\n</tr>\n<tr>\n<td>Date</td>\n<td>date</td>\n</tr>\n</tbody></table>\n<pre><code>string类型在ElasticSearch 旧版本中使用较多，从ElasticSearch 5.x开始不再支持string，由text和keyword类型替代。\n\ntext 类型，当一个字段是要被全文搜索的，比如Email内容、产品描述，应该使用text类型。设置text类型以后，字段内容会被分析，\n在生成倒排索引以前，字符串会被分析器分成一个一个词项。text类型的字段不用于排序，很少用于聚合。\n\nkeyword类型适用于索引结构化的字段，比如email地址、主机名、状态码和标签。如果字段需要进行过滤(比如查找已发布博客中status属性为published的文章)、排序、聚合。\nkeyword类型的字段只能通过精确值搜索到。\n</code></pre>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030140-8a169a5294044d41bcfbc531ffa262fb.png\" alt=\"2020030140\"></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;settings&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;index&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;number_of_shards&quot;</span>: <span class=\"string\">&quot;2&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;number_of_replicas&quot;</span>: <span class=\"string\">&quot;0&quot;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;mappings&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;properties&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;name&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;age&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;integer&quot;</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;mail&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;keyword&quot;</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;hobby&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030141-6749ff764e8f46c6a4a2a1e356c129de.png\" alt=\"2020030141\"></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;iio&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;aliases&quot;</span>: &#123;&#125;,</span><br><span class=\"line\">        <span class=\"attr\">&quot;mappings&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;properties&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;age&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;integer&quot;</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">&quot;hobby&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">&quot;mail&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;keyword&quot;</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">&quot;name&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">&quot;settings&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;index&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;creation_date&quot;</span>: <span class=\"string\">&quot;1583052049836&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;number_of_shards&quot;</span>: <span class=\"string\">&quot;2&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;number_of_replicas&quot;</span>: <span class=\"string\">&quot;0&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;uuid&quot;</span>: <span class=\"string\">&quot;CFfnz0C0SnSkgceUONQNEA&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;version&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">&quot;created&quot;</span>: <span class=\"string\">&quot;7060099&quot;</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">&quot;provided_name&quot;</span>: <span class=\"string\">&quot;iio&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意的是7.x的版本我6.x的版本创建索引不一样，6.x还需要在properties外面用类型包裹，下面给一个示例</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;settings&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;index&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;number_of_shards&quot;</span>: <span class=\"string\">&quot;2&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;number_of_replicas&quot;</span>: <span class=\"string\">&quot;0&quot;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;mappings&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;person&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;properties&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;name&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;age&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;integer&quot;</span></span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;mail&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;keyword&quot;</span></span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;hobby&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"肆、注意事项\"><a href=\"#肆、注意事项\" class=\"headerlink\" title=\"肆、注意事项\"></a>肆、注意事项</h1><p>注意版本差异，具体关注官方。我这边所演示的整个Elastic stack家族的版本都为7.6.0。另外批量操作的时候，如果有其中某一条执行失败的话，并不会影响其他执行正确的结果。</p>\n<hr>\n<p>【<strong>后面的话</strong>】记住Elasticsearch是整个<strong>Elastic Stack</strong>的核心。具有查询分析、高速度、可扩展性、相关度和弹性，后面我们还会具体实践。另外关于Elasticsearch的还有组合搜索，权重，分词等等还没有实践，等后面实践之后文章会继续更新，可能会写一篇关于Elasticsearch深度使用的文章。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"Elastic Stack实战之Logstash初体验本地版","slug":"Elastic-Stack实战之Logstash初体验本地版","date":"2020-03-02T13:49:22.000Z","updated":"2021-04-19T07:47:19.514Z","comments":true,"path":"api/articles/Elastic-Stack实战之Logstash初体验本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2020/3/illustration-logstash-header-55d54f588c3b4ba89da489277ca709dc.png","content":"<p>【<strong>前面的话</strong>】在前面已经安装好了Elasticsearch，今天就来对<a href=\"https://www.elastic.co/cn/logstash\">Logstash</a>进行一下初步体验。</p>\n<hr>\n<h1 id=\"壹、软件版本\"><a href=\"#壹、软件版本\" class=\"headerlink\" title=\"壹、软件版本\"></a>壹、软件版本</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">Centos：CentOS-7-x86_64-Minimal-1908</span></span><br><span class=\"line\"><span class=\"attr\">VM:</span> <span class=\"number\">15.5</span><span class=\"number\">.0</span> <span class=\"string\">build-14665864</span></span><br><span class=\"line\"><span class=\"attr\">Java:</span> <span class=\"number\">1.8</span><span class=\"string\">.0_211</span></span><br><span class=\"line\"><span class=\"attr\">Elasticsearch:</span> <span class=\"string\">elasticsearch-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Logstash:</span> <span class=\"string\">logstash-7.6.0</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"贰、Logstash介绍\"><a href=\"#贰、Logstash介绍\" class=\"headerlink\" title=\"贰、Logstash介绍\"></a>贰、Logstash介绍</h1><p><img src=\"https://eelve.com/upload/2020/3/illustration-logstash-header-55d54f588c3b4ba89da489277ca709dc.png\" alt=\"illustration-logstash-header\"></p>\n<pre><code>Logstash 的主要作用是集中、转换和存储数据。是开源的服务器端数据处理管道，能够同时从多个来源采集数据，转换数据，然后将数据发送到您最喜欢的“存储库”中。\n\nLogstash 能够动态地采集、转换和传输数据，不受格式或复杂度的影响。利用 Grok 从非结构化数据中派生出结构，从 IP 地址解码出地理坐标，匿名化或排除敏感字段，并简化整体处理过程。\n\nLogstash 采集，还有更多输入、过滤器和输出\n</code></pre>\n<p><strong>输入：</strong> 采集各种样式、大小和来源的数据</p>\n<p><img src=\"https://eelve.com/upload/2020/3/diagram-logstash-inputs-2825f9dced964c4abae8dcd1f3012261.svg\" alt=\"diagram-logstash-inputs\"></p>\n<pre><code>数据往往以各种各样的形式，或分散或集中地存在于很多系统中。 Logstash 支持 各种输入选择 ，可以在同一时间从众多常用来源捕捉事件。能够以连续的流式传输方式，轻松地从您的日志、指标、Web 应用、数据存储以及各种 AWS 服务采集数据。 \n</code></pre>\n<p><strong>过滤器：</strong> 实时解析和转换数据</p>\n<p><img src=\"https://eelve.com/upload/2020/3/diagram-logstash-filters-62adaf05398e48f688e1357503b43f81.svg\" alt=\"diagram-logstash-filters\"></p>\n<pre><code>数据从源传输到存储库的过程中，Logstash 过滤器能够解析各个事件，识别已命名的字段以构建结构，并将它们转换成通用格式，以便更轻松、更快速地分析和实现商业价值。\n\n    利用 Grok 从非结构化数据中派生出结构\n    从 IP 地址破译出地理坐标\n    将 PII 数据匿名化，完全排除敏感字段\n    简化整体处理，不受数据源、格式或架构的影响 \n\n我们的过滤器库丰富多样，拥有无限可能。     \n</code></pre>\n<p><strong>输出：</strong> 选择您的存储库，导出您的数据</p>\n<p><img src=\"https://eelve.com/upload/2020/3/diagram-logstash-outputs-fe56db1595444ddfafe48d62d5623627.svg\" alt=\"diagram-logstash-outputs\"></p>\n<pre><code> 尽管 Elasticsearch 是我们的首选输出方向，能够为我们的搜索和分析带来无限可能，但它并非唯一选择。\n\nLogstash 提供众多输出选择，您可以将数据发送到您要指定的地方，并且能够灵活地解锁众多下游用例。 \n</code></pre>\n<p><strong>可扩展：</strong> 以自己的方式创建和配置管道</p>\n<pre><code>Logstash 采用可插拔框架，拥有 200 多个插件。您可以将不同的输入选择、过滤器和输出选择混合搭配、精心安排，让它们在管道中和谐地运行。\n\n从自定义应用程序采集数据？没有看到所需的插件？Logstash 插件很容易构建。我们有一个极好的插件开发 API 和插件生成器，可帮助您开始创作并分享成果。\n</code></pre>\n<h1 id=\"叁、Logstash安装\"><a href=\"#叁、Logstash安装\" class=\"headerlink\" title=\"叁、Logstash安装\"></a>叁、Logstash安装</h1><h2 id=\"3-1-下载地址\"><a href=\"#3-1-下载地址\" class=\"headerlink\" title=\"3.1 下载地址\"></a>3.1 下载地址</h2><p><a href=\"https://artifacts.elastic.co/downloads/logstash/logstash-7.6.0.tar.gz\">logstash-7.6.0.tar.gz</a></p>\n<hr>\n<h2 id=\"3-2-解压logstash-7-6-0-tar-gz\"><a href=\"#3-2-解压logstash-7-6-0-tar-gz\" class=\"headerlink\" title=\"3.2 解压logstash-7.6.0.tar.gz\"></a>3.2 解压logstash-7.6.0.tar.gz</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zvxf logstash-7.6.0.tar.gz -C /usr/elastic</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-3-elasticsearch配置说明\"><a href=\"#3-3-elasticsearch配置说明\" class=\"headerlink\" title=\"3.3 elasticsearch配置说明\"></a>3.3 elasticsearch配置说明</h2><p>Logstash的配置有三部分，如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">input &#123; #输入</span><br><span class=\"line\">    stdin &#123; ... &#125; #标准输入</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    filter &#123; #过滤，对数据进行分割、截取等处理</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">output &#123; #输出</span><br><span class=\"line\">    stdout &#123; ... &#125; #标准输出</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"肆、Logstash简单使用\"><a href=\"#肆、Logstash简单使用\" class=\"headerlink\" title=\"肆、Logstash简单使用\"></a>肆、Logstash简单使用</h1><h2 id=\"4-1-采集控制台日志\"><a href=\"#4-1-采集控制台日志\" class=\"headerlink\" title=\"4.1 采集控制台日志\"></a>4.1 采集控制台日志</h2><p>启动命令：./logstash -e ‘input { stdin { } } output { stdout {} }’</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ ./logstash -e &#x27;input &#123; stdin &#123; &#125; &#125; output &#123; stdout &#123;&#125; &#125;&#x27;</span><br><span class=\"line\">Sending Logstash logs to /usr/elastic/logstash/logs which is now configured via log4j2.properties</span><br><span class=\"line\">[2020-03-01T18:00:48,316][WARN ][logstash.config.source.multilocal] Ignoring the &#x27;pipelines.yml&#x27; file because modules or command line options are specified</span><br><span class=\"line\">[2020-03-01T18:00:48,495][INFO ][logstash.runner          ] Starting Logstash &#123;&quot;logstash.version&quot;=&gt;&quot;7.6.0&quot;&#125;</span><br><span class=\"line\">[2020-03-01T18:00:50,395][INFO ][org.reflections.Reflections] Reflections took 48 ms to scan 1 urls, producing 20 keys and 40 values </span><br><span class=\"line\">[2020-03-01T18:00:51,788][WARN ][org.logstash.instrument.metrics.gauge.LazyDelegatingGauge][main] A gauge metric of an unknown type (org.jruby.RubyArray) has been create for key: cluster_uuids. This may result in invalid serialization.  It is recommended to log an issue to the responsible developer/development team.</span><br><span class=\"line\">[2020-03-01T18:00:51,810][INFO ][logstash.javapipeline    ][main] Starting pipeline &#123;:pipeline_id=&gt;&quot;main&quot;, &quot;pipeline.workers&quot;=&gt;4, &quot;pipeline.batch.size&quot;=&gt;125, &quot;pipeline.batch.delay&quot;=&gt;50, &quot;pipeline.max_inflight&quot;=&gt;500, &quot;pipeline.sources&quot;=&gt;[&quot;config string&quot;], :thread=&gt;&quot;#&lt;Thread:0x3fa519f0 run&gt;&quot;&#125;</span><br><span class=\"line\">[2020-03-01T18:00:52,795][INFO ][logstash.javapipeline    ][main] Pipeline started &#123;&quot;pipeline.id&quot;=&gt;&quot;main&quot;&#125;</span><br><span class=\"line\">The stdin plugin is now waiting for input:</span><br><span class=\"line\">[2020-03-01T18:00:52,892][INFO ][logstash.agent           ] Pipelines running &#123;:count=&gt;1, :running_pipelines=&gt;[:main], :non_running_pipelines=&gt;[]&#125;</span><br><span class=\"line\">[2020-03-01T18:00:53,277][INFO ][logstash.agent           ] Successfully started Logstash API endpoint &#123;:port=&gt;9600&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/usr/elastic/logstash/vendor/bundle/jruby/2.5.0/gems/awesome_print-1.7.0/lib/awesome_print/formatters/base_formatter.rb:31: warning: constant ::Fixnum is deprecated</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">          &quot;host&quot; =&gt; &quot;192.168.237.11&quot;,</span><br><span class=\"line\">       &quot;message&quot; =&gt; &quot;&quot;,</span><br><span class=\"line\">    &quot;@timestamp&quot; =&gt; 2020-03-01T10:01:05.128Z,</span><br><span class=\"line\">      &quot;@version&quot; =&gt; &quot;1&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">          &quot;host&quot; =&gt; &quot;192.168.237.11&quot;,</span><br><span class=\"line\">       &quot;message&quot; =&gt; &quot;&quot;,</span><br><span class=\"line\">    &quot;@timestamp&quot; =&gt; 2020-03-01T10:01:05.334Z,</span><br><span class=\"line\">      &quot;@version&quot; =&gt; &quot;1&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">          &quot;host&quot; =&gt; &quot;192.168.237.11&quot;,</span><br><span class=\"line\">       &quot;message&quot; =&gt; &quot;&quot;,</span><br><span class=\"line\">    &quot;@timestamp&quot; =&gt; 2020-03-01T10:01:05.523Z,</span><br><span class=\"line\">      &quot;@version&quot; =&gt; &quot;1&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">hello world</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">          &quot;host&quot; =&gt; &quot;192.168.237.11&quot;,</span><br><span class=\"line\">       &quot;message&quot; =&gt; &quot;hello world&quot;,</span><br><span class=\"line\">    &quot;@timestamp&quot; =&gt; 2020-03-01T10:01:20.320Z,</span><br><span class=\"line\">      &quot;@version&quot; =&gt; &quot;1&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-2-采集自定义日志\"><a href=\"#4-2-采集自定义日志\" class=\"headerlink\" title=\"4.2 采集自定义日志\"></a>4.2 采集自定义日志</h2><h3 id=\"4-2-1-日志结构\"><a href=\"#4-2-1-日志结构\" class=\"headerlink\" title=\"4.2.1 日志结构\"></a>4.2.1 日志结构</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2020-03-02 20:08:20|ERROR|数据库连接出错|参数：id&#x3D;1002</span><br></pre></td></tr></table></figure>\n<p>可以看到，日志中的内容是使用“|”进行分割的，使用，我们在处理的时候，也需要对数据做分割处理。</p>\n<h3 id=\"4-2-2-编写配置\"><a href=\"#4-2-2-编写配置\" class=\"headerlink\" title=\"4.2.2 编写配置\"></a>4.2.2 编写配置</h3><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ vi ../config/logstash-diy.yml </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">input &#123;</span><br><span class=\"line\">    file &#123;</span><br><span class=\"line\">        path =&gt; &quot;/usr/elastic/logs/diy.log&quot;</span><br><span class=\"line\">        start_position =&gt; &quot;beginning&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">filter &#123;</span><br><span class=\"line\">    mutate &#123;</span><br><span class=\"line\">        split =&gt; &#123;&quot;message&quot;=&gt;&quot;|&quot;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">output &#123;</span><br><span class=\"line\">    stdout &#123; codec =&gt; rubydebug &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2-3-启动测试\"><a href=\"#4-2-3-启动测试\" class=\"headerlink\" title=\"4.2.3 启动测试\"></a>4.2.3 启动测试</h3><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ ./logstash -f ../config/logstash-diy.yml </span><br><span class=\"line\">Sending Logstash logs to /usr/elastic/logstash/logs which is now configured via log4j2.properties</span><br><span class=\"line\">[2020-03-01T18:15:06,549][WARN ][logstash.config.source.multilocal] Ignoring the &#x27;pipelines.yml&#x27; file because modules or command line options are specified</span><br><span class=\"line\">[2020-03-01T18:15:06,682][INFO ][logstash.runner          ] Starting Logstash &#123;&quot;logstash.version&quot;=&gt;&quot;7.6.0&quot;&#125;</span><br><span class=\"line\">[2020-03-01T18:15:08,737][INFO ][org.reflections.Reflections] Reflections took 38 ms to scan 1 urls, producing 20 keys and 40 values </span><br><span class=\"line\">[2020-03-01T18:15:10,140][WARN ][org.logstash.instrument.metrics.gauge.LazyDelegatingGauge][main] A gauge metric of an unknown type (org.jruby.RubyArray) has been create for key: cluster_uuids. This may result in invalid serialization.  It is recommended to log an issue to the responsible developer/development team.</span><br><span class=\"line\">[2020-03-01T18:15:10,167][INFO ][logstash.javapipeline    ][main] Starting pipeline &#123;:pipeline_id=&gt;&quot;main&quot;, &quot;pipeline.workers&quot;=&gt;4, &quot;pipeline.batch.size&quot;=&gt;125, &quot;pipeline.batch.delay&quot;=&gt;50, &quot;pipeline.max_inflight&quot;=&gt;500, &quot;pipeline.sources&quot;=&gt;[&quot;/usr/elastic/logstash/config/logstash-diy.yml&quot;], :thread=&gt;&quot;#&lt;Thread:0x26d10ea9 run&gt;&quot;&#125;</span><br><span class=\"line\">[2020-03-01T18:15:11,223][INFO ][logstash.inputs.file     ][main] No sincedb_path set, generating one based on the &quot;path&quot; setting &#123;:sincedb_path=&gt;&quot;/usr/elastic/logstash/data/plugins/inputs/file/.sincedb_b626b2bdb9f76816ac98ff32e97c96bf&quot;, :path=&gt;[&quot;/usr/elastic/logs/diy.log&quot;]&#125;</span><br><span class=\"line\">[2020-03-01T18:15:11,266][INFO ][logstash.javapipeline    ][main] Pipeline started &#123;&quot;pipeline.id&quot;=&gt;&quot;main&quot;&#125;</span><br><span class=\"line\">[2020-03-01T18:15:11,367][INFO ][filewatch.observingtail  ][main] START, creating Discoverer, Watch with file and sincedb collections</span><br><span class=\"line\">[2020-03-01T18:15:11,367][INFO ][logstash.agent           ] Pipelines running &#123;:count=&gt;1, :running_pipelines=&gt;[:main], :non_running_pipelines=&gt;[]&#125;</span><br><span class=\"line\">[2020-03-01T18:15:11,703][INFO ][logstash.agent           ] Successfully started Logstash API endpoint &#123;:port=&gt;9600&#125;</span><br><span class=\"line\">/usr/elastic/logstash/vendor/bundle/jruby/2.5.0/gems/awesome_print-1.7.0/lib/awesome_print/formatters/base_formatter.rb:31: warning: constant ::Fixnum is deprecated</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">          &quot;path&quot; =&gt; &quot;/usr/elastic/logs/diy.log&quot;,</span><br><span class=\"line\">          &quot;host&quot; =&gt; &quot;192.168.237.11&quot;,</span><br><span class=\"line\">    &quot;@timestamp&quot; =&gt; 2020-03-01T10:16:57.260Z,</span><br><span class=\"line\">       &quot;message&quot; =&gt; [</span><br><span class=\"line\">        [0] &quot;2020-03-02 20:08:20&quot;,</span><br><span class=\"line\">        [1] &quot;ERROR&quot;,</span><br><span class=\"line\">        [2] &quot;数据库连接出错&quot;,</span><br><span class=\"line\">        [3] &quot;参数：id=1002&quot;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">      &quot;@version&quot; =&gt; &quot;1&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后输出日志到diy.log文件中</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;20120-03-02 20:21:21|ERROR|读取数据出错|参数：id=1003&quot; &gt;&gt; diy.log</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">          &quot;path&quot; =&gt; &quot;/usr/elastic/logs/diy.log&quot;,</span><br><span class=\"line\">          &quot;host&quot; =&gt; &quot;192.168.237.11&quot;,</span><br><span class=\"line\">    &quot;@timestamp&quot; =&gt; 2020-03-01T10:17:11.442Z,</span><br><span class=\"line\">       &quot;message&quot; =&gt; [</span><br><span class=\"line\">        [0] &quot;20120-03-02 20:21:21&quot;,</span><br><span class=\"line\">        [1] &quot;ERROR&quot;,</span><br><span class=\"line\">        [2] &quot;读取数据出错&quot;,</span><br><span class=\"line\">        [3] &quot;参数：id=1003&quot;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">      &quot;@version&quot; =&gt; &quot;1&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们可以看到日志已经通过”|”被分割出来了。</p>\n<h2 id=\"4-3-输出到Elasticsearch\"><a href=\"#4-3-输出到Elasticsearch\" class=\"headerlink\" title=\"4.3 输出到Elasticsearch\"></a>4.3 输出到Elasticsearch</h2><h3 id=\"4-3-1-编写配置\"><a href=\"#4-3-1-编写配置\" class=\"headerlink\" title=\"4.3.1 编写配置\"></a>4.3.1 编写配置</h3><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ vi ../config/logstash-elastic.yml </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">input &#123;</span><br><span class=\"line\">    file &#123;</span><br><span class=\"line\">        path =&gt; &quot;/usr/elastic/logs/diy.log&quot;</span><br><span class=\"line\">        start_position =&gt; &quot;beginning&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">filter &#123;</span><br><span class=\"line\">    mutate &#123;</span><br><span class=\"line\">        split =&gt; &#123;&quot;message&quot;=&gt;&quot;|&quot;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">output &#123;</span><br><span class=\"line\">    stdout &#123; codec =&gt; rubydebug &#125;</span><br><span class=\"line\">    elasticsearch &#123;</span><br><span class=\"line\">        hosts =&gt; [&quot;192.168.237.11:9200&quot;]</span><br><span class=\"line\">        index =&gt; &quot;elastic-%&#123;+YYYY.MM.dd&#125;&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-3-2-启动测试\"><a href=\"#4-3-2-启动测试\" class=\"headerlink\" title=\"4.3.2 启动测试\"></a>4.3.2 启动测试</h3><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ ./logstash -f ../config/logstash-elastic.yml </span><br><span class=\"line\">Sending Logstash logs to /usr/elastic/logstash/logs which is now configured via log4j2.properties</span><br><span class=\"line\">[2020-03-01T18:26:42,445][WARN ][logstash.config.source.multilocal] Ignoring the &#x27;pipelines.yml&#x27; file because modules or command line options are specified</span><br><span class=\"line\">[2020-03-01T18:26:42,638][INFO ][logstash.runner          ] Starting Logstash &#123;&quot;logstash.version&quot;=&gt;&quot;7.6.0&quot;&#125;</span><br><span class=\"line\">[2020-03-01T18:26:45,170][INFO ][org.reflections.Reflections] Reflections took 46 ms to scan 1 urls, producing 20 keys and 40 values </span><br><span class=\"line\">[2020-03-01T18:26:47,179][INFO ][logstash.outputs.elasticsearch][main] Elasticsearch pool URLs updated &#123;:changes=&gt;&#123;:removed=&gt;[], :added=&gt;[http://192.168.237.11:9200/]&#125;&#125;</span><br><span class=\"line\">[2020-03-01T18:26:47,487][WARN ][logstash.outputs.elasticsearch][main] Restored connection to ES instance &#123;:url=&gt;&quot;http://192.168.237.11:9200/&quot;&#125;</span><br><span class=\"line\">[2020-03-01T18:26:47,553][INFO ][logstash.outputs.elasticsearch][main] ES Output version determined &#123;:es_version=&gt;7&#125;</span><br><span class=\"line\">[2020-03-01T18:26:47,561][WARN ][logstash.outputs.elasticsearch][main] Detected a 6.x and above cluster: the `type` event field won&#x27;t be used to determine the document _type &#123;:es_version=&gt;7&#125;</span><br><span class=\"line\">[2020-03-01T18:26:47,760][INFO ][logstash.outputs.elasticsearch][main] New Elasticsearch output &#123;:class=&gt;&quot;LogStash::Outputs::ElasticSearch&quot;, :hosts=&gt;[&quot;//192.168.237.11:9200&quot;]&#125;</span><br><span class=\"line\">[2020-03-01T18:26:47,855][INFO ][logstash.outputs.elasticsearch][main] Using default mapping template</span><br><span class=\"line\">[2020-03-01T18:26:47,900][WARN ][org.logstash.instrument.metrics.gauge.LazyDelegatingGauge][main] A gauge metric of an unknown type (org.jruby.specialized.RubyArrayOneObject) has been create for key: cluster_uuids. This may result in invalid serialization.  It is recommended to log an issue to the responsible developer/development team.</span><br><span class=\"line\">[2020-03-01T18:26:47,914][INFO ][logstash.javapipeline    ][main] Starting pipeline &#123;:pipeline_id=&gt;&quot;main&quot;, &quot;pipeline.workers&quot;=&gt;4, &quot;pipeline.batch.size&quot;=&gt;125, &quot;pipeline.batch.delay&quot;=&gt;50, &quot;pipeline.max_inflight&quot;=&gt;500, &quot;pipeline.sources&quot;=&gt;[&quot;/usr/elastic/logstash/config/logstash-elastic.yml&quot;], :thread=&gt;&quot;#&lt;Thread:0x77e7dd14 run&gt;&quot;&#125;</span><br><span class=\"line\">[2020-03-01T18:26:48,011][INFO ][logstash.outputs.elasticsearch][main] Attempting to install template &#123;:manage_template=&gt;&#123;&quot;index_patterns&quot;=&gt;&quot;logstash-*&quot;, &quot;version&quot;=&gt;60001, &quot;settings&quot;=&gt;&#123;&quot;index.refresh_interval&quot;=&gt;&quot;5s&quot;, &quot;number_of_shards&quot;=&gt;1&#125;, &quot;mappings&quot;=&gt;&#123;&quot;dynamic_templates&quot;=&gt;[&#123;&quot;message_field&quot;=&gt;&#123;&quot;path_match&quot;=&gt;&quot;message&quot;, &quot;match_mapping_type&quot;=&gt;&quot;string&quot;, &quot;mapping&quot;=&gt;&#123;&quot;type&quot;=&gt;&quot;text&quot;, &quot;norms&quot;=&gt;false&#125;&#125;&#125;, &#123;&quot;string_fields&quot;=&gt;&#123;&quot;match&quot;=&gt;&quot;*&quot;, &quot;match_mapping_type&quot;=&gt;&quot;string&quot;, &quot;mapping&quot;=&gt;&#123;&quot;type&quot;=&gt;&quot;text&quot;, &quot;norms&quot;=&gt;false, &quot;fields&quot;=&gt;&#123;&quot;keyword&quot;=&gt;&#123;&quot;type&quot;=&gt;&quot;keyword&quot;, &quot;ignore_above&quot;=&gt;256&#125;&#125;&#125;&#125;&#125;], &quot;properties&quot;=&gt;&#123;&quot;@timestamp&quot;=&gt;&#123;&quot;type&quot;=&gt;&quot;date&quot;&#125;, &quot;@version&quot;=&gt;&#123;&quot;type&quot;=&gt;&quot;keyword&quot;&#125;, &quot;geoip&quot;=&gt;&#123;&quot;dynamic&quot;=&gt;true, &quot;properties&quot;=&gt;&#123;&quot;ip&quot;=&gt;&#123;&quot;type&quot;=&gt;&quot;ip&quot;&#125;, &quot;location&quot;=&gt;&#123;&quot;type&quot;=&gt;&quot;geo_point&quot;&#125;, &quot;latitude&quot;=&gt;&#123;&quot;type&quot;=&gt;&quot;half_float&quot;&#125;, &quot;longitude&quot;=&gt;&#123;&quot;type&quot;=&gt;&quot;half_float&quot;&#125;&#125;&#125;&#125;&#125;&#125;&#125;</span><br><span class=\"line\">[2020-03-01T18:26:49,458][INFO ][logstash.inputs.file     ][main] No sincedb_path set, generating one based on the &quot;path&quot; setting &#123;:sincedb_path=&gt;&quot;/usr/elastic/logstash/data/plugins/inputs/file/.sincedb_b626b2bdb9f76816ac98ff32e97c96bf&quot;, :path=&gt;[&quot;/usr/elastic/logs/diy.log&quot;]&#125;</span><br><span class=\"line\">[2020-03-01T18:26:49,506][INFO ][logstash.javapipeline    ][main] Pipeline started &#123;&quot;pipeline.id&quot;=&gt;&quot;main&quot;&#125;</span><br><span class=\"line\">[2020-03-01T18:26:49,600][INFO ][logstash.agent           ] Pipelines running &#123;:count=&gt;1, :running_pipelines=&gt;[:main], :non_running_pipelines=&gt;[]&#125;</span><br><span class=\"line\">[2020-03-01T18:26:49,622][INFO ][filewatch.observingtail  ][main] START, creating Discoverer, Watch with file and sincedb collections</span><br><span class=\"line\">[2020-03-01T18:26:50,082][INFO ][logstash.agent           ] Successfully started Logstash API endpoint &#123;:port=&gt;9600&#125;</span><br><span class=\"line\">/usr/elastic/logstash/vendor/bundle/jruby/2.5.0/gems/awesome_print-1.7.0/lib/awesome_print/formatters/base_formatter.rb:31: warning: constant ::Fixnum is deprecated</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;@timestamp&quot; =&gt; 2020-03-01T10:27:13.467Z,</span><br><span class=\"line\">          &quot;path&quot; =&gt; &quot;/usr/elastic/logs/diy.log&quot;,</span><br><span class=\"line\">      &quot;@version&quot; =&gt; &quot;1&quot;,</span><br><span class=\"line\">       &quot;message&quot; =&gt; [</span><br><span class=\"line\">        [0] &quot;20120-03-02 20:21:21&quot;,</span><br><span class=\"line\">        [1] &quot;ERROR&quot;,</span><br><span class=\"line\">        [2] &quot;读取数据出错&quot;,</span><br><span class=\"line\">        [3] &quot;参数：id=1003&quot;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">          &quot;host&quot; =&gt; &quot;192.168.237.11&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030201-c786b611e3664d718a8bc7a24d556d09.png\" alt=\"2020030201\"></p>\n<h2 id=\"4-3-停止服务\"><a href=\"#4-3-停止服务\" class=\"headerlink\" title=\"4.3 停止服务\"></a>4.3 停止服务</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 logs]$ jps</span><br><span class=\"line\">7110 Logstash</span><br><span class=\"line\">6794 Elasticsearch</span><br><span class=\"line\">7183 Jps</span><br><span class=\"line\">[iio@192 logs]$ kill -9 7110</span><br><span class=\"line\">[iio@192 logs]$ kill -9 6794</span><br><span class=\"line\">[iio@192 logs]$ </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<hr>\n<p>【<strong>后面的话</strong>】Logstash作为三大剑客，主要是采集和过滤，但是在现在采集公文部分被Beats家族取代，所以目前最重要的作用是过滤，但是也不是说不能采集了，只是相比于Beat来说效率更低而已。另外还有一点一个输入可以有多份输出,在4.3中也有应用,下面是主要的配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">input &#123; #输入</span><br><span class=\"line\">    stdin &#123; ... &#125; #标准输入</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">filter &#123; #过滤，对数据进行分割、截取等处理</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">output &#123; #输出1</span><br><span class=\"line\">    stdout &#123; ... &#125; #标准输出</span><br><span class=\"line\"></span><br><span class=\"line\">    elasticsearch &#123; #输出2</span><br><span class=\"line\">        hosts &#x3D;&gt; [ &quot;192.168.40.133:9200&quot;,&quot;192.168.40.134:9200&quot;,&quot;192.168.40.135:9200&quot;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"Elastic Stack实战之Metricbeat初体验本地版","slug":"Elastic-Stack实战之Metricbeat初体验本地版","date":"2020-03-07T13:36:20.000Z","updated":"2021-04-19T07:47:19.516Z","comments":true,"path":"api/articles/Elastic-Stack实战之Metricbeat初体验本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2020/3/screenshot-infrastructure-ui-d2c3e13f47f74d82a6f0f6c2799d94f8.png","content":"<p>【<strong>前面的话</strong>】<a href=\"https://eelve.com/archives/beats\">前面介绍了Elastic Stack的Beats家族</a>，并且<a href=\"https://eelve.com/archives/filebeat\">体验了Filebeat</a>，接下来我们就继续来体验一下</p>\n<hr>\n<h1 id=\"壹、软件版本\"><a href=\"#壹、软件版本\" class=\"headerlink\" title=\"壹、软件版本\"></a>壹、软件版本</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">Centos：CentOS-7-x86_64-Minimal-1908</span></span><br><span class=\"line\"><span class=\"attr\">VM:</span> <span class=\"number\">15.5</span><span class=\"number\">.0</span> <span class=\"string\">build-14665864</span></span><br><span class=\"line\"><span class=\"attr\">Java:</span> <span class=\"number\">1.8</span><span class=\"string\">.0_211</span></span><br><span class=\"line\"><span class=\"attr\">Elasticsearch:</span> <span class=\"string\">elasticsearch-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Logstash:</span> <span class=\"string\">logstash-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Kibana:</span> <span class=\"string\">kibana-7.6.0</span></span><br><span class=\"line\"><span class=\"string\">MetricBeat：filebeat-7.6.0</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"贰、MetricBeat介绍\"><a href=\"#贰、MetricBeat介绍\" class=\"headerlink\" title=\"贰、MetricBeat介绍\"></a>贰、MetricBeat介绍</h1><p>MetricBeat是一种轻量型指标采集器，用于从系统和服务收集指标。Metricbeat 能够以一种轻量型的方式，输送各种系统和服务统计数据，从 CPU 到内存，从 Redis 到 Nginx，不一而足。</p>\n<ul>\n<li>系统级监控，更简洁</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/screenshot-infrastructure-ui-d2c3e13f47f74d82a6f0f6c2799d94f8.png\" alt=\"screenshot-infrastructure-ui\"></p>\n<ul>\n<li><p>单个二进制文件提供多种模块</p>\n<p>Metricbeat 提供多种内部模块，这些模块可从多项服务（诸如 Apache、Jolokia、NGINX、MongoDB、MySQL、PostgreSQL、Prometheus 等等）中收集指标。安装简单，完全零依赖性。只需在配置文件中启用您所需的模块即可。</p>\n<p>而且，如果您没有看到要找的模块，还可以自己构建。以 Go 语言编写 Metricbeat 模块，过程十分简单。 </p>\n<ul>\n<li>系统</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/metricbeat-modules-system-7f76e2200cfb40089bb112f50aae710e.jpg\" alt=\"metricbeat-modules-system\"></p>\n<ul>\n<li>Docker</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/container-monitoring-screenshot-carousel-docker-908943a547964d11996a9775855235f0.jpg\" alt=\"container-monitoring-screenshot-carousel-docker\"></p>\n<ul>\n<li>MongoDB</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/metricbeat-modules-mongo-d5d719649a7a4e2a9bf9f1a984528efc.jpg\" alt=\"metricbeat-modules-mongo\"></p>\n<ul>\n<li>Kubernetes</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/container-monitoring-screenshot-carousel-kubernetes-0ee5a1fdacf74c3b82d12c81c5c14af1.jpg\" alt=\"container-monitoring-screenshot-carousel-kubernetes\"></p>\n</li>\n<li><p>容器就绪 </p>\n<p>近来是不是所有工作都转移到了 Docker 中？通过 Elastic Stack，您能够轻松地监测容器。将 Metricbeat 部署到同一台主机上的一个单独容器后，它将收集与主机上运行的其他每一个容器相关的统计数据。在收集统计数据时，它直接从 proc 文件系统读取 cgroup 信息，这就意味着它无需特权即可访问 Docker API，并且同样适用于其他 Runtime。针对 Docker 的 Autodiscovery 让事情进一步简化，您只需指定一个条件即可开启 Metricbeat 模块。 </p>\n</li>\n<li><p>不错过任何检测信号</p>\n<p>将指标通过假脱机传输方式输送至磁盘，这样您的数据管道再也不会错过任何一个数据点，即使发生中断（例如网络问题），也勿需担心。Metricbeat 会保留传入的数据，并在重新上线后将这些指标输送至 Elasticsearch 或 Logstash。 </p>\n</li>\n</ul>\n<ul>\n<li><p>输送至 Elasticsearch 或 Logstash。在 Kibana 中实现可视化。</p>\n<p>Metricbeat 是 Elastic Stack 的一部分，因此能够与 Logstash、Elasticsearch 和 Kibana 无缝协作。无论您要使用 Logstash 转换或充实指标，还是在 Elasticsearch 中随意处理一些数据分析，亦或在 Kibana 中构建和分享仪表板，Metricbeat 都能轻松地将您的数据发送至最关键的地方。</p>\n</li>\n</ul>\n<h1 id=\"叁-MetricBeat安装\"><a href=\"#叁-MetricBeat安装\" class=\"headerlink\" title=\"叁 MetricBeat安装\"></a>叁 MetricBeat安装</h1><h2 id=\"3-1-下载地址\"><a href=\"#3-1-下载地址\" class=\"headerlink\" title=\"3.1 下载地址\"></a>3.1 下载地址</h2><p><a href=\"https://artifacts.elastic.co/downloads/beats/filebeat/metricBeat-7.6.0-linux-x86_64.tar.gz\">metricBeat-7.6.0-linux-x86_64</a></p>\n<h2 id=\"3-2-解压metricBeat-7-6-0-linux-x86-64\"><a href=\"#3-2-解压metricBeat-7-6-0-linux-x86-64\" class=\"headerlink\" title=\"3.2 解压metricBeat-7.6.0-linux-x86_64\"></a>3.2 解压metricBeat-7.6.0-linux-x86_64</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zvxf metricBeat-7.6.0-linux-x86_64.tar.gz -C /usr/elastic</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-3-使用Kibana展示Metricbeat系统指标\"><a href=\"#3-3-使用Kibana展示Metricbeat系统指标\" class=\"headerlink\" title=\"3.3 使用Kibana展示Metricbeat系统指标\"></a>3.3 使用Kibana展示Metricbeat系统指标</h2><ul>\n<li>修改Metricbeat配置</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output.elasticsearch:</span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\"> Array of hosts to connect to.</span></span><br><span class=\"line\">  hosts: [&quot;http://192.168.237.11:9200&quot;]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 metricbeat]$ ./metricbeat -e</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在Elasticsearch中查看采集的数据</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030707-906f151d4ab34f7c8bbcfea65d83f8e9.png\" alt=\"2020030707\"></p>\n<ul>\n<li>修改Metricbeat配置</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setup.kibana:</span><br><span class=\"line\">  host: &quot;192.168.237.11:5601&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装仪表盘</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./metricbeat setup --dashboards</span><br></pre></td></tr></table></figure>\n<ul>\n<li>重启服务查看效果</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030708-ba77ee4e36c6478c8b816a314d730f80.png\" alt=\"2020030708\"><br><img src=\"https://eelve.com/upload/2020/3/2020030709-a40f0d5711fc4707a416e2c39bbbcb79.png\" alt=\"2020030709\"></p>\n<p>到这里我们就监控了我们系统的指标，并且利用Kibana提供的仪表板做了图形化展示。</p>\n<h2 id=\"3-4-使用Kibana展示Metricbeat采集nginx指标\"><a href=\"#3-4-使用Kibana展示Metricbeat采集nginx指标\" class=\"headerlink\" title=\"3.4 使用Kibana展示Metricbeat采集nginx指标\"></a>3.4 使用Kibana展示Metricbeat采集nginx指标</h2><ul>\n<li><p>开启nginx的状态查询</p>\n<p>在nginx中，需要开启状态查询，才能查询到指标数据。</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">重新编译nginx</span></span><br><span class=\"line\">./configure --prefix=/usr/local/nginx --with-http_stub_status_module</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br><span class=\"line\"></span><br><span class=\"line\">./nginx -V #查询版本信息</span><br><span class=\"line\">nginx version: nginx/1.12.0</span><br><span class=\"line\">built by gcc 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC) </span><br><span class=\"line\">configure arguments: --prefix=/usr/local/nginx/ --with-http_stub_status_module</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">配置nginx</span></span><br><span class=\"line\">vi nginx.conf</span><br><span class=\"line\">location /nginx-status &#123;</span><br><span class=\"line\">    stub_status on;</span><br><span class=\"line\">    access_log off;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://eelve.com/upload/2020/3/2020030710-267475b4b77648ccb8d57c0fece62055.png\" alt=\"2020030710\"></p>\n<p>结果说明：</p>\n<ul>\n<li>Active connections：正在处理的活动连接数</li>\n<li>server accepts handled requests<ul>\n<li>第一个 server 表示Nginx启动到现在共处理了22个连接</li>\n<li>第二个 accepts 表示Nginx启动到现在共成功创建 22 次握手</li>\n<li>第三个 handled requests 表示总共处理了 193 次请求</li>\n<li>请求丢失数 = 握手数 - 连接数 ，可以看出目前为止没有丢失请求</li>\n</ul>\n</li>\n<li>Reading: 0 Writing: 1 Waiting: 2<ul>\n<li>Reading：Nginx 读取到客户端的 Header 信息数</li>\n<li>Writing：Nginx 返回给客户端 Header 信息数</li>\n<li>Waiting：Nginx 已经处理完正在等候下一次请求指令的驻留链接（开启keep-alive的情况下，这个值等于 Active - (Reading+Writing)）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>配置Nginx Module</p>\n<p>默认Metricbeat之开启了system modules，所以我们这里要手动启用nginx modules</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./metricbeat modules enable nginx</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 metricbeat]$ ./metricbeat modules list</span><br><span class=\"line\">Enabled:</span><br><span class=\"line\">nginx</span><br><span class=\"line\">system</span><br><span class=\"line\"></span><br><span class=\"line\">Disabled:</span><br><span class=\"line\">activemq</span><br><span class=\"line\">aerospike</span><br><span class=\"line\">apache</span><br><span class=\"line\">appsearch</span><br><span class=\"line\">aws</span><br><span class=\"line\">azure</span><br><span class=\"line\">beat</span><br><span class=\"line\">beat-xpack</span><br><span class=\"line\">ceph</span><br><span class=\"line\">cockroachdb</span><br><span class=\"line\">consul</span><br><span class=\"line\">coredns</span><br><span class=\"line\">couchbase</span><br><span class=\"line\">couchdb</span><br><span class=\"line\">docker</span><br><span class=\"line\">dropwizard</span><br><span class=\"line\">elasticsearch</span><br><span class=\"line\">elasticsearch-xpack</span><br><span class=\"line\">envoyproxy</span><br><span class=\"line\">etcd</span><br><span class=\"line\">golang</span><br><span class=\"line\">googlecloud</span><br><span class=\"line\">graphite</span><br><span class=\"line\">haproxy</span><br><span class=\"line\">http</span><br><span class=\"line\">jolokia</span><br><span class=\"line\">kafka</span><br><span class=\"line\">kibana</span><br><span class=\"line\">kibana-xpack</span><br><span class=\"line\">kubernetes</span><br><span class=\"line\">kvm</span><br><span class=\"line\">logstash</span><br><span class=\"line\">logstash-xpack</span><br><span class=\"line\">memcached</span><br><span class=\"line\">mongodb</span><br><span class=\"line\">mssql</span><br><span class=\"line\">munin</span><br><span class=\"line\">mysql</span><br><span class=\"line\">nats</span><br><span class=\"line\">oracle</span><br><span class=\"line\">php_fpm</span><br><span class=\"line\">postgresql</span><br><span class=\"line\">prometheus</span><br><span class=\"line\">rabbitmq</span><br><span class=\"line\">redis</span><br><span class=\"line\">sql</span><br><span class=\"line\">stan</span><br><span class=\"line\">statsd</span><br><span class=\"line\">tomcat</span><br><span class=\"line\">traefik</span><br><span class=\"line\">uwsgi</span><br><span class=\"line\">vsphere</span><br><span class=\"line\">windows</span><br><span class=\"line\">zookeeper</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改nginx modules的配置</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 modules.d]$ vi nginx.yml </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Module: nginx</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Docs: https://www.elastic.co/guide/en/beats/metricbeat/7.6/metricbeat-module-nginx.html</span></span><br><span class=\"line\"></span><br><span class=\"line\">- module: nginx</span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\">metricsets:</span></span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\">  - stubstatus</span></span><br><span class=\"line\">  period: 10s</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\"> Nginx hosts</span></span><br><span class=\"line\">  hosts: [&quot;http://192.168.237.11&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\"> Path to server status. Default server-status</span></span><br><span class=\"line\">  server_status_path: &quot;nginx-status&quot; #配置的nginx状态访问地址</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\">username: <span class=\"string\">&quot;user&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\">password: <span class=\"string\">&quot;secret&quot;</span></span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>启动测试</p>\n</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030711-c1217270b05241ca96fa42f063ba8d9f.png\" alt=\"2020030711\"><br><img src=\"https://eelve.com/upload/2020/3/2020030712-8ae5730e5301448b974d67545ff98e7a.png\" alt=\"2020030712\"></p>\n<p>到这里我们采集的nginx的指标数据，并且利用Kibana安装的Metricbeatd的nginx仪表盘做了图形化展示。</p>\n<h1 id=\"肆、Metricbeat组成\"><a href=\"#肆、Metricbeat组成\" class=\"headerlink\" title=\"肆、Metricbeat组成\"></a>肆、Metricbeat组成</h1><p>Metricbeat有2部分组成，一部分是Module，另一部分为Metricset。</p>\n<ul>\n<li><p>Module</p>\n<p>收集的对象，如：mysql、redis、nginx、操作系统等；</p>\n</li>\n<li><p>Metricset</p>\n<p>收集指标的集合，如：cpu、memory、network等；  </p>\n</li>\n</ul>\n<hr>\n<p>【<strong>后面的话</strong>】在本文中我们利用Metricbeat监控了系统和nginx的系统指标，并且做了图标化的展示。其他module的使用也类似，他们都是利用Metricbeat给被监控的机器放松状态指令，然后采集数据，再做图形化的展示。同时我们也看到Merticbeat也内置了很多的module，足够了我们日工作需要了。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"Elastic Stack实战之应用日志监控本地版","slug":"Elastic-Stack实战之应用日志监控本地版","date":"2020-03-14T13:49:22.000Z","updated":"2021-04-19T07:47:19.518Z","comments":true,"path":"api/articles/Elastic-Stack实战之应用日志监控本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2020/3/2020031400-c4c762ac3d134548bea4fb19e64088a6.png","content":"<p>【<strong>前面的话</strong>】在前面我们已经介绍了<a href=\"https://eelve.com/archives/elasticsearchinstall\">Elasticsearch</a>、<a href=\"https://eelve.com/archives/logstash\">Logstash</a>、<a href=\"https://eelve.com/archives/kibana\">Kibana</a>和<a href=\"https://eelve.com/archives/beats\">Beats</a>，并且都对各个组件进行了初步体验。今天我们就来模拟一把日常使用，来收集一个我们自己的应用的日志，并使用Kibana展示。</p>\n<hr>\n<h1 id=\"壹、软件版本\"><a href=\"#壹、软件版本\" class=\"headerlink\" title=\"壹、软件版本\"></a>壹、软件版本</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">Centos：CentOS-7-x86_64-Minimal-1908</span></span><br><span class=\"line\"><span class=\"attr\">VM:</span> <span class=\"number\">15.5</span><span class=\"number\">.0</span> <span class=\"string\">build-14665864</span></span><br><span class=\"line\"><span class=\"attr\">Java:</span> <span class=\"number\">1.8</span><span class=\"string\">.0_211</span></span><br><span class=\"line\"><span class=\"attr\">Elasticsearch:</span> <span class=\"string\">elasticsearch-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Logstash:</span> <span class=\"string\">logstash-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Kibana:</span> <span class=\"string\">kibana-7.6.0</span></span><br><span class=\"line\"><span class=\"string\">Filebeat：filebeat-7.6.0</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"贰、自定义采集应用\"><a href=\"#贰、自定义采集应用\" class=\"headerlink\" title=\"贰、自定义采集应用\"></a>贰、自定义采集应用</h1><p>我们这里来模拟一个现在购物网站的使用，主要代码如下</p>\n<ul>\n<li>核心代码</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.eelve.elk.dashboardgenerate;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.lang3.RandomUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.joda.time.DateTime;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DashboardGenerateApplication</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Logger LOGGER = LoggerFactory.getLogger(DashboardGenerateApplication.class);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String[] VISIT = <span class=\"keyword\">new</span> String[]&#123;<span class=\"string\">&quot;浏览页面&quot;</span>, <span class=\"string\">&quot;评论商品&quot;</span>, <span class=\"string\">&quot;加入收藏&quot;</span>, <span class=\"string\">&quot;加入购物车&quot;</span>, <span class=\"string\">&quot;提交订单&quot;</span>, <span class=\"string\">&quot;使用优惠券&quot;</span>, <span class=\"string\">&quot;领取优惠券&quot;</span>, <span class=\"string\">&quot;搜索&quot;</span>, <span class=\"string\">&quot;查看订单&quot;</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            Long sleep = RandomUtils.nextLong(<span class=\"number\">200</span>, <span class=\"number\">1000</span> * <span class=\"number\">5</span>);</span><br><span class=\"line\">            Thread.sleep(sleep);</span><br><span class=\"line\">            Long maxUserId = <span class=\"number\">9999L</span>;</span><br><span class=\"line\">            Long userId = RandomUtils.nextLong(<span class=\"number\">1</span>, maxUserId);</span><br><span class=\"line\">            String visit = VISIT[RandomUtils.nextInt(<span class=\"number\">0</span>, VISIT.length)];</span><br><span class=\"line\">            DateTime now = <span class=\"keyword\">new</span> DateTime();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> maxHour = now.getHourOfDay();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> maxMillis = now.getMinuteOfHour();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> maxSeconds = now.getSecondOfMinute();</span><br><span class=\"line\">            String date = now.plusHours(-(RandomUtils.nextInt(<span class=\"number\">0</span>, maxHour)))</span><br><span class=\"line\">                    .plusMinutes(-(RandomUtils.nextInt(<span class=\"number\">0</span>, maxMillis)))</span><br><span class=\"line\">                    .plusSeconds(-(RandomUtils.nextInt(<span class=\"number\">0</span>, maxSeconds)))</span><br><span class=\"line\">                    .toString(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            String result = <span class=\"string\">&quot;IIO|&quot;</span> + userId + <span class=\"string\">&quot;|&quot;</span> + visit + <span class=\"string\">&quot;|&quot;</span> + date;</span><br><span class=\"line\">            LOGGER.info(result);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>日志配置文件</li>\n</ul>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">log4j.rootLogger</span>=<span class=\"string\">DEBUG,A1,A2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A1</span>=<span class=\"string\">org.apache.log4j.ConsoleAppender</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A1.layout</span>=<span class=\"string\">org.apache.log4j.PatternLayout</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A1.layout.ConversionPattern</span>=<span class=\"string\">[%p] %-d&#123;yyyy-MM-dd HH:mm:ss&#125; [%c] - %m%n</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A2</span> = <span class=\"string\">org.apache.log4j.DailyRollingFileAppender</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A2.File</span> = <span class=\"string\">/iio/logs/app.log</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A2.Append</span> = <span class=\"string\">true</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A2.Threshold</span> = <span class=\"string\">INFO</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A2.layout</span> = <span class=\"string\">org.apache.log4j.PatternLayout</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A2.layout.ConversionPattern</span> =<span class=\"string\">[%p] %-d&#123;yyyy-MM-dd HH:mm:ss&#125; [%c] - %m%n</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>运行结果</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;C:\\Program Files\\Java\\jdk1.8.0_221\\bin\\java.exe&quot; -XX:TieredStopAtLevel=1 -noverify -Dspring.output.ansi.enabled=always -Dcom.sun.management.jmxremote -Dspring.jmx.enabled=true -Dspring.liveBeansView.mbeanDomain -Dspring.application.admin.enabled=true &quot;-javaagent:C:\\Program Files\\JetBrains\\IntelliJ IDEA 2019.1\\lib\\idea_rt.jar=6396:C:\\Program Files\\JetBrains\\IntelliJ IDEA 2019.1\\bin&quot; -Dfile.encoding=UTF-8 -classpath &quot;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\deploy.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\access-bridge-64.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\cldrdata.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\dnsns.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\jaccess.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\jfxrt.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\localedata.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\nashorn.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\sunec.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\sunjce_provider.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\sunmscapi.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\sunpkcs11.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\zipfs.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\javaws.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\jfxswt.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\management-agent.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\plugin.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\rt.jar;D:\\iio\\dashboard-generate\\target\\classes;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\boot\\spring-boot-starter\\2.2.5.RELEASE\\spring-boot-starter-2.2.5.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\boot\\spring-boot\\2.2.5.RELEASE\\spring-boot-2.2.5.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\spring-context\\5.2.4.RELEASE\\spring-context-5.2.4.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\spring-aop\\5.2.4.RELEASE\\spring-aop-5.2.4.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\spring-beans\\5.2.4.RELEASE\\spring-beans-5.2.4.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\spring-expression\\5.2.4.RELEASE\\spring-expression-5.2.4.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\boot\\spring-boot-autoconfigure\\2.2.5.RELEASE\\spring-boot-autoconfigure-2.2.5.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\boot\\spring-boot-starter-logging\\2.2.5.RELEASE\\spring-boot-starter-logging-2.2.5.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\apache\\logging\\log4j\\log4j-to-slf4j\\2.12.1\\log4j-to-slf4j-2.12.1.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\apache\\logging\\log4j\\log4j-api\\2.12.1\\log4j-api-2.12.1.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\slf4j\\jul-to-slf4j\\1.7.30\\jul-to-slf4j-1.7.30.jar;C:\\Users\\Chirius\\.m2\\repository\\jakarta\\annotation\\jakarta.annotation-api\\1.3.5\\jakarta.annotation-api-1.3.5.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\spring-core\\5.2.4.RELEASE\\spring-core-5.2.4.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\spring-jcl\\5.2.4.RELEASE\\spring-jcl-5.2.4.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\yaml\\snakeyaml\\1.25\\snakeyaml-1.25.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\apache\\commons\\commons-lang3\\3.3.2\\commons-lang3-3.3.2.jar;C:\\Users\\Chirius\\.m2\\repository\\joda-time\\joda-time\\2.9.9\\joda-time-2.9.9.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\slf4j\\slf4j-log4j12\\1.7.26\\slf4j-log4j12-1.7.26.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\slf4j\\slf4j-api\\1.7.30\\slf4j-api-1.7.30.jar;C:\\Users\\Chirius\\.m2\\repository\\log4j\\log4j\\1.2.17\\log4j-1.2.17.jar&quot; com.eelve.elk.dashboardgenerate.DashboardGenerateApplication</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:09 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|4234|加入收藏|2020-03-14 04:04:03</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:11 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|6502|领取优惠券|2020-03-14 14:05:07</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:12 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|3694|加入购物车|2020-03-14 20:03:09</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:14 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|8112|使用优惠券|2020-03-14 12:06:02</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:14 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|3391|加入收藏|2020-03-14 02:01:05</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:17 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|3696|搜索|2020-03-14 04:06:05</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:18 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|6670|使用优惠券|2020-03-14 17:04:17</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:21 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|6646|搜索|2020-03-14 11:06:05</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:24 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|8227|使用优惠券|2020-03-14 12:06:24</span><br><span class=\"line\"></span><br><span class=\"line\">Process finished with exit code -1</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>我们这里模拟了用户的操作，并记录到/iio/logs/app.log文件中。主要的业务流程为：APP-&gt;filebeat-&gt;logstash-&gt;elasticsearch-&gt;kibanan-&gt;User</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020031400-c4c762ac3d134548bea4fb19e64088a6.png\" alt=\"2020031400\"></p>\n<h1 id=\"叁、准备过程\"><a href=\"#叁、准备过程\" class=\"headerlink\" title=\"叁、准备过程\"></a>叁、准备过程</h1><h2 id=\"3-1-编写filebeat配置\"><a href=\"#3-1-编写filebeat配置\" class=\"headerlink\" title=\"3.1 编写filebeat配置\"></a>3.1 编写filebeat配置</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 filebeat]$ vi dashboard.yml </span><br><span class=\"line\">filebeat.inputs:</span><br><span class=\"line\">- type: log</span><br><span class=\"line\">  enabled: true</span><br><span class=\"line\">  paths:</span><br><span class=\"line\">    - /iio/logs/*.log</span><br><span class=\"line\">output.logstash:</span><br><span class=\"line\">  hosts: [&quot;192.168.237.11:5044&quot;]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-2-编写logstash配置\"><a href=\"#3-2-编写logstash配置\" class=\"headerlink\" title=\"3.2 编写logstash配置\"></a>3.2 编写logstash配置</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 config]$ vi logstash-dashboard.yml </span><br><span class=\"line\">input &#123;</span><br><span class=\"line\">  beats &#123;</span><br><span class=\"line\">    port =&gt; &quot;5044&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">filter &#123;</span><br><span class=\"line\">  mutate &#123;</span><br><span class=\"line\">    split =&gt; &#123;&quot;message&quot;=&gt;&quot;|&quot;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  mutate &#123;</span><br><span class=\"line\">    add_field =&gt; &#123;</span><br><span class=\"line\">       &quot;userId&quot; =&gt; &quot;%&#123;[message][1]&#125;&quot;</span><br><span class=\"line\">       &quot;visit&quot; =&gt; &quot;%&#123;[message][2]&#125;&quot;</span><br><span class=\"line\">       &quot;date&quot; =&gt; &quot;%&#123;[message][3]&#125;&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  mutate &#123;</span><br><span class=\"line\">    convert =&gt; &#123;</span><br><span class=\"line\">        &quot;userId&quot; =&gt; &quot;integer&quot;</span><br><span class=\"line\">        &quot;visit&quot; =&gt; &quot;string&quot;</span><br><span class=\"line\">        &quot;date&quot; =&gt; &quot;string&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">output &#123;</span><br><span class=\"line\">    elasticsearch &#123;</span><br><span class=\"line\">        hosts =&gt; [&quot;192.168.237.11:9200&quot;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-3-启动应用\"><a href=\"#3-3-启动应用\" class=\"headerlink\" title=\"3.3 启动应用\"></a>3.3 启动应用</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@192 home]# java -jar dashboard-generate-0.0.1-SNAPSHOT.jar &amp;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-4-启动elasticsearch\"><a href=\"#3-4-启动elasticsearch\" class=\"headerlink\" title=\"3.4 启动elasticsearch\"></a>3.4 启动elasticsearch</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ ./elasticsearch</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-5-启动kibana\"><a href=\"#3-5-启动kibana\" class=\"headerlink\" title=\"3.5 启动kibana\"></a>3.5 启动kibana</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ ./kibana</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-6-启动logstash\"><a href=\"#3-6-启动logstash\" class=\"headerlink\" title=\"3.6 启动logstash\"></a>3.6 启动logstash</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ ./logstash -f /usr/elastic/logstash/config/logstash-dashboard.yml</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-7-启动filebeat\"><a href=\"#3-7-启动filebeat\" class=\"headerlink\" title=\"3.7 启动filebeat\"></a>3.7 启动filebeat</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 filebeat]$ ./filebeat  -e -c dashboard.yml</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-8-查看采集的数据\"><a href=\"#3-8-查看采集的数据\" class=\"headerlink\" title=\"3.8 查看采集的数据\"></a>3.8 查看采集的数据</h2><p><img src=\"https://eelve.com/upload/2020/3/2020031401-66d588f9d78f4bf4b34b3d9d0f82001d.png\" alt=\"2020031401\"></p>\n<h2 id=\"3-9-开始制作大屏\"><a href=\"#3-9-开始制作大屏\" class=\"headerlink\" title=\"3.9 开始制作大屏\"></a>3.9 开始制作大屏</h2><p><img src=\"https://eelve.com/upload/2020/3/2020031402-28114b868ca3470497782f558737d25e.png\" alt=\"2020031402\"><br><img src=\"https://eelve.com/upload/2020/3/2020031403-7b2ffa7f424b478781543ffb2b1b4207.png\" alt=\"2020031403\"><br><img src=\"https://eelve.com/upload/2020/3/2020031404-41d668eff3e247e7aa942d850e7775fa.png\" alt=\"2020031404\"><br><img src=\"https://eelve.com/upload/2020/3/2020031405-2aba46902b5f4495bfae81991385b60d.png\" alt=\"2020031405\"><br><img src=\"https://eelve.com/upload/2020/3/2020031406-8dbfc5fc883e46298da14ceb8e14348c.png\" alt=\"2020031406\"><br><img src=\"https://eelve.com/upload/2020/3/2020031407-cd57f9cb79b64ca6acaa2ba604e78511.png\" alt=\"2020031407\"></p>\n<p>到这里我们可以看到就已经完成了对我们自定义数据的监控，然后还利用了Kibana做了图表化展示。</p>\n<hr>\n<p>【<strong>后面的话</strong>】在我们日常应用中，我们的日志需要按照某种规则产生，方便我们使用logstash进行过滤，然后做一些处理。也就是说我们在开发之前就应该想好日志生成的格式，然后设计好日志的处理方式。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"Elastic Stack实战之环境准备本地版","slug":"Elastic-Stack实战之环境准备本地版","date":"2020-02-29T08:29:26.000Z","updated":"2021-04-19T07:47:19.519Z","comments":true,"path":"api/articles/Elastic-Stack实战之环境准备本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/2020030104-b3bb574e37fd4c9a959c5b8ba383033c.png","content":"<p>【<strong>前面的话</strong>】首先还是是简单说一下<a href=\"https://www.elastic.co/\">Elastic Stack</a>技术栈吧。ELK = Elasticsearch, Logstash, Kibana 是一套实时数据收集，存储，索引，检索，统计分析及可视化的解决方案。最新版本已经改名为Elastic Stack，并新增了Beats项目。</p>\n<p><img src=\"https://image.eelve.com/eblog/2020030104-b3bb574e37fd4c9a959c5b8ba383033c.png\" alt=\"2020030104\"><br><img src=\"https://image.eelve.com/eblog/2020030105-8644c0540b6041d9a726b0fdf31845a0.png\" alt=\"2020030105\"></p>\n<p><strong>Elasticsearch</strong></p>\n<pre><code>Elasticsearch 基于java，是个开源分布式搜索引擎，它的特点有：分布式，零配置，自动发现，索引自动分片，索引\n副本机制，restful风格接口，多数据源，自动搜索负载等。\n</code></pre>\n<p><strong>Logstash</strong></p>\n<pre><code>Logstash 基于java，是一个开源的用于收集,分析和存储日志的工具。\n</code></pre>\n<p><strong>Kibana</strong></p>\n<pre><code>Kibana 基于nodejs，也是一个开源和免费的工具，Kibana可以为 Logstash 和 ElasticSearch 提供的日志分析友好的\nWeb 界面，可以汇总、分析和搜索重要数据日志。\n</code></pre>\n<p><strong>Beats</strong></p>\n<pre><code>Beats是elastic公司开源的一款采集系统监控数据的代理agent，是在被监控服务器上以客户端形式运行的数据收集\n器的统称，可以直接把数据发送给Elasticsearch或者通过Logstash发送给Elasticsearch，然后进行后续的数据分析活\n动。\nBeats由如下组成:\nPacketbeat：是一个网络数据包分析器，用于监控、收集网络流量信息，Packetbeat嗅探服务器之间的流量，\n解析应用层协议，并关联到消息的处理，其支 持ICMP (v4 and v6)、DNS、HTTP、Mysql、PostgreSQL、\nRedis、MongoDB、Memcache等协议；\nFilebeat：用于监控、收集服务器日志文件，其已取代 logstash forwarder；\nMetricbeat：可定期获取外部系统的监控指标信息，其可以监控、收集 Apache、HAProxy、MongoDB\nMySQL、Nginx、PostgreSQL、Redis、System、Zookeeper等服务；\nWinlogbeat：用于监控、收集Windows系统的日志信息；\n</code></pre>\n<p>但是很多用户还是用ELK来代替Elastic Stack，并且目前的最新版本已经来到了7.6.0，在后面的实践过程中如果没有特指的话，都会是基于最新版本的实践。下面来说一下我的环境，我本人的云服务器，性能不是很够，这边我的解决方案是用虚拟机来解决。所以在这篇文章中是主要介绍在VM中搭建linux服务器的，并且为了资源不浪费，我这边会做最小化安装。</p>\n<hr>\n<h1 id=\"壹、软件版本\"><a href=\"#壹、软件版本\" class=\"headerlink\" title=\"壹、软件版本\"></a>壹、软件版本</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">Centos：CentOS-7-x86_64-Minimal-1908</span></span><br><span class=\"line\"><span class=\"attr\">VM:</span> <span class=\"number\">15.5</span><span class=\"number\">.0</span> <span class=\"string\">build-14665864</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"贰、主要步骤\"><a href=\"#贰、主要步骤\" class=\"headerlink\" title=\"贰、主要步骤\"></a>贰、主要步骤</h1><pre><code>在网络中有很多安装的具体步骤，我子啊这里只是说一下容易出错的点。\n</code></pre>\n<h2 id=\"2-1-VM创建虚拟机\"><a href=\"#2-1-VM创建虚拟机\" class=\"headerlink\" title=\"2.1 VM创建虚拟机\"></a>2.1 VM创建虚拟机</h2><p><img src=\"https://image.eelve.com/eblog/2020022903-e627be2203d040a8aae53c43c767e582.png\" alt=\"2020022903\"><br><img src=\"https://image.eelve.com/eblog/2020022903-e627be2203d040a8aae53c43c767e582.png\" alt=\"2020022903\"><br><img src=\"https://image.eelve.com/eblog/2020022905-baf50368479142869e6d506e899f6623.png\" alt=\"2020022905\"><br><img src=\"https://image.eelve.com/eblog/2020022906-79511d7494064df9a76dbbb00a529757.png\" alt=\"2020022906\"><br><img src=\"https://image.eelve.com/eblog/2020022907-d16b584e859c43c794badd92ed116ccc.png\" alt=\"2020022907\"><br><img src=\"https://image.eelve.com/eblog/2020022911-e111cb9fe7d94935b0cd7b8613d6e278.png\" alt=\"2020022911\"></p>\n<h2 id=\"2-2-安装Centos7\"><a href=\"#2-2-安装Centos7\" class=\"headerlink\" title=\"2.2 安装Centos7\"></a>2.2 安装Centos7</h2><p><img src=\"https://image.eelve.com/eblog/2020022913-34b2a693fd0e4cfa9c6484063bc3a00c.png\" alt=\"2020022913\"><br><img src=\"https://image.eelve.com/eblog/2020022914-8fb414bf521544518671a2da4fb142f1.png\" alt=\"2020022914\"><br><img src=\"https://image.eelve.com/eblog/2020022915-d2e5d18a228448709a81391ce595bcff.png\" alt=\"2020022915\"><br><img src=\"https://image.eelve.com/eblog/2020022916-1ca2096fd9c945a4bdc1da5ea0c6c898.png\" alt=\"2020022916\"><br><img src=\"https://image.eelve.com/eblog/2020022917-10884dc7ec5348eebb35f8682e627281.png\" alt=\"2020022917\"></p>\n<h1 id=\"叁、注意事项\"><a href=\"#叁、注意事项\" class=\"headerlink\" title=\"叁、注意事项\"></a>叁、注意事项</h1><pre><code>以下几点是特别需要主要：静态网络映射，时钟同步，系统资源配置\n</code></pre>\n<h2 id=\"3-1-静态网络映射\"><a href=\"#3-1-静态网络映射\" class=\"headerlink\" title=\"3.1 静态网络映射\"></a>3.1 静态网络映射</h2><p>首先获取子网IP，子网掩码，和网关地址</p>\n<p><img src=\"https://image.eelve.com/eblog/2020022918-006bef024d834c50bef94d415e3b3e05.png\" alt=\"2020022918\"><br><img src=\"https://image.eelve.com/eblog/2020022919-208c5c4049a847ff94be761f512e9dde.png\" alt=\"2020022919\"></p>\n<p>在最小化安装的CentOS7中，ifconfig是不能使用的，查看网卡信息的命令是：</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip addr</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://image.eelve.com/eblog/2020022920-57cff54e5cde4ddd96079ae6172070ae.png\" alt=\"2020022920\"></p>\n<p>其中“ens33”为网卡名称，根据得到网关和子网ip等修改IP地址等信息</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class=\"line\"></span><br><span class=\"line\">TYPE=Ethernet</span><br><span class=\"line\">PROXY_METHOD=none</span><br><span class=\"line\">BROWSER_ONLY=no</span><br><span class=\"line\">BOOTPROTO=static</span><br><span class=\"line\">DEFROUTE=yes</span><br><span class=\"line\">PEERROUTES=yes</span><br><span class=\"line\">IPV4_FAILURE_FATAL=no</span><br><span class=\"line\">IPV6INIT=yes</span><br><span class=\"line\">IPV6_AUTOCONF=yes</span><br><span class=\"line\">IPV6_DEFROUTE=yes</span><br><span class=\"line\">IPV6_FAILURE_FATAL=no</span><br><span class=\"line\">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class=\"line\">NAME=ens33</span><br><span class=\"line\">UUID=2cce262f-99d8-485e-aa8e-f2493405715a</span><br><span class=\"line\">DEVICE=ens33</span><br><span class=\"line\">ONBOOT=yes</span><br><span class=\"line\">IPADDR=192.168.237.11</span><br><span class=\"line\">GATEWAY=192.168.237.2</span><br><span class=\"line\">NETMASK=255.255.255.0</span><br><span class=\"line\">DNS1=192.168.237.2</span><br><span class=\"line\">DNS2=8.8.8.8</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>修改好后保存退出，并重启网络，测试网络是否连接正常：</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@192 ~]# service network restart</span><br><span class=\"line\">Restarting network (via systemctl):                        [  OK  ]</span><br><span class=\"line\">[root@192 ~]# ping www.eelve.com</span><br><span class=\"line\">PING www.eelve.com (47.98.209.166) 56(84) bytes of data.</span><br><span class=\"line\">64 bytes from 47.98.209.166 (47.98.209.166): icmp_seq=1 ttl=128 time=38.1 ms</span><br><span class=\"line\">64 bytes from 47.98.209.166 (47.98.209.166): icmp_seq=2 ttl=128 time=38.7 ms</span><br><span class=\"line\">64 bytes from 47.98.209.166 (47.98.209.166): icmp_seq=3 ttl=128 time=39.4 ms</span><br><span class=\"line\">64 bytes from 47.98.209.166 (47.98.209.166): icmp_seq=4 ttl=128 time=51.3 ms</span><br><span class=\"line\">64 bytes from 47.98.209.166 (47.98.209.166): icmp_seq=5 ttl=128 time=38.1 ms</span><br><span class=\"line\">64 bytes from 47.98.209.166 (47.98.209.166): icmp_seq=6 ttl=128 time=37.9 ms</span><br><span class=\"line\">64 bytes from 47.98.209.166 (47.98.209.166): icmp_seq=7 ttl=128 time=44.5 ms</span><br><span class=\"line\">64 bytes from 47.98.209.166 (47.98.209.166): icmp_seq=8 ttl=128 time=37.7 ms</span><br><span class=\"line\">64 bytes from 47.98.209.166 (47.98.209.166): icmp_seq=9 ttl=128 time=37.9 ms</span><br><span class=\"line\">^C</span><br><span class=\"line\">--- www.eelve.com ping statistics ---</span><br><span class=\"line\">9 packets transmitted, 9 received, 0% packet loss, time 9110ms</span><br><span class=\"line\">rtt min/avg/max/mdev = 37.753/40.435/51.388/4.365 ms</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>到了这里我们就可以使用XShell用配置的静态IP来连接服务器使用了</p>\n<p><img src=\"https://image.eelve.com/eblog/2020022921-0f8c6a976821406081e228e76f359236.png\" alt=\"2020022921\"></p>\n<h2 id=\"3-2-时钟同步\"><a href=\"#3-2-时钟同步\" class=\"headerlink\" title=\"3.2 时钟同步\"></a>3.2 时钟同步</h2><p>yum进行软件安装，软件安装过程中如遇到询问，一律选择y，ntp是时间同步命令</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install ntp</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ntpdate time1.aliyun.com</span><br></pre></td></tr></table></figure>\n<p>然后就可以成功同步时间，然后查看</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@192 ~]# date</span><br><span class=\"line\">Sat Feb 29 18:08:31 CST 2020</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-3-系统资源配置\"><a href=\"#3-3-系统资源配置\" class=\"headerlink\" title=\"3.3 系统资源配置\"></a>3.3 系统资源配置</h2><p>系统资源的话，主要是虚拟机安装，都可以方便修改，这边后期要安装Elastic Stack，最好是稍微调大一点，内存至少为2G，因为Elasticsearch和Kibana都是需要用到Java虚拟机的，尤其是你准备把这两个服务都安装在一台机器上的话。</p>\n<hr>\n<p>【<strong>最后的话</strong>】时钟同步，是一定要配置的，不然会造成之后Elastic Stack中的服务不可用，当然也不是真的不可用，你只是会在Kibana中看不到你的数据映射，因为默认Kibana的时间展示参数为最近15分钟，如果你的时间相差很远的话，就可能造成Elasticsearch中能采集数据，但是Kibana展示不出来，这个对于初学者来说会造成Kibana数据不能映射问题，这点在后面会做具体介绍的。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"Spring Boot Admin 的使用本地版","slug":"SpringBoot-Admin的使用本地版","date":"2019-08-09T09:07:34.000Z","updated":"2021-04-19T07:47:19.522Z","comments":true,"path":"api/articles/SpringBoot-Admin的使用本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2019/8/81-1f39bf9d2ba5497a8bdfa151df35bbd8.png","content":"<p>【<strong>前情提要</strong>】Spring Boot Actuator 提供了对单个 Spring Boot 应用的监控，信息包含应用状态、内存、线程、堆栈等，比较全面的监控了 Spring Boot 应用的整个生命周期。但是这样监控也有一些问题：第一，所有的监控都需要调用固定的接口来查看，如果全面查看应用状态需要调用很多接口，并且接口返回的 JSON 信息不方便运营人员理解；第二，如果 Spring Boot 应用集群非常大，每个应用都需要调用不同的接口来查看监控信息，操作非常繁琐低效。在这样的背景下，就诞生了另外一个开源软件：<strong>Spring Boot Admin</strong>。</p>\n<hr>\n<h1 id=\"壹、什么是Spring-Boot-Admin\"><a href=\"#壹、什么是Spring-Boot-Admin\" class=\"headerlink\" title=\"壹、什么是Spring Boot Admin\"></a>壹、什么是Spring Boot Admin</h1><p>Spring Boot Admin 是一个管理和监控 Spring Boot 应用程序的开源软件，每个应用都认为是一个客户端，通过 HTTP 或者使用 Eureka 注册到 admin server 中进行展示，Spring Boot Admin UI 部分使用 Vue.js 将数据展示在前端。</p>\n<p>Spring Boot Admin 是一个针对 Spring Boot 的 Actuator 接口进行 UI 美化封装的监控工具，它可以在列表中浏览所有被监控 spring-boot 项目的基本信息、详细的 Health 信息、内存信息、JVM 信息、垃圾回收信息、各种配置信息（比如数据源、缓存列表和命中率）等，还可以直接修改 logger 的 level。</p>\n<p>值得注意的是 Spring Boot Admin 并不是 Spring Boot 官方出品的开源软件，但是其软件质量和使用广泛度都非常的高，并且 Spring Boot Admin 会及时随着 Spring Boot 的更新而更新，当 Spring Boot 推出 2.X 版本时 Spring Boot Admin 也及时进行了更新。</p>\n<p>Spring Boot Admin 2.x 不仅是跟着支持了 Spring Boot 2.x，还在 1.x 的基础上进行了大量的更新和优化:</p>\n<pre><code>重新规划了项目依赖包，让项目中更方便的集成 Spring Boot Admin\n1.x 前端使用了 Angular.js，2.x 使用 Vue 对界面进行了重写，界面美观度提升幅度非常高\n提供了支持 Spring Cloud 的组件\n其他更新，具体参考：Changes with 2.x\n</code></pre>\n<p>Spring Boot Admin 分为服务端和客户端，服务端其实就是一个监控后台用来汇总展示所有的监控信息，客户端就是我们的应用，使用时需要先启动服务端，在启动客户端的时候打开 Actuator 的接口，并指向服务端的地址，这样服务端会定时读取相关信息以达到监控的目的。</p>\n<hr>\n<p>接下来演示如何使用 Spring Boot Admin 对 Spring Boot 应用进行监控。</p>\n<h1 id=\"贰、监控单体应用\"><a href=\"#贰、监控单体应用\" class=\"headerlink\" title=\"贰、监控单体应用\"></a>贰、监控单体应用</h1><p>先给大家展示如何使用 Spring Boot Admin 监控单个 Spring Boot 应用。</p>\n<h2 id=\"Admin-Server-端\"><a href=\"#Admin-Server-端\" class=\"headerlink\" title=\"Admin Server 端\"></a>Admin Server 端</h2><h3 id=\"项目依赖\"><a href=\"#项目依赖\" class=\"headerlink\" title=\"项目依赖\"></a>项目依赖</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">  &lt;groupId&gt;de.codecentric&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">  &lt;artifactId&gt;spring-boot-admin-starter-server&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">  &lt;version&gt;2.1.0&lt;&#x2F;version&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">  &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">  &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>2.x 下只需要添加此一个包即可，其他组件会自动依赖添加。</strong></p>\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><p>server.port=8000</p>\n<p>服务端设置端口为：8000。</p>\n<h3 id=\"启动类\"><a href=\"#启动类\" class=\"headerlink\" title=\"启动类\"></a>启动类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@EnableAdminServer</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AdminServerApplication</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    SpringApplication.run(AdminServerApplication.class, args);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>完成上面三步之后，启动服务端，访问网址 <a href=\"http://localhost:8000/\">http://localhost:8000</a> 可以看到以下界面：<br><img src=\"https://eelve.com/upload/2019/8/81-1f39bf9d2ba5497a8bdfa151df35bbd8.png\" alt=\"监控页面\"><br>因为刚启动没有应用，因此显示：No applications registered.，同时根据上图也可以看出 applications 页面会展示项目的应用数、实例数和状态三个信息。</p>\n<p>接下来我们构建一个客户端，并注册到服务端。</p>\n<h2 id=\"Admin-Client-端\"><a href=\"#Admin-Client-端\" class=\"headerlink\" title=\"Admin Client 端\"></a>Admin Client 端</h2><h2 id=\"项目依赖-1\"><a href=\"#项目依赖-1\" class=\"headerlink\" title=\"项目依赖\"></a>项目依赖</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependencies&gt;</span><br><span class=\"line\">  &lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;de.codecentric&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-admin-starter-client&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;2.1.0&lt;&#x2F;version&gt;</span><br><span class=\"line\">  &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">  &lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">  &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">&lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>添加 spring-boot-starter-web 是为了使应用处于启动状态，spring-boot-admin-starter-client 会自动添加 Actuator 相关依赖。</strong></p>\n<h3 id=\"配置文件-1\"><a href=\"#配置文件-1\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">server.port</span>=<span class=\"string\">8001</span></span><br><span class=\"line\"><span class=\"meta\">spring.application.name</span>=<span class=\"string\">Admin Client</span></span><br><span class=\"line\"><span class=\"meta\">spring.boot.admin.client.url</span>=<span class=\"string\">http://localhost:8000  </span></span><br><span class=\"line\"><span class=\"meta\">management.endpoints.web.exposure.include</span>=<span class=\"string\">*</span></span><br></pre></td></tr></table></figure>\n<pre><code>spring.boot.admin.client.url 配置 Admin Server 的地址\nmanagement.endpoints.web.exposure.include=* 打开客户端 Actuator 的监控\n</code></pre>\n<h3 id=\"启动类-1\"><a href=\"#启动类-1\" class=\"headerlink\" title=\"启动类\"></a>启动类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AdminClientApplication</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    SpringApplication.run(AdminClientApplication.class, args);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>配置完成之后，启动 Client 端，Admin 服务端会自动检查到客户端的变化，并展示其应用：<br><img src=\"https://eelve.com/upload/2019/8/82-1b588fee05794b2d94a2f578ba805fbb.png\" alt=\"结果\"><br>页面会展示被监控的服务列表，点击项目名称会进入此应用的详细监控信息：<br><img src=\"https://eelve.com/upload/2019/8/83-d685df514a0e44b1bd45e5b6bd1a9e64.png\" alt=\"详情\"><br>通过上图可以看出，Spring Boot Admin 以图形化的形式展示了应用的各项信息，这些信息大多都来自于 <strong>Spring Boot Actuator</strong> 提供的接口。利用图形化的形式很容易看到应用的各项参数变化，甚至有些页面还可以进行一些操作，比如改变打印日志的级别等。</p>\n<h3 id=\"点击-journal-页面可以看到应用状态变化的历史过程：\"><a href=\"#点击-journal-页面可以看到应用状态变化的历史过程：\" class=\"headerlink\" title=\"点击 journal 页面可以看到应用状态变化的历史过程：\"></a>点击 journal 页面可以看到应用状态变化的历史过程：</h3><p><img src=\"https://eelve.com/upload/2019/8/84-fa96d9eee75d47d599f55e27533664e4.png\" alt=\"journal\"></p>\n<h3 id=\"点击第一个菜单-wallboard-可以以更形象的方式查看应用数量启动的时间等。\"><a href=\"#点击第一个菜单-wallboard-可以以更形象的方式查看应用数量启动的时间等。\" class=\"headerlink\" title=\"点击第一个菜单 wallboard 可以以更形象的方式查看应用数量启动的时间等。\"></a>点击第一个菜单 wallboard 可以以更形象的方式查看应用数量启动的时间等。</h3><p><img src=\"https://eelve.com/upload/2019/8/85-c42df15785a14110b7532b20afee8ca1.png\" alt=\"wallboard \"></p>\n<h1 id=\"叁、监控微服务\"><a href=\"#叁、监控微服务\" class=\"headerlink\" title=\"叁、监控微服务\"></a>叁、监控微服务</h1><p>如果我们使用的是单个 Spring Boot 应用，就需要在每一个被监控的应用中配置 Admin Server 的地址信息；如果应用都注册在 Eureka 中就不需要再对每个应用进行配置，Spring Boot Admin 会自动从注册中心抓取应用的相关信息。</p>\n<p>如果使用了 Spring Cloud 的服务发现功能，就不需要再单独添加 Admin Client 客户端，仅仅需要 Spring Boot Server，其他内容会自动进行配置。</p>\n<p>接下来以 Eureka 作为服务发现的示例来进行演示，实际上也可以使用 Consul 或者 Zookeeper。</p>\n<p>（1）服务端和客户端添加 spring-cloud-starter-eureka 到包依赖中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n<p>（2）启动类添加注解</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableAutoConfiguration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableDiscoveryClient</span></span><br><span class=\"line\"><span class=\"meta\">@EnableAdminServer</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringBootAdminApplication</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(SpringBootAdminApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Configuration</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SecurityPermitAllConfig</span> <span class=\"keyword\">extends</span> <span class=\"title\">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">configure</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">            http.authorizeRequests().anyRequest().permitAll()  </span><br><span class=\"line\">                .and().csrf().disable();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>使用类 <strong>SecurityPermitAllConfig</strong> 关闭了安全验证。</p>\n<p>（3）在客户端中配置服务发现的地址</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">eureka:</span>   </span><br><span class=\"line\">  <span class=\"attr\">instance:</span></span><br><span class=\"line\">    <span class=\"attr\">leaseRenewalIntervalInSeconds:</span> <span class=\"number\">10</span></span><br><span class=\"line\">    <span class=\"attr\">health-check-url-path:</span> <span class=\"string\">/actuator/health</span></span><br><span class=\"line\">    <span class=\"attr\">metadata-map:</span></span><br><span class=\"line\">      <span class=\"attr\">startup:</span> <span class=\"string\">$&#123;random.int&#125;</span>    <span class=\"comment\">#needed to trigger info and endpoint update after restart</span></span><br><span class=\"line\">  <span class=\"attr\">client:</span></span><br><span class=\"line\">    <span class=\"attr\">registryFetchIntervalSeconds:</span> <span class=\"number\">5</span></span><br><span class=\"line\">    <span class=\"attr\">serviceUrl:</span></span><br><span class=\"line\">      <span class=\"attr\">defaultZone:</span> <span class=\"string\">$&#123;EUREKA_SERVICE_URL:http://localhost:8761&#125;/eureka/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">management:</span></span><br><span class=\"line\">  <span class=\"attr\">endpoints:</span></span><br><span class=\"line\">    <span class=\"attr\">web:</span></span><br><span class=\"line\">      <span class=\"attr\">exposure:</span></span><br><span class=\"line\">        <span class=\"attr\">include:</span> <span class=\"string\">&quot;*&quot;</span>  </span><br><span class=\"line\">  <span class=\"attr\">endpoint:</span></span><br><span class=\"line\">    <span class=\"attr\">health:</span></span><br><span class=\"line\">      <span class=\"attr\">show-details:</span> <span class=\"string\">ALWAYS</span></span><br></pre></td></tr></table></figure>\n<p><strong>Spring Cloud</strong> 提供了示例代码可以参考这里：<a href=\"https://github.com/codecentric/spring-boot-admin/tree/master/spring-boot-admin-samples/spring-boot-admin-sample-eureka/\">spring-boot-admin-sample-eureka</a>。</p>\n<p>重启启动服务端和客户端之后，访问服务端的相关地址就可以看到监控页面了。</p>\n<h1 id=\"肆、安全控制\"><a href=\"#肆、安全控制\" class=\"headerlink\" title=\"肆、安全控制\"></a>肆、安全控制</h1><p><strong>Spring Boot Admin</strong> 后台有很多的敏感信息和操作，如果公司不做权限控制可能会影响到公司系统的安全性。Spring Boot Admin 也考虑到了这个因素，可以利用前面的 Spring Security 做安全访问控制，在 spring-boot-admin-server 上进行改造。</p>\n<p>（1）添加 Spring Boot Security 依赖包</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-starter-security&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n<p>（2）添加安全访问控制</p>\n<p>和前面的 Security 配置一样，给项目添加访问控制。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SecuritySecureConfig</span> <span class=\"keyword\">extends</span> <span class=\"title\">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String adminContextPath;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SecuritySecureConfig</span><span class=\"params\">(AdminServerProperties adminServerProperties)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.adminContextPath = adminServerProperties.getContextPath();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">configure</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// @formatter:off</span></span><br><span class=\"line\">        SavedRequestAwareAuthenticationSuccessHandler successHandler = <span class=\"keyword\">new</span> SavedRequestAwareAuthenticationSuccessHandler();</span><br><span class=\"line\">        successHandler.setTargetUrlParameter(<span class=\"string\">&quot;redirectTo&quot;</span>);</span><br><span class=\"line\">        successHandler.setDefaultTargetUrl(adminContextPath + <span class=\"string\">&quot;/&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        http.authorizeRequests()</span><br><span class=\"line\">            .antMatchers(adminContextPath + <span class=\"string\">&quot;/assets/**&quot;</span>).permitAll() </span><br><span class=\"line\">            .antMatchers(adminContextPath + <span class=\"string\">&quot;/login&quot;</span>).permitAll()</span><br><span class=\"line\">            .anyRequest().authenticated() </span><br><span class=\"line\">            .and()</span><br><span class=\"line\">        .formLogin().loginPage(adminContextPath + <span class=\"string\">&quot;/login&quot;</span>).successHandler(successHandler).and() </span><br><span class=\"line\">        .logout().logoutUrl(adminContextPath + <span class=\"string\">&quot;/logout&quot;</span>).and()</span><br><span class=\"line\">        .httpBasic().and() </span><br><span class=\"line\">        .csrf()</span><br><span class=\"line\">            .csrfTokenRepository(CookieCsrfTokenRepository.withHttpOnlyFalse())  </span><br><span class=\"line\">            .ignoringAntMatchers(</span><br><span class=\"line\">                adminContextPath + <span class=\"string\">&quot;/instances&quot;</span>,   </span><br><span class=\"line\">                adminContextPath + <span class=\"string\">&quot;/actuator/**&quot;</span>  </span><br><span class=\"line\">            );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    antMatchers(adminContextPath + <span class=\"string\">&quot;/assets/**&quot;</span>).permitAll() 所有静态内容不做安全验证</span><br><span class=\"line\">    anyRequest().authenticated() 其他请求均需要验证</span><br><span class=\"line\">    formLogin() 配置登录</span><br><span class=\"line\">    logout() 配置登出</span><br><span class=\"line\">    httpBasic() 支持 HTTP，引导 Spring Boot Admin 客户端注册</span><br><span class=\"line\">    csrfTokenRepository(CookieCsrfTokenRepository.withHttpOnlyFalse()) 打开跨站点请求保护 Cookies</span><br><span class=\"line\">    adminContextPath + <span class=\"string\">&quot;/instances&quot;</span> 取消跨站点请求保护 <span class=\"string\">&quot;/instances&quot;</span>，方便 Admin 客户端注册</span><br><span class=\"line\">    adminContextPath + <span class=\"string\">&quot;/actuator/** &quot;</span> 取消跨站点请求保护 <span class=\"string\">&quot;/actuator/**&quot;</span>，可以让 Admin 监控到 Actuator 的相关接口</span><br></pre></td></tr></table></figure>\n<p>然后可以给 security 设置一个用户名和密码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring.security.user.name&#x3D;admin</span><br><span class=\"line\">spring.security.user.password&#x3D;admin</span><br></pre></td></tr></table></figure>\n<p>配置完成之后重启 Admin Server 端，访问网址 <a href=\"http://localhost:8000/\">http://localhost:8000</a> 就会发现需要一个登录的用户名和密码了。<br><img src=\"https://eelve.com/upload/2019/8/86-dc4b6d05194a4c9786383189c6378f26.png\" alt=\"Admin Server\"><br>使用刚才设置的用户名和密码登录之后，发现注册到 Server 端的服务数成为 0 了，这是客户端统一也需要配置帐户名和密码信息。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring.security.user.name&#x3D;admin</span><br><span class=\"line\">spring.security.user.password&#x3D;admin</span><br></pre></td></tr></table></figure>\n<p>配置完成之后重新启动，在服务端就又可以查看监控到的应用了。</p>\n<h1 id=\"伍、其他方式\"><a href=\"#伍、其他方式\" class=\"headerlink\" title=\"伍、其他方式\"></a>伍、其他方式</h1><p>如果 Actuator 的端口被使用 HTTP 认证保护，那么 Spring Boot Admin Server 访问的时候需要凭证信息，这时候可以使用 metadata 的方式对账户和密码进行配置。</p>\n<h2 id=\"直接使用客户端注册的方式：\"><a href=\"#直接使用客户端注册的方式：\" class=\"headerlink\" title=\"直接使用客户端注册的方式：\"></a>直接使用客户端注册的方式：</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring.boot.admin.client:</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">http://localhost:8080</span></span><br><span class=\"line\">    <span class=\"attr\">instance:</span></span><br><span class=\"line\">      <span class=\"attr\">metadata:</span></span><br><span class=\"line\">        <span class=\"attr\">user.name:</span> <span class=\"string\">$&#123;spring.security.user.name&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">user.password:</span> <span class=\"string\">$&#123;spring.security.user.password&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"使用-Eureka-进行注册的方式：\"><a href=\"#使用-Eureka-进行注册的方式：\" class=\"headerlink\" title=\"使用 Eureka 进行注册的方式：\"></a>使用 Eureka 进行注册的方式：</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">eureka:</span></span><br><span class=\"line\">  <span class=\"attr\">instance:</span></span><br><span class=\"line\">    <span class=\"attr\">metadata-map:</span></span><br><span class=\"line\">      <span class=\"attr\">user.name:</span> <span class=\"string\">$&#123;spring.security.user.name&#125;</span></span><br><span class=\"line\">      <span class=\"attr\">user.password:</span> <span class=\"string\">$&#123;spring.security.user.password&#125;</span></span><br></pre></td></tr></table></figure>\n<p>Eureka 中的 metadataMap 是专门用来存放一些自定义的数据，当注册中心或者其他服务需要此服务的某些配置时可以在 metadataMap 里取。实际上，每个 instance 都有各自的 metadataMap，map 中存放着需要用到的属性。例如，上面配置中的 eureka.instance.metadata-map.user.name，当这个服务成功注册到 Eureka 上，Spring Boot Admin 就会拿到这个 instance，进而拿到 metadataMap 里的属性，然后放入请求头，向此服务发送请求，访问此服务的 Actuator 开放的端点。</p>\n<h1 id=\"陆、邮件告警\"><a href=\"#陆、邮件告警\" class=\"headerlink\" title=\"陆、邮件告警\"></a>陆、邮件告警</h1><p>Spring Boot Admin 将微服务中所有应用信息在后台进行了展示，非常方便我们对微服务整体的监控和治理。但是我们的运营人员也不可能一天 24 小时盯着监控后台，因此如果服务有异常的时候，有对应的邮件告警就太好了，其实 Spring Boot Admin 也给出了支持。</p>\n<p>我们对上面的示例项目 spring-boot-admin-server 进行改造。</p>\n<h2 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">  &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">  &lt;artifactId&gt;spring-boot-starter-mail&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"增加了邮件发送的-starter-包。\"><a href=\"#增加了邮件发送的-starter-包。\" class=\"headerlink\" title=\"增加了邮件发送的 starter 包。\"></a>增加了邮件发送的 starter 包。</h2><h3 id=\"配置文件-2\"><a href=\"#配置文件-2\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">spring.mail.host</span>=<span class=\"string\">smtp.qq.com</span></span><br><span class=\"line\"><span class=\"meta\">spring.mail.username</span>=<span class=\"string\">xxx@qq.com</span></span><br><span class=\"line\"><span class=\"meta\">spring.mail.password</span>=<span class=\"string\">xxx</span></span><br><span class=\"line\"><span class=\"meta\">spring.mail.properties.mail.smtp.auth</span>=<span class=\"string\">true</span></span><br><span class=\"line\"><span class=\"meta\">spring.mail.properties.mail.smtp.starttls.enable</span>=<span class=\"string\">true</span></span><br><span class=\"line\"><span class=\"meta\">spring.mail.properties.mail.smtp.starttls.required</span>=<span class=\"string\">true</span></span><br><span class=\"line\"><span class=\"meta\">spring.boot.admin.notify.mail.from</span>=<span class=\"string\">yyyy@qq.com</span></span><br><span class=\"line\"><span class=\"meta\">spring.boot.admin.notify.mail.to</span>=<span class=\"string\">zzz@qq.com</span></span><br></pre></td></tr></table></figure>\n<p><strong>在配置文件中添加邮件发送相关信息：邮件的发送者、接受者、协议、移动授权码等</strong>。</p>\n<p>配置完成后，重新启动项目 spring-boot-admin-server，这样 Admin Server 就具备了邮件告警的功能，默认情况下 Admin Server 对 Eureka 中的服务上下线都进行了监控，当服务上下线的时候我们就会收到相应的告警邮件。</p>\n<p>当然这只是最基本的邮件监控，在实际的使用过程中，需要根据情况对邮件告警内容进行自定义，比如监控堆内存的使用情况，当到达一定比例的时候进行告警等。</p>\n<p>【写在后面的话】Spring Boot Admin 解决了我们对大规模 Spring Boot 应用监控的需求，Spring Boot Admin 充分利用了 Actuator 开放的相关接口，采用优秀的图形界面将这些信息进行了展示，方便我们更加直观的查看集群中应用的状态。Spring Boot Admin 不仅可以监控单个 Spring Boot 应用，也可以结合 Spring Cloud 监控注册到服务中心的所有应用状态，再结合报警系统的使用就可以随时感知到应用的状态变化。在实际工作中 Spring Boot Admin 是我们在后期运营中频繁用到的一个组件，应该作为重点关注。</p>\n<hr>\n<p>最后是一个用http方式监听的demo：<a href=\"https://github.com/eelve/springbootadmin\">Spring Boot Admin使用http连接server端</a></p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"SpringCloud之Admin","slug":"SpringCloud之Admin","date":"2019-08-31T07:26:41.000Z","updated":"2021-04-19T06:44:39.069Z","comments":true,"path":"api/articles/SpringCloud之Admin.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png","content":"<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"SpringCloud之Gateway","slug":"SpringCloud之Gateway","date":"2019-08-31T07:27:19.000Z","updated":"2021-04-19T06:44:39.095Z","comments":true,"path":"api/articles/SpringCloud之Gateway.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png","content":"<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"SpringCloud之Log","slug":"SpringCloud之Log","date":"2019-08-31T07:27:42.000Z","updated":"2021-04-19T06:44:39.089Z","comments":true,"path":"api/articles/SpringCloud之Log.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png","content":"<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"SpringCloud之Sleuth","slug":"SpringCloud之Sleuth","date":"2019-08-31T07:27:09.000Z","updated":"2021-04-19T06:44:39.106Z","comments":true,"path":"api/articles/SpringCloud之Sleuth.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png","content":"<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"SpringCloud之漫谈微服务","slug":"SpringCloud之漫谈微服务","date":"2019-08-31T07:28:01.000Z","updated":"2021-04-19T06:44:39.134Z","comments":true,"path":"api/articles/SpringCloud之漫谈微服务.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png","content":"<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"hadoop安装解决之道本地版","slug":"hadoop安装解决之道本地版","date":"2019-08-09T09:12:58.000Z","updated":"2021-04-19T07:47:19.524Z","comments":true,"path":"api/articles/hadoop安装解决之道本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2019/7/hadop01-636e38ae52254d1aacef36d96b72de8c.png","content":"<h1 id=\"壹、故障现象\"><a href=\"#壹、故障现象\" class=\"headerlink\" title=\"壹、故障现象\"></a>壹、故障现象</h1><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Microsoft Windows [版本 10.0.18362.239]</span><br><span class=\"line\">(c) 2019 Microsoft Corporation。保留所有权利。</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\Chirius&gt;hadoop version</span><br><span class=\"line\">系统找不到指定的路径。</span><br><span class=\"line\">Error: JAVA_HOME is incorrectly set.</span><br><span class=\"line\">       Please update C:\\dhc_hlk\\hadoop-2.8.5\\etc\\hadoop\\hadoop-env.cmd</span><br><span class=\"line\">&#x27;-Xmx512m&#x27; 不是内部或外部命令，也不是可运行的程序</span><br><span class=\"line\">或批处理文件。</span><br><span class=\"line\"> </span><br><span class=\"line\">C:\\Users\\Chirius&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"贰、尝试解决\"><a href=\"#贰、尝试解决\" class=\"headerlink\" title=\"贰、尝试解决\"></a>贰、尝试解决</h1><p>首先，本人遇见上述错的先决条件是：在安装jdk时，使用的是jdk的默认安装路径 C:\\Program Files\\Java\\jdk1.xxxx ，然后在Windows电脑上解压安装本地hadoop，正确配置hadoop的系统环境变量$HADOOP_HOME及$HADOOP_HOME/etc/hadoop/hadoop-env.cmd文件的java安装路径前提下，报了上图中的这个错</p>\n<p>报错分析：</p>\n<p>在Windows中安装jdk时，如果是安装在C:\\Program Files\\Java\\jdk1.8.0_161路径下，如果需要在其他组件中配置java的环境时，因为C:\\Program Files是Windows系统的系统盘，可能在某些场合下访问的时候，必须以Windows管理员的身份去访问，例如：我们在Windows中解压安装了hadoop，那么需要在$HADOOP_HOME/etc/hadoop/hadoop-env.cmd文件中手动修改java的安装路径，即：set JAVA_HOME=C:\\Program Files\\Java\\jdk1.8.0_161</p>\n<p><img src=\"https://eelve.com/upload/2019/7/hadop01-636e38ae52254d1aacef36d96b72de8c.png\" alt=\"hadop01\"></p>\n<p>而我们的jdk安装在jdk的默认安装路径下，所以该文件路径有可能需要管理员访问权限才可以访问，所以如果像上图中这样配置会导致hadoop安装失败，失败的原因则是未检测到jdk环境，才会报<strong>Error: JAVA_HOME is incorrectly set.</strong></p>\n<h1 id=\"叁、解决方法\"><a href=\"#叁、解决方法\" class=\"headerlink\" title=\"叁、解决方法\"></a>叁、解决方法</h1><p>将$HADOOP_HOME/etc/hadoop/hadoop-env.cmd文件中的 set JAVA_HOME=C:\\Program Files\\Java\\jdk1.8.0_161 修改为 set JAVA_HOME=C:\\PROGRA~1\\Java\\jdk1.8.0_161 保存，然后重新在cmd窗口输入 hadoop version 命令，即可成功！<br><img src=\"https://eelve.com/upload/2019/7/hadoop02-67b5b5e127a046e69b18eab65b062949.png\" alt=\"hadoop02\"></p>\n<p>注意：在$HADOOP_HOME/etc/hadoop/hadoop-env.cmd文件中的这一行 set JAVA_HOME=C:\\PROGRA~1\\Java\\jdk1.8.0_161 中不能有空格！</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Microsoft Windows [版本 10.0.18362.239]</span><br><span class=\"line\">(c) 2019 Microsoft Corporation。保留所有权利。</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\Chirius&gt;hadoop version</span><br><span class=\"line\">Hadoop 2.7.3</span><br><span class=\"line\">Subversion https://git-wip-us.apache.org/repos/asf/hadoop.git -r baa91f7c6bc9cb92be5982de4719c1c8af91ccff</span><br><span class=\"line\">Compiled by root on 2016-08-18T01:41Z</span><br><span class=\"line\">Compiled with protoc 2.5.0</span><br><span class=\"line\">From source with checksum 2e4ce5f957ea4db193bce3734ff29ff4</span><br><span class=\"line\">This command was run using /D:/Seven/ways/hadoop-2.7.3/share/hadoop/common/hadoop-common-2.7.3.jar</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\Chirius&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"spring-boot-starter-quartz集群实践本地版","slug":"spring-boot-starter-quartz集群实践本地版","date":"2019-08-09T09:06:12.000Z","updated":"2021-04-19T07:47:19.526Z","comments":true,"path":"api/articles/spring-boot-starter-quartz集群实践本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2019/8/1-a8a710a578ad47a8afc8ace72f3cbd7c.png","content":"<p>【<strong>前情提要</strong>】由于项目需要，需要一个定时任务集群，故此有了这个spring-boot-starter-quartz集群的实践。springboot的版本为：2.1.6.RELEASE；quartz的版本为：2.3.1.假如这里一共有两个定时任务的节点，它们的代码完全一样。</p>\n<hr>\n<h1 id=\"壹-jar包依赖\"><a href=\"#壹-jar包依赖\" class=\"headerlink\" title=\"壹.jar包依赖\"></a>壹.jar包依赖</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;properties&gt;</span><br><span class=\"line\">        &lt;java.version&gt;1.8&lt;&#x2F;java.version&gt;</span><br><span class=\"line\">    &lt;&#x2F;properties&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;dependencies&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;spring-boot-starter&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;spring-boot-starter-quartz&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;scope&gt;runtime&lt;&#x2F;scope&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;spring-boot-starter-jdbc&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.projectlombok&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;lombok&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;optional&gt;true&lt;&#x2F;optional&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">    &lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure>\n<p>这里选择将定时任务的数据入库，避免数据直接存在内存中，因应用重启造成的数据丢失和做集群控制。</p>\n<h1 id=\"贰、项目配置\"><a href=\"#贰、项目配置\" class=\"headerlink\" title=\"贰、项目配置\"></a>贰、项目配置</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">server:</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"number\">8080</span></span><br><span class=\"line\">    <span class=\"attr\">servlet:</span></span><br><span class=\"line\">      <span class=\"attr\">context-path:</span> <span class=\"string\">/lovin</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://127.0.0.1:3306/training?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=true</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">driver-class-name:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\">  <span class=\"attr\">quartz:</span></span><br><span class=\"line\">    <span class=\"attr\">job-store-type:</span> <span class=\"string\">jdbc</span> <span class=\"comment\">#数据库方式</span></span><br><span class=\"line\">    <span class=\"attr\">jdbc:</span></span><br><span class=\"line\">      <span class=\"attr\">initialize-schema:</span> <span class=\"string\">never</span> <span class=\"comment\">#不初始化表结构</span></span><br><span class=\"line\">    <span class=\"attr\">properties:</span></span><br><span class=\"line\">      <span class=\"attr\">org:</span></span><br><span class=\"line\">        <span class=\"attr\">quartz:</span></span><br><span class=\"line\">          <span class=\"attr\">scheduler:</span></span><br><span class=\"line\">            <span class=\"attr\">instanceId:</span> <span class=\"string\">AUTO</span> <span class=\"comment\">#默认主机名和时间戳生成实例ID,可以是任何字符串，但对于所有调度程序来说，必须是唯一的 对应qrtz_scheduler_state INSTANCE_NAME字段</span></span><br><span class=\"line\">            <span class=\"comment\">#instanceName: clusteredScheduler #quartzScheduler</span></span><br><span class=\"line\">          <span class=\"attr\">jobStore:</span></span><br><span class=\"line\">            <span class=\"attr\">class:</span> <span class=\"string\">org.quartz.impl.jdbcjobstore.JobStoreTX</span> <span class=\"comment\">#持久化配置</span></span><br><span class=\"line\">            <span class=\"attr\">driverDelegateClass:</span> <span class=\"string\">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span> <span class=\"comment\">#我们仅为数据库制作了特定于数据库的代理</span></span><br><span class=\"line\">            <span class=\"attr\">useProperties:</span> <span class=\"literal\">false</span> <span class=\"comment\">#以指示JDBCJobStore将JobDataMaps中的所有值都作为字符串，因此可以作为名称 - 值对存储而不是在BLOB列中以其序列化形式存储更多复杂的对象。从长远来看，这是更安全的，因为您避免了将非String类序列化为BLOB的类版本问题。</span></span><br><span class=\"line\">            <span class=\"attr\">tablePrefix:</span> <span class=\"string\">qrtz_</span>  <span class=\"comment\">#数据库表前缀</span></span><br><span class=\"line\">            <span class=\"attr\">misfireThreshold:</span> <span class=\"number\">60000</span> <span class=\"comment\">#在被认为“失火”之前，调度程序将“容忍”一个Triggers将其下一个启动时间通过的毫秒数。默认值（如果您在配置中未输入此属性）为60000（60秒）。</span></span><br><span class=\"line\">            <span class=\"attr\">clusterCheckinInterval:</span> <span class=\"number\">5000</span> <span class=\"comment\">#设置此实例“检入”*与群集的其他实例的频率（以毫秒为单位）。影响检测失败实例的速度。</span></span><br><span class=\"line\">            <span class=\"attr\">isClustered:</span> <span class=\"literal\">true</span> <span class=\"comment\">#打开群集功能</span></span><br><span class=\"line\">          <span class=\"attr\">threadPool:</span> <span class=\"comment\">#连接池</span></span><br><span class=\"line\">            <span class=\"attr\">class:</span> <span class=\"string\">org.quartz.simpl.SimpleThreadPool</span></span><br><span class=\"line\">            <span class=\"attr\">threadCount:</span> <span class=\"number\">10</span></span><br><span class=\"line\">            <span class=\"attr\">threadPriority:</span> <span class=\"number\">5</span></span><br><span class=\"line\">            <span class=\"attr\">threadsInheritContextClassLoaderOfInitializingThread:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p><strong>这里需要注意的是两个节点的端口号应该不一致，避免冲突</strong></p>\n<h1 id=\"叁、实现一个Job\"><a href=\"#叁、实现一个Job\" class=\"headerlink\" title=\"叁、实现一个Job\"></a>叁、实现一个Job</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Job</span> <span class=\"keyword\">extends</span> <span class=\"title\">QuartzJobBean</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">executeInternal</span><span class=\"params\">(JobExecutionContext jobExecutionContext)</span> <span class=\"keyword\">throws</span> JobExecutionException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 获取参数</span></span><br><span class=\"line\">        JobDataMap jobDataMap = jobExecutionContext.getJobDetail().getJobDataMap();</span><br><span class=\"line\">        <span class=\"comment\">// 业务逻辑 ...</span></span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;------springbootquartzonejob执行&quot;</span>+jobDataMap.get(<span class=\"string\">&quot;name&quot;</span>).toString()+<span class=\"string\">&quot;###############&quot;</span>+jobExecutionContext.getTrigger());</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p><strong>其中的日志输出是为了便于观察任务执行情况</strong></p>\n<h1 id=\"肆、封装定时任务操作\"><a href=\"#肆、封装定时任务操作\" class=\"headerlink\" title=\"肆、封装定时任务操作\"></a>肆、封装定时任务操作</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QuartzService</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Scheduler scheduler;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostConstruct</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">startScheduler</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            scheduler.start();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 增加一个job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobClass</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务实现类</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务名称</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务组名</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobTime</span></span><br><span class=\"line\"><span class=\"comment\">     *            时间表达式 (这是每隔多少秒为一次任务)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobTimes</span></span><br><span class=\"line\"><span class=\"comment\">     *            运行的次数 （&lt;0:表示不限次数）</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobData</span></span><br><span class=\"line\"><span class=\"comment\">     *            参数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addJob</span><span class=\"params\">(Class&lt;? extends QuartzJobBean&gt; jobClass, String jobName, String jobGroupName, <span class=\"keyword\">int</span> jobTime,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                       <span class=\"keyword\">int</span> jobTimes, Map jobData)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 任务名称和组构成任务key</span></span><br><span class=\"line\">            JobDetail jobDetail = JobBuilder.newJob(jobClass).withIdentity(jobName, jobGroupName)</span><br><span class=\"line\">                    .build();</span><br><span class=\"line\">            <span class=\"comment\">// 设置job参数</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(jobData!= <span class=\"keyword\">null</span> &amp;&amp; jobData.size()&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                jobDetail.getJobDataMap().putAll(jobData);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 使用simpleTrigger规则</span></span><br><span class=\"line\">            Trigger trigger = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (jobTimes &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                trigger = TriggerBuilder.newTrigger().withIdentity(jobName, jobGroupName)</span><br><span class=\"line\">                        .withSchedule(SimpleScheduleBuilder.repeatSecondlyForever(<span class=\"number\">1</span>).withIntervalInSeconds(jobTime))</span><br><span class=\"line\">                        .startNow().build();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                trigger = TriggerBuilder</span><br><span class=\"line\">                        .newTrigger().withIdentity(jobName, jobGroupName).withSchedule(SimpleScheduleBuilder</span><br><span class=\"line\">                                .repeatSecondlyForever(<span class=\"number\">1</span>).withIntervalInSeconds(jobTime).withRepeatCount(jobTimes))</span><br><span class=\"line\">                        .startNow().build();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            scheduler.scheduleJob(jobDetail, trigger);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 增加一个job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobClass</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务实现类</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务名称(建议唯一)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务组名</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobTime</span></span><br><span class=\"line\"><span class=\"comment\">     *            时间表达式 （如：0/5 * * * * ? ）</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobData</span></span><br><span class=\"line\"><span class=\"comment\">     *            参数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addJob</span><span class=\"params\">(Class&lt;? extends QuartzJobBean&gt; jobClass, String jobName, String jobGroupName, String jobTime, Map jobData)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 创建jobDetail实例，绑定Job实现类</span></span><br><span class=\"line\">            <span class=\"comment\">// 指明job的名称，所在组的名称，以及绑定job类</span></span><br><span class=\"line\">            <span class=\"comment\">// 任务名称和组构成任务key</span></span><br><span class=\"line\">            JobDetail jobDetail = JobBuilder.newJob(jobClass).withIdentity(jobName, jobGroupName)</span><br><span class=\"line\">                    .build();</span><br><span class=\"line\">            <span class=\"comment\">// 设置job参数</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(jobData!= <span class=\"keyword\">null</span> &amp;&amp; jobData.size()&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                jobDetail.getJobDataMap().putAll(jobData);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 定义调度触发规则</span></span><br><span class=\"line\">            <span class=\"comment\">// 使用cornTrigger规则</span></span><br><span class=\"line\">            <span class=\"comment\">// 触发器key</span></span><br><span class=\"line\">            Trigger trigger = TriggerBuilder.newTrigger().withIdentity(jobName, jobGroupName)</span><br><span class=\"line\">                    .startAt(DateBuilder.futureDate(<span class=\"number\">1</span>, IntervalUnit.SECOND))</span><br><span class=\"line\">                    .withSchedule(CronScheduleBuilder.cronSchedule(jobTime)).startNow().build();</span><br><span class=\"line\">            <span class=\"comment\">// 把作业和触发器注册到任务调度中</span></span><br><span class=\"line\">            scheduler.scheduleJob(jobDetail, trigger);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 修改 一个job的 时间表达式</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobTime</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateJob</span><span class=\"params\">(String jobName, String jobGroupName, String jobTime)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            TriggerKey triggerKey = TriggerKey.triggerKey(jobName, jobGroupName);</span><br><span class=\"line\">            CronTrigger trigger = (CronTrigger) scheduler.getTrigger(triggerKey);</span><br><span class=\"line\">            trigger = trigger.getTriggerBuilder().withIdentity(triggerKey)</span><br><span class=\"line\">                    .withSchedule(CronScheduleBuilder.cronSchedule(jobTime)).build();</span><br><span class=\"line\">            <span class=\"comment\">// 重启触发器</span></span><br><span class=\"line\">            scheduler.rescheduleJob(triggerKey, trigger);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 删除任务一个job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务名称</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     *            任务组名</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deleteJob</span><span class=\"params\">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            scheduler.deleteJob(<span class=\"keyword\">new</span> JobKey(jobName, jobGroupName));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 暂停一个job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">pauseJob</span><span class=\"params\">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class=\"line\">            scheduler.pauseJob(jobKey);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 恢复一个job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">resumeJob</span><span class=\"params\">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class=\"line\">            scheduler.resumeJob(jobKey);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 立即执行一个job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jobGroupName</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">runAJobNow</span><span class=\"params\">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class=\"line\">            scheduler.triggerJob(jobKey);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取所有计划中的任务列表</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Map&lt;String, Object&gt;&gt; queryAllJob() &#123;</span><br><span class=\"line\">        List&lt;Map&lt;String, Object&gt;&gt; jobList = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            GroupMatcher&lt;JobKey&gt; matcher = GroupMatcher.anyJobGroup();</span><br><span class=\"line\">            Set&lt;JobKey&gt; jobKeys = scheduler.getJobKeys(matcher);</span><br><span class=\"line\">            jobList = <span class=\"keyword\">new</span> ArrayList&lt;Map&lt;String, Object&gt;&gt;();</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (JobKey jobKey : jobKeys) &#123;</span><br><span class=\"line\">                List&lt;? extends Trigger&gt; triggers = scheduler.getTriggersOfJob(jobKey);</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (Trigger trigger : triggers) &#123;</span><br><span class=\"line\">                    Map&lt;String, Object&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">                    map.put(<span class=\"string\">&quot;jobName&quot;</span>, jobKey.getName());</span><br><span class=\"line\">                    map.put(<span class=\"string\">&quot;jobGroupName&quot;</span>, jobKey.getGroup());</span><br><span class=\"line\">                    map.put(<span class=\"string\">&quot;description&quot;</span>, <span class=\"string\">&quot;触发器:&quot;</span> + trigger.getKey());</span><br><span class=\"line\">                    Trigger.TriggerState triggerState = scheduler.getTriggerState(trigger.getKey());</span><br><span class=\"line\">                    map.put(<span class=\"string\">&quot;jobStatus&quot;</span>, triggerState.name());</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (trigger <span class=\"keyword\">instanceof</span> CronTrigger) &#123;</span><br><span class=\"line\">                        CronTrigger cronTrigger = (CronTrigger) trigger;</span><br><span class=\"line\">                        String cronExpression = cronTrigger.getCronExpression();</span><br><span class=\"line\">                        map.put(<span class=\"string\">&quot;jobTime&quot;</span>, cronExpression);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    jobList.add(map);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> jobList;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取所有正在运行的job</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Map&lt;String, Object&gt;&gt; queryRunJob() &#123;</span><br><span class=\"line\">        List&lt;Map&lt;String, Object&gt;&gt; jobList = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            List&lt;JobExecutionContext&gt; executingJobs = scheduler.getCurrentlyExecutingJobs();</span><br><span class=\"line\">            jobList = <span class=\"keyword\">new</span> ArrayList&lt;Map&lt;String, Object&gt;&gt;(executingJobs.size());</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (JobExecutionContext executingJob : executingJobs) &#123;</span><br><span class=\"line\">                Map&lt;String, Object&gt; map = <span class=\"keyword\">new</span> HashMap&lt;String, Object&gt;();</span><br><span class=\"line\">                JobDetail jobDetail = executingJob.getJobDetail();</span><br><span class=\"line\">                JobKey jobKey = jobDetail.getKey();</span><br><span class=\"line\">                Trigger trigger = executingJob.getTrigger();</span><br><span class=\"line\">                map.put(<span class=\"string\">&quot;jobName&quot;</span>, jobKey.getName());</span><br><span class=\"line\">                map.put(<span class=\"string\">&quot;jobGroupName&quot;</span>, jobKey.getGroup());</span><br><span class=\"line\">                map.put(<span class=\"string\">&quot;description&quot;</span>, <span class=\"string\">&quot;触发器:&quot;</span> + trigger.getKey());</span><br><span class=\"line\">                Trigger.TriggerState triggerState = scheduler.getTriggerState(trigger.getKey());</span><br><span class=\"line\">                map.put(<span class=\"string\">&quot;jobStatus&quot;</span>, triggerState.name());</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (trigger <span class=\"keyword\">instanceof</span> CronTrigger) &#123;</span><br><span class=\"line\">                    CronTrigger cronTrigger = (CronTrigger) trigger;</span><br><span class=\"line\">                    String cronExpression = cronTrigger.getCronExpression();</span><br><span class=\"line\">                    map.put(<span class=\"string\">&quot;jobTime&quot;</span>, cronExpression);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                jobList.add(map);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SchedulerException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> jobList;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"陆、初始化任务\"><a href=\"#陆、初始化任务\" class=\"headerlink\" title=\"陆、初始化任务\"></a>陆、初始化任务</h1><p>这里不准备给用户用web界面来配置定时任务，故此采用<strong>CommandLineRunner</strong>来子啊应用初始化的时候来初始化任务。只需要实现CommandLineRunner的run()方法即可。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">(String... args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        HashMap&lt;String,Object&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">        map.put(<span class=\"string\">&quot;name&quot;</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        quartzService.deleteJob(<span class=\"string\">&quot;job&quot;</span>, <span class=\"string\">&quot;test&quot;</span>);</span><br><span class=\"line\">        quartzService.addJob(Job.class, <span class=\"string\">&quot;job&quot;</span>, <span class=\"string\">&quot;test&quot;</span>, <span class=\"string\">&quot;0 * * * * ?&quot;</span>, map);</span><br><span class=\"line\"></span><br><span class=\"line\">        map.put(<span class=\"string\">&quot;name&quot;</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        quartzService.deleteJob(<span class=\"string\">&quot;job2&quot;</span>, <span class=\"string\">&quot;test&quot;</span>);</span><br><span class=\"line\">        quartzService.addJob(Job.class, <span class=\"string\">&quot;job2&quot;</span>, <span class=\"string\">&quot;test&quot;</span>, <span class=\"string\">&quot;10 * * * * ?&quot;</span>, map);</span><br><span class=\"line\"></span><br><span class=\"line\">        map.put(<span class=\"string\">&quot;name&quot;</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">        quartzService.deleteJob(<span class=\"string\">&quot;job3&quot;</span>, <span class=\"string\">&quot;test2&quot;</span>);</span><br><span class=\"line\">        quartzService.addJob(Job.class, <span class=\"string\">&quot;job3&quot;</span>, <span class=\"string\">&quot;test2&quot;</span>, <span class=\"string\">&quot;15 * * * * ?&quot;</span>, map);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"柒、测试验证\"><a href=\"#柒、测试验证\" class=\"headerlink\" title=\"柒、测试验证\"></a>柒、测试验证</h1><p>分别夏侯启动两个应用，然后观察任务执行，以及在运行过程中杀死某个服务，来观察定时任务的执行。<br><img src=\"https://eelve.com/upload/2019/8/1-a8a710a578ad47a8afc8ace72f3cbd7c.png\" alt=\"SpringbootquartzoneApplication\"><br><img src=\"https://eelve.com/upload/2019/8/2-db731d38c3ed4b4b8123482c9b3ef28d.png\" alt=\"SpringbootquartztwoApplication\"></p>\n<p>【<strong>写在后面的话</strong>】下面给出的是所需要脚本的连接地址：<a href=\"http://www.quartz-scheduler.org/downloads/\">脚本下载地址</a>，另外这边又一个自己实现的<a href=\"https://github.com/eelve/springbootquartzs.git\">demo</a></p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"springboot+jsp打jar问题本地版","slug":"springboot-jsp打jar问题本地版","date":"2019-08-09T09:11:29.000Z","updated":"2021-04-19T07:47:19.528Z","comments":true,"path":"api/articles/springboot-jsp打jar问题本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2019/7/O$VVNDUD1GCU8FT%5DQH5Z@TM-23f04197a92d4a5db24b6e3fb656b7c1.png","content":"<p>【<strong>前情提要</strong>】最近做了一个项目，项目是springboot+jsp结构的，但是在发布生产环境的时候又需要用maven打成jar包，但是一开始的默认配置都不成功。下面的文章就是具体的解决过程。</p>\n<hr>\n<h1 id=\"壹、项目结构\"><a href=\"#壹、项目结构\" class=\"headerlink\" title=\"壹、项目结构\"></a>壹、项目结构</h1><p><img src=\"https://eelve.com/upload/2019/7/O$VVNDUD1GCU8FT%5DQH5Z@TM-23f04197a92d4a5db24b6e3fb656b7c1.png\" alt=\"项目结构\"></p>\n<h1 id=\"贰、异常现象\"><a href=\"#贰、异常现象\" class=\"headerlink\" title=\"贰、异常现象\"></a>贰、异常现象</h1><p>使用的JDK为1.8，springboot版本为：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.5.6.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">relativePath</span>/&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.build.sourceEncoding</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.reporting.outputEncoding</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">java.version</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">java.version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>打成的jar只包含class文件，没有见资源文件引入。<br><img src=\"https://eelve.com/upload/2019/7/20190713-90f9d3c88e4940de8c8faaa0b2d4ec7c.png\" alt=\"没有包含resourse的编译结果\"></p>\n<h1 id=\"叁、解决办法\"><a href=\"#叁、解决办法\" class=\"headerlink\" title=\"叁、解决办法\"></a>叁、解决办法</h1><h2 id=\"1-添加资源路径的映射\"><a href=\"#1-添加资源路径的映射\" class=\"headerlink\" title=\"1. 添加资源路径的映射\"></a>1. 添加资源路径的映射</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/resources<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/**<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!-- 开启过滤，用指定的参数替换directory下的文件中的参数 --&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/webapp<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">targetPath</span>&gt;</span>META-INF/resources<span class=\"tag\">&lt;/<span class=\"name\">targetPath</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/**<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/java<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">excludes</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">exclude</span>&gt;</span></span><br><span class=\"line\">                        **/*.java</span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">exclude</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">excludes</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-修改maven编译版本为1-4-2\"><a href=\"#2-修改maven编译版本为1-4-2\" class=\"headerlink\" title=\"2. 修改maven编译版本为1.4.2\"></a>2. 修改maven编译版本为1.4.2</h2><p>只有使用这个版本打jar包才能解析jsp</p>\n<h2 id=\"3-设置mainClass\"><a href=\"#3-设置mainClass\" class=\"headerlink\" title=\"3. 设置mainClass\"></a>3. 设置mainClass</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!-- maven插件 --&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.4.2.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">mainClass</span>&gt;</span>com.gt.LaysshApplication<span class=\"tag\">&lt;/<span class=\"name\">mainClass</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-添加视图配置（可选）\"><a href=\"#4-添加视图配置（可选）\" class=\"headerlink\" title=\"4. 添加视图配置（可选）\"></a>4. 添加视图配置（可选）</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring.mvc.view.prefix=/WEB-INF/jsp/</span><br><span class=\"line\"></span><br><span class=\"line\">spring.mvc.view.suffix=.jsp</span><br></pre></td></tr></table></figure>\n<p>下面给出一个比较完整的maven编译配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/resources<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/**<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!-- 开启过滤，用指定的参数替换directory下的文件中的参数 --&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/webapp<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">targetPath</span>&gt;</span>META-INF/resources<span class=\"tag\">&lt;/<span class=\"name\">targetPath</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/**<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/java<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">excludes</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">exclude</span>&gt;</span></span><br><span class=\"line\">                        **/*.java</span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">exclude</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">excludes</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!-- maven插件 --&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.4.2.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">mainClass</span>&gt;</span>com.gt.MyApplication<span class=\"tag\">&lt;/<span class=\"name\">mainClass</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>下面就是修改编译配置之后的结果</p>\n<p><img src=\"https://eelve.com/upload/2019/7/201907192-13a348f78e4c4d1cb0b6485cf535dfbe.png\" alt=\"正确的结果\"></p>\n<hr>\n<p>【写在后面的话】现代的模板解析引擎已经有了这么多了，为什么不试一下<strong>thymeleaf</strong>，但是在最近的项目中碰到了th:src标签不解析的问题，目前还不清楚具体原因，而且相同的写法在其他页面都生效，真是怪异啊。鉴于目前还是又很多人使用springboot+jsp来进行开发，但是因为使用IDEA工具创建的SpringBoot项目本身是没有webapp目录的。如果我们想要添加webapp目录的话，可以手动添加。下面就简单的来说一下配置过程。</p>\n<hr>\n<h2 id=\"1-点开项目结构管理，点击IDEA右上角的Project-Structure\"><a href=\"#1-点开项目结构管理，点击IDEA右上角的Project-Structure\" class=\"headerlink\" title=\"1.点开项目结构管理，点击IDEA右上角的Project Structure\"></a>1.点开项目结构管理，点击IDEA右上角的Project Structure</h2><p><img src=\"https://eelve.com/upload/2019/7/201907193-7d050c6d01c1449f999bb49a5c11fda8.png\" alt=\"Project Structure\"></p>\n<h2 id=\"2-先点击下图中的-号，再点击Web\"><a href=\"#2-先点击下图中的-号，再点击Web\" class=\"headerlink\" title=\"2.先点击下图中的+号，再点击Web\"></a>2.先点击下图中的+号，再点击Web</h2><p><img src=\"https://eelve.com/upload/2019/7/2019071904-f795ae6044024bafbd02136c86fbfbda.png\" alt=\"2019071904\"></p>\n<h2 id=\"3-修改配置\"><a href=\"#3-修改配置\" class=\"headerlink\" title=\"3.修改配置\"></a>3.修改配置</h2><p>下图是修改配置前的默认配置<br><img src=\"https://eelve.com/upload/2019/7/20190705-bb62a58b15d24b098aa2db949d18de32.png\" alt=\"修改前的配置\"><br>下面将webapp配置到传统的main目录下<br><img src=\"https://eelve.com/upload/2019/7/2019071906-d580c788cbd94ff7ba7cb43d70fb5ebb.png\" alt=\"修改后的配置\"><br><img src=\"https://eelve.com/upload/2019/7/2019071906-4c565cc7039a4ed7b0dff2044d3e1bae.png\" alt=\"配置Artifacts\"><br><img src=\"https://eelve.com/upload/2019/7/2019071907-1a3c18ec66514327b6f5b635dfde0f67.png\" alt=\"最后的配置成功的结果\"></p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"使用Jasypt对SpringBoot配置文件加密本地版","slug":"使用Jasypt对SpringBoot配置文件加密本地版","date":"2019-08-09T09:14:23.000Z","updated":"2021-04-19T07:47:19.531Z","comments":true,"path":"api/articles/使用Jasypt对SpringBoot配置文件加密本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2019/6/springbootjasypydiagrams-3a7616cc841c4f7583fc7173e32aaab4.png","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a><strong>前言</strong></h1><p>在日前安全形势越来越严重的情况下，让我意识到在项目中存在一个我们经常忽略的漏洞，那就是我们的项目的配置文件中配置信息的安全，尤其是数据库连接的用户名和密码的安全。所以这里我们就需要对数据库的用户名和密码进行加密，这也是本文的由来。本文采用Jasypt对Spring Boot配置文件加密的相关方法，其实呢，也还有其他方案，具体的会在后面的相关文章中说明。</p>\n<h1 id=\"引入jasypt\"><a href=\"#引入jasypt\" class=\"headerlink\" title=\"引入jasypt\"></a><strong>引入jasypt</strong></h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.ulisesbocchio<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jasypt-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"1-生成要加密的字符串\"><a href=\"#1-生成要加密的字符串\" class=\"headerlink\" title=\"1.生成要加密的字符串\"></a><strong>1.生成要加密的字符串</strong></h1><h2 id=\"1-1-将数据库的用户名和密码进行加密\"><a href=\"#1-1-将数据库的用户名和密码进行加密\" class=\"headerlink\" title=\"1.1 将数据库的用户名和密码进行加密\"></a>1.1 将数据库的用户名和密码进行加密</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">contextLoads</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        BasicTextEncryptor textEncryptor = <span class=\"keyword\">new</span> BasicTextEncryptor();</span><br><span class=\"line\">        <span class=\"comment\">//加密所需的salt(盐)</span></span><br><span class=\"line\">        textEncryptor.setPassword(<span class=\"string\">&quot;1Qaz0oKm&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//要加密的数据（数据库的用户名或密码）</span></span><br><span class=\"line\">        String username = textEncryptor.encrypt(<span class=\"string\">&quot;root&quot;</span>);</span><br><span class=\"line\">        String password = textEncryptor.encrypt(<span class=\"string\">&quot;root&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;username:&quot;</span>+username);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;password:&quot;</span>+password);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p><strong>输出信息</strong></p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">username:NZmLHOOHX0SEjc285iG9YQ==</span><br><span class=\"line\">password:1JByM5wu5o+9H1Ba2o++Pg==</span><br><span class=\"line\">2019-06-14 14:55:49.863  INFO 8904 --- [       Thread-3] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService &#x27;applicationTaskExecutor&#x27;</span><br><span class=\"line\">2019-06-14 14:55:49.863  INFO 8904 --- [       Thread-3] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit &#x27;default&#x27;</span><br><span class=\"line\">2019-06-14 14:55:49.863  INFO 8904 --- [       Thread-3] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...</span><br><span class=\"line\">2019-06-14 14:55:49.878  INFO 8904 --- [       Thread-3] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-2-或者使用Maven下载好的jar包加密-Maven-org-jasypt-jasypt-2-0-0-jasypt-2-0-0-jar\"><a href=\"#1-2-或者使用Maven下载好的jar包加密-Maven-org-jasypt-jasypt-2-0-0-jasypt-2-0-0-jar\" class=\"headerlink\" title=\"1.2. 或者使用Maven下载好的jar包加密\\Maven\\org\\jasypt\\jasypt\\2.0.0\\jasypt-2.0.0.jar\"></a>1.2. 或者使用Maven下载好的jar包加密\\Maven\\org\\jasypt\\jasypt\\2.0.0\\jasypt-2.0.0.jar</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -cp jasypt-1.9.2.jar org.jasypt.intf.cli.JasyptPBEStringEncryptionCLI password=1Qaz0oKm algorithm=PBEWithMD5AndDES input=root</span><br></pre></td></tr></table></figure>\n<p><strong>输出信息</strong></p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">----ENVIRONMENT-----------------</span><br><span class=\"line\">Runtime: Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.171-b11</span><br><span class=\"line\"></span><br><span class=\"line\">----ARGUMENTS-------------------</span><br><span class=\"line\">input: root</span><br><span class=\"line\">algorithm: PBEWithMD5AndDES</span><br><span class=\"line\">password: 1Qaz0oKm </span><br><span class=\"line\"></span><br><span class=\"line\">----OUTPUT----------------------</span><br><span class=\"line\">NZmLHOOHX0SEjc285iG9YQ==</span><br></pre></td></tr></table></figure>\n<p>拷贝-OUTPUT-下的结果即可</p>\n<h1 id=\"2-配置properties文件\"><a href=\"#2-配置properties文件\" class=\"headerlink\" title=\"2.配置properties文件\"></a><strong>2.配置properties文件</strong></h1><p>将生成的加密串配置ENC(加密串)到application.properties中</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">8080</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://localhost:3306/test?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=true</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">ENC(GHK23XVFNHoQQ97vIW523Q==)</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">ENC(aTKef0XcG05Cfzao92EqqQ==)</span></span><br><span class=\"line\">    <span class=\"attr\">data-username:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\">  <span class=\"attr\">jpa:</span></span><br><span class=\"line\">    <span class=\"attr\">show-sql:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">database-platform:</span> <span class=\"string\">org.hibernate.dialect.MySQL5InnoDBDialect</span></span><br><span class=\"line\">    <span class=\"attr\">database:</span> <span class=\"string\">MYSQL</span></span><br><span class=\"line\">    <span class=\"attr\">hibernate:</span></span><br><span class=\"line\">      <span class=\"attr\">ddl-auto:</span> <span class=\"string\">update</span></span><br><span class=\"line\"><span class=\"attr\">jasypt:</span></span><br><span class=\"line\">  <span class=\"attr\">encryptor:</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">1Qaz0oKm</span> <span class=\"comment\">#加密所需的salt(盐)</span></span><br><span class=\"line\">    <span class=\"comment\">#algorithm: PBEWithMD5AndDES   # 默认加密方式PBEWithMD5AndDES,可以更改为PBEWithMD5AndTripleDES</span></span><br></pre></td></tr></table></figure>\n<p><strong>加密方式对应的类为BasicTextEncryptor和StrongTextEncryptor</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> StandardPBEStringEncryptor encryptor = <span class=\"keyword\">new</span> StandardPBEStringEncryptor();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">BasicTextEncryptor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.encryptor.setAlgorithm(<span class=\"string\">&quot;PBEWithMD5AndDES&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> StandardPBEStringEncryptor encryptor = <span class=\"keyword\">new</span> StandardPBEStringEncryptor();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">StrongTextEncryptor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.encryptor.setAlgorithm(<span class=\"string\">&quot;PBEWithMD5AndTripleDES&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://eelve.com/upload/2019/6/springbootjasypydiagrams-3a7616cc841c4f7583fc7173e32aaab4.png\" alt=\"图片.png\"></p>\n<h1 id=\"3-部署时配置salt-盐-值\"><a href=\"#3-部署时配置salt-盐-值\" class=\"headerlink\" title=\"3.部署时配置salt(盐)值\"></a><strong>3.部署时配置salt(盐)值</strong></h1><p><strong>1. 为了防止salt(盐)泄露,反解出密码.可以在项目部署的时候使用命令传入salt(盐)值</strong></p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar -Djasypt.encryptor.password=1Qaz0oKm xxx.jar</span><br></pre></td></tr></table></figure>\n<p><strong>2. 或者在服务器的环境变量里配置,进一步提高安全性</strong></p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">打开/etc/profile文件</span><br><span class=\"line\">vim /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">文件末尾插入</span><br><span class=\"line\">export JASYPT_PASSWORD = G0CvDz7oJn6</span><br><span class=\"line\"></span><br><span class=\"line\">编译 </span><br><span class=\"line\">source /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">运行 </span><br><span class=\"line\">java -jar -Djasypt.encryptor.password=$&#123;JASYPT_PASSWORD&#125; xxx.jar</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/eelve/jasypt\">下面是一个我自己的具体实现：https://github.com/eelve/jasypt，使用Jasypt对数据库用信息加密后，可以成功连接上数据库</a><br><img src=\"https://eelve.com/upload/2019/6/springbootjasypyresult-5f2ef70fe5124f5595a48b341807f2c3.png\" alt=\"图片.png\"></p>\n<p><a href=\"https://github.com/ulisesbocchio/jasypt-spring-boot\">官方地址：https://github.com/ulisesbocchio/jasypt-spring-boot</a></p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"怎么优雅的使用hexo","slug":"怎么优雅的使用hexo本地版","date":"2020-02-23T14:20:58.000Z","updated":"2021-04-19T06:44:39.241Z","comments":true,"path":"api/articles/怎么优雅的使用hexo本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2020/2/20200223011-1816538384854e64bb090740d8ea0621.png","content":"<p>【<strong>前情提要</strong>】在使用<a href=\"https://hexo.io/zh-cn/\">hexo</a>搭建自己的个人博客前，我一直使用<a href=\"https://halo.run/\">Halo</a>来搭建自己的博客。但是还是决定用hexo再搭建一个博客，主要是为了让自己在Github上留下自己的印记。</p>\n<hr>\n<p>关于hexo的基础使用知识我在这里就不做过多的介绍了，如果是在是不知道可以看以下<a href=\"https://hexo.io/zh-cn/docs/\">官方文档</a>。我这里主要说一下怎么用Github保存博客源代码和生成的网站代码。</p>\n<ul>\n<li>1.新建一个分支用来保存博客源代码，并且设为默认分支，如下图所示<br><img src=\"https://eelve.com/upload/2020/2/20200223011-1816538384854e64bb090740d8ea0621.png\" alt=\"20200223011\"></li>\n<li>2.执行hexo d -g上传博客内容</li>\n<li>3.使用git命令提交源代码到eblog分支</li>\n<li>*这样当你换电脑或者重新构建项目的时候就可以从github拉去代码就可以进行继续编写了，是不是很方便**</li>\n</ul>\n<hr>\n<p>【<strong>小贴士</strong>】常用hexo插件</p>\n<ul>\n<li>1.permalink_pinyin,将文章标题中的汉字转为拼音，有利于SEO<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">permalink_pinyin:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">separator:</span> <span class=\"string\">&#x27;-&#x27;</span> <span class=\"comment\"># default: &#x27;-&#x27;</span></span><br></pre></td></tr></table></figure></li>\n<li>2.hexo-generator-cname,避免每次提交之后都要重新配置博客域名的工作<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#设置保存CNAME的插件</span></span><br><span class=\"line\"><span class=\"attr\">Plugins:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">hexo-generator-cname</span></span><br></pre></td></tr></table></figure></li>\n<li>3.提交博客之前最好可以预览一遍，一般出现样式不正确之后，记得使用hexo clean命令哦</li>\n</ul>\n<hr>\n<p>最后附上一个我的博客的基本配置</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Hexo Configuration</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class=\"line\"><span class=\"comment\">## Source: https://github.com/hexojs/hexo/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Site</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">南国薏米</span></span><br><span class=\"line\"><span class=\"attr\">subtitle:</span> <span class=\"string\">南国不须收薏苡,百年终竟是芭蕉。</span></span><br><span class=\"line\"><span class=\"attr\">description:</span> <span class=\"string\">A</span> <span class=\"string\">human</span> <span class=\"string\">being,who</span> <span class=\"string\">loves</span> <span class=\"string\">football</span> <span class=\"string\">and</span> <span class=\"string\">music.</span></span><br><span class=\"line\"><span class=\"attr\">keywords:</span> <span class=\"string\">南国薏米</span></span><br><span class=\"line\"><span class=\"attr\">author:</span> <span class=\"string\">Chillo</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">zh-CN</span></span><br><span class=\"line\"><span class=\"attr\">timezone:</span> <span class=\"string\">Asia/Shanghai</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">http://zzlve.win</span></span><br><span class=\"line\"><span class=\"attr\">root:</span> <span class=\"string\">/</span></span><br><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">:year/:month/:day/:title/</span></span><br><span class=\"line\"><span class=\"attr\">permalink_defaults:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Directory</span></span><br><span class=\"line\"><span class=\"attr\">source_dir:</span> <span class=\"string\">source</span></span><br><span class=\"line\"><span class=\"attr\">public_dir:</span> <span class=\"string\">public</span></span><br><span class=\"line\"><span class=\"attr\">tag_dir:</span> <span class=\"string\">tags</span></span><br><span class=\"line\"><span class=\"attr\">archive_dir:</span> <span class=\"string\">archives</span></span><br><span class=\"line\"><span class=\"attr\">category_dir:</span> <span class=\"string\">categories</span></span><br><span class=\"line\"><span class=\"attr\">code_dir:</span> <span class=\"string\">downloads/code</span></span><br><span class=\"line\"><span class=\"attr\">i18n_dir:</span> <span class=\"string\">:lang</span></span><br><span class=\"line\"><span class=\"attr\">skip_render:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Writing</span></span><br><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:title.md</span> <span class=\"comment\"># File name of new posts</span></span><br><span class=\"line\"><span class=\"attr\">default_layout:</span> <span class=\"string\">post</span></span><br><span class=\"line\"><span class=\"attr\">titlecase:</span> <span class=\"literal\">false</span> <span class=\"comment\"># Transform title into titlecase</span></span><br><span class=\"line\"><span class=\"attr\">external_link:</span> <span class=\"literal\">true</span> <span class=\"comment\"># Open external links in new tab</span></span><br><span class=\"line\"><span class=\"attr\">filename_case:</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">render_drafts:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">relative_link:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">future:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">highlight:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">line_number:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">auto_detect:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">tab_replace:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Home page setting</span></span><br><span class=\"line\"><span class=\"comment\"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class=\"line\"><span class=\"comment\"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class=\"line\"><span class=\"attr\">index_generator:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">per_page:</span> <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"attr\">order_by:</span> <span class=\"string\">-date</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Category &amp; Tag</span></span><br><span class=\"line\"><span class=\"attr\">default_category:</span> <span class=\"string\">uncategorized</span></span><br><span class=\"line\"><span class=\"attr\">category_map:</span></span><br><span class=\"line\"><span class=\"attr\">tag_map:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Date / Time format</span></span><br><span class=\"line\"><span class=\"comment\">## Hexo uses Moment.js to parse and display date</span></span><br><span class=\"line\"><span class=\"comment\">## You can customize the date format as defined in</span></span><br><span class=\"line\"><span class=\"comment\">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class=\"line\"><span class=\"attr\">date_format:</span> <span class=\"string\">YYYY-MM-DD</span></span><br><span class=\"line\"><span class=\"attr\">time_format:</span> <span class=\"string\">HH:mm:ss</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Pagination</span></span><br><span class=\"line\"><span class=\"comment\">## Set per_page to 0 to disable pagination</span></span><br><span class=\"line\"><span class=\"attr\">per_page:</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"attr\">pagination_dir:</span> <span class=\"string\">page</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Extensions</span></span><br><span class=\"line\"><span class=\"comment\">## Plugins: https://hexo.io/plugins/</span></span><br><span class=\"line\"><span class=\"comment\">## Themes: https://hexo.io/themes/</span></span><br><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">next</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/eelve/eelve.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置保存CNAME的插件</span></span><br><span class=\"line\"><span class=\"attr\">Plugins:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">hexo-generator-cname</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">feed:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">atom</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">atom.xml</span></span><br><span class=\"line\">  <span class=\"attr\">limit:</span> <span class=\"number\">20</span></span><br><span class=\"line\"><span class=\"attr\">plugins:</span> <span class=\"string\">hexo-generate-feed</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">search.xml</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br><span class=\"line\">  <span class=\"attr\">format:</span> <span class=\"string\">html</span></span><br><span class=\"line\">  <span class=\"attr\">limit:</span> <span class=\"number\">10000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">permalink_pinyin:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">separator:</span> <span class=\"string\">&#x27;-&#x27;</span> <span class=\"comment\"># default: &#x27;-&#x27;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"浅析限流算法","slug":"浅析限流算法","date":"2021-04-05T02:14:08.000Z","updated":"2021-04-19T06:44:39.252Z","comments":true,"path":"api/articles/浅析限流算法.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png","content":"<p>【<strong>前情提要</strong>】</p>\n<h1 id=\"壹、\"><a href=\"#壹、\" class=\"headerlink\" title=\"壹、\"></a>壹、</h1><h1 id=\"贰、\"><a href=\"#贰、\" class=\"headerlink\" title=\"贰、\"></a>贰、</h1><hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"用命令将本地jar包导入到本地maven仓库本地版","slug":"用命令将本地jar包导入到本地maven仓库本地版","date":"2019-08-09T09:15:04.000Z","updated":"2021-04-19T07:44:38.010Z","comments":true,"path":"api/articles/用命令将本地jar包导入到本地maven仓库本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2019/6/%E5%AF%BC%E5%85%A5jar%E5%8C%85%E7%BB%93%E6%9E%9C-859bee2db9f14a2a8079b449d38e061c.png","content":"<p>【<strong>前情提要</strong>】在日常开发过程中，我们总是不可避免的需要依赖某些不在中央仓库，同时也不在本地仓库中的jar包，这是我们就需要使用命令行将需要导入本地仓库中的jar包导入本地仓库，使得项目依赖本地仓库中的代码。</p>\n<hr>\n<p>例如我们需要将下面pom文件中的jar包引入本地仓库</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.eelve<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>todo<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<p>导入命令</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn install:install-file -Dfile=D:\\link\\lib\\todo-1.0.jar  -DgroupId=com.eelve -DartifactId=todo -Dversion=1.0 -Dpackaging=jar</span><br></pre></td></tr></table></figure>\n<hr>\n<p>命令详解</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-Dfile：jar包所在本地的具体路径</span><br><span class=\"line\">-DgroupId：项目组织唯一的标识符，实际对应JAVA的包的结构</span><br><span class=\"line\">-DartifactId：项目的唯一的标识符，实际对应项目的名称，就是项目根目录的名称</span><br><span class=\"line\">-Dversion：版本号</span><br><span class=\"line\">-Dpackaging：打包的类型</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<hr>\n<p>结果示例</p>\n<p><img src=\"https://eelve.com/upload/2019/6/%E5%AF%BC%E5%85%A5jar%E5%8C%85%E7%BB%93%E6%9E%9C-859bee2db9f14a2a8079b449d38e061c.png\" alt=\"导入jar包结果\"></p>\n<hr>\n<p>【小贴士】maven的仓库分类</p>\n<p>在maven中，仓库可以分为：本地仓库、远程仓库。<br>远程仓库可以分为：中央仓库、私服仓库。<br>中央仓库是maven官方指定的仓库，可以理解为“寻找的最后一站”。<br>私服仓库可以是自己建的，也可以是其它主体建的（比如aliyun的maven仓库，jboss的maven仓库等）。<br>私服可以分为：全局应用的私服仓库、应用到项目自身的私服仓库。</p>\n<p>maven寻找得顺序大致可以理解为：<br>1，在本地仓库中寻找，如果没有则进入下一步。<br>2，在全局应用的私服仓库中寻找，如果没有则进入下一步。<br>3，在项目自身的私服仓库中寻找，如果没有则进入下一步。<br>4，在中央仓库中寻找，如果没有则终止寻找。</p>\n<p>补充：<br>1，如果在找寻的过程中，如果发现该仓库有镜像设置，则用镜像的地址代替。<br>2，如果仓库的id设置成“central”，则该配置会覆盖maven默认的中央仓库配置。</p>\n<p>以上，通过实践得来的，可能不全面，仅当参考</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"Elastic Stack实战之Filebeat初体验本地版","slug":"Elastic-Stack实战之Filebeat初体验本地版","date":"2020-03-07T09:49:22.000Z","updated":"2021-04-19T07:47:19.532Z","comments":true,"path":"api/articles/Elastic-Stack实战之Filebeat初体验本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2020/3/animated-gif-logs-ui-optimized-7bf3c88845c84ee3a0564f7a608726b5.gif","content":"<p>【<strong>前面的话</strong>】<a href=\"https://eelve.com/archives/beats\">前文</a>介绍了Elastic Stack的Beats家族，今天我们就来体验其中的专门用于采集文件的<a href=\"https://www.elastic.co/cn/beats/filebeat\">Filebeat</a>，走起。</p>\n<hr>\n<h1 id=\"壹、软件版本\"><a href=\"#壹、软件版本\" class=\"headerlink\" title=\"壹、软件版本\"></a>壹、软件版本</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">Centos：CentOS-7-x86_64-Minimal-1908</span></span><br><span class=\"line\"><span class=\"attr\">VM:</span> <span class=\"number\">15.5</span><span class=\"number\">.0</span> <span class=\"string\">build-14665864</span></span><br><span class=\"line\"><span class=\"attr\">Java:</span> <span class=\"number\">1.8</span><span class=\"string\">.0_211</span></span><br><span class=\"line\"><span class=\"attr\">Elasticsearch:</span> <span class=\"string\">elasticsearch-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Logstash:</span> <span class=\"string\">logstash-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Kibana:</span> <span class=\"string\">kibana-7.6.0</span></span><br><span class=\"line\"><span class=\"string\">Filebeat：filebeat-7.6.0</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"贰、Filebeat介绍\"><a href=\"#贰、Filebeat介绍\" class=\"headerlink\" title=\"贰、Filebeat介绍\"></a>贰、Filebeat介绍</h1><p>Filebeat是一种轻量型日志采集器，具有以下特点</p>\n<ul>\n<li>汇总、“tail -f”和搜索：启动 Filebeat 后，打开 Logs UI，直接在 Kibana 中观看对您的文件进行 tail 操作的过程。通过搜索栏按照服务、应用程序、主机、数据中心或者其他条件进行筛选，以跟踪您的全部汇总日志中的异常行为。</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/animated-gif-logs-ui-optimized-7bf3c88845c84ee3a0564f7a608726b5.gif\" alt=\"animated-gif-logs-ui-optimized\"></p>\n<ul>\n<li><p>性能稳健，不错过任何检测信号：无论在任何环境中，随时都潜伏着应用程序中断的风险。Filebeat 能够读取并转发日志行，如果出现中断，还会在一切恢复正常后，从中断前停止的位置继续开始。</p>\n</li>\n<li><p>Filebeat 让简单的事情简单化：Filebeat 内置有多种模块（Apache、Cisco ASA、Microsoft Azure、NGINX、MySQL 等等），可针对常见格式的日志大大简化收集、解析和可视化过程，只需一条命令即可。之所以能实现这一点，是因为它将自动默认路径（因操作系统而异）与 Elasticsearch 采集节点管道的定义和 Kibana 仪表板组合在一起。不仅如此，数个 Filebeat 模块还包括预配置的 Machine Learning 任务。 </p>\n<ul>\n<li>系统</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/filebeat-modules-system-1fcfe648ed244a3eb6981805e48eb805.jpg\" alt=\"filebeat-modules-system\"></p>\n<ul>\n<li>NGINX</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/filebeat-modules-nginx-60aafcc8bf6e416e8489e30b85e84446.jpg\" alt=\"filebeat-modules-nginx\"></p>\n<ul>\n<li>MySQL</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/filebeat-modules-mysql-532077e16cc3495291fbe4c7b15e7f36.jpg\" alt=\"filebeat-modules-mysql\"></p>\n<ul>\n<li>Auditd</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/filebeat-modules-auditd-593f8272484b4aa4ac01bc3fcd596d43.jpg\" alt=\"filebeat-modules-auditd\"></p>\n</li>\n</ul>\n<ul>\n<li><p>容器就绪和云端就绪：正在对所有内容进行容器化，或者正在云端环境中运行？通过 Elastic Stack，可以轻松地监测容器和云服务。在 Kubernetes、Docker 或云端部署中部署 Filebeat，即可获得所有的日志流：信息十分完整，包括日志流的 pod、容器、节点、VM、主机以及自动关联时用到的其他元数据。此外，Beats Autodiscover 功能可检测到新容器，并使用恰当的 Filebeat 模块对这些容器进行自适应监测。 </p>\n</li>\n<li><p>它不会导致您的管道过载：当将数据发送到 Logstash 或 Elasticsearch 时，Filebeat 使用背压敏感协议，以应对更多的数据量。如果 Logstash 正在忙于处理数据，则会告诉 Filebeat 减慢读取速度。一旦拥堵得到解决，Filebeat 就会恢复到原来的步伐并继续传输数据。 </p>\n</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/filebeat-diagram-71397eba004043f3a0593620b0139364.svg\" alt=\"filebeat-diagram\"></p>\n<ul>\n<li><p>输送至 Elasticsearch 或 Logstash。在 Kibana 中实现可视化。</p>\n<p>Filebeat 是 Elastic Stack 的一部分，因此能够与 Logstash、Elasticsearch 和 Kibana 无缝协作。无论您要使用 Logstash 转换或充实日志和文件，还是在 Elasticsearch 中随意处理一些数据分析，亦或在 Kibana 中构建和分享仪表板，Filebeat 都能轻松地将您的数据发送至最关键的地方。</p>\n</li>\n</ul>\n<h1 id=\"叁-Filebeat安装\"><a href=\"#叁-Filebeat安装\" class=\"headerlink\" title=\"叁 Filebeat安装\"></a>叁 Filebeat安装</h1><h2 id=\"3-1-下载地址\"><a href=\"#3-1-下载地址\" class=\"headerlink\" title=\"3.1 下载地址\"></a>3.1 下载地址</h2><p><a href=\"https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.6.0-linux-x86_64.tar.gz\">filebeat-7.6.0-linux-x86_64</a></p>\n<h2 id=\"3-2-解压filebeat-7-6-0-linux-x86-64\"><a href=\"#3-2-解压filebeat-7-6-0-linux-x86-64\" class=\"headerlink\" title=\"3.2 解压filebeat-7.6.0-linux-x86_64\"></a>3.2 解压filebeat-7.6.0-linux-x86_64</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zvxf filebeat-7.6.0-linux-x86_64.tar.gz -C /usr/elastic</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-3-filebeat配置\"><a href=\"#3-3-filebeat配置\" class=\"headerlink\" title=\"3.3 filebeat配置\"></a>3.3 filebeat配置</h2><p>我们可以针对不同的采集项自定义配置，同时方便测试和展示。</p>\n<h2 id=\"3-4-采集控制台日志\"><a href=\"#3-4-采集控制台日志\" class=\"headerlink\" title=\"3.4 采集控制台日志\"></a>3.4 采集控制台日志</h2><ul>\n<li>新建std.yml配置</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filebeat.inputs:</span><br><span class=\"line\">- type: stdin</span><br><span class=\"line\">  enabled: true</span><br><span class=\"line\">setup.template.settings:</span><br><span class=\"line\">  index.number_of_shards: 1</span><br><span class=\"line\">output.console:</span><br><span class=\"line\">  pretty: true</span><br><span class=\"line\">  enable: true</span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./filebeat  -e -c std.yml</span><br></pre></td></tr></table></figure>\n<ul>\n<li>结果</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hello</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;@timestamp&quot;: &quot;2020-03-07T08:40:10.807Z&quot;,</span><br><span class=\"line\">  &quot;@metadata&quot;: &#123;</span><br><span class=\"line\">    &quot;beat&quot;: &quot;filebeat&quot;,</span><br><span class=\"line\">    &quot;type&quot;: &quot;_doc&quot;,</span><br><span class=\"line\">    &quot;version&quot;: &quot;7.6.0&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;agent&quot;: &#123;</span><br><span class=\"line\">    &quot;id&quot;: &quot;4f346e18-c77b-4a8c-ae9a-f97b2007be60&quot;,</span><br><span class=\"line\">    &quot;version&quot;: &quot;7.6.0&quot;,</span><br><span class=\"line\">    &quot;type&quot;: &quot;filebeat&quot;,</span><br><span class=\"line\">    &quot;ephemeral_id&quot;: &quot;2b5dd30b-1a9a-454a-a9f1-0a428fd6c6da&quot;,</span><br><span class=\"line\">    &quot;hostname&quot;: &quot;192.168.237.11&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;ecs&quot;: &#123;</span><br><span class=\"line\">    &quot;version&quot;: &quot;1.4.0&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;message&quot;: &quot;hello&quot;,</span><br><span class=\"line\">  &quot;log&quot;: &#123;</span><br><span class=\"line\">    &quot;offset&quot;: 0,</span><br><span class=\"line\">    &quot;file&quot;: &#123;</span><br><span class=\"line\">      &quot;path&quot;: &quot;&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;input&quot;: &#123;</span><br><span class=\"line\">    &quot;type&quot;: &quot;stdin&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;host&quot;: &#123;</span><br><span class=\"line\">    &quot;name&quot;: &quot;192.168.237.11&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-5-采集nginx日志\"><a href=\"#3-5-采集nginx日志\" class=\"headerlink\" title=\"3.5 采集nginx日志\"></a>3.5 采集nginx日志</h2><ul>\n<li><p>启动nginx</p>\n<p>这里如果没有安装的话，可以自行安装配置，然后启动nginx</p>\n</li>\n<li><p>新建nginx.yml配置</p>\n</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filebeat.inputs:</span><br><span class=\"line\">- type: log</span><br><span class=\"line\">  enabled: true</span><br><span class=\"line\">  paths:</span><br><span class=\"line\">    - /usr/local/nginx/logs/*.log</span><br><span class=\"line\">  tags: [&quot;nginx&quot;]</span><br><span class=\"line\">setup.template.settings:</span><br><span class=\"line\">  index.number_of_shards: 1</span><br><span class=\"line\">output.elasticsearch:</span><br><span class=\"line\">  hosts: [&quot;http://192.168.237.11:9200&quot;]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动Elasticsearch</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ ./elasticsearch</span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动Filebeat</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 filebeat]$ ./filebeat  -e -c nginx.yml</span><br><span class=\"line\"></span><br><span class=\"line\">2020-03-07T17:11:05.821+0800\tINFO\tinstance/beat.go:298\tSetup Beat: filebeat; Version: 7.6.0</span><br><span class=\"line\">2020-03-07T17:11:05.821+0800\tINFO\t[index-management]\tidxmgmt/std.go:182\tSet output.elasticsearch.index to &#x27;filebeat-7.6.0&#x27; as ILM is enabled.</span><br><span class=\"line\">2020-03-07T17:11:05.821+0800\tINFO\telasticsearch/client.go:174\tElasticsearch url: http://192.168.237.11:9200</span><br><span class=\"line\">2020-03-07T17:11:05.821+0800\tINFO\t[publisher]\tpipeline/module.go:110\tBeat name: 192.168.237.11</span><br><span class=\"line\">2020-03-07T17:11:05.822+0800\tINFO\t[monitoring]\tlog/log.go:118\tStarting metrics logging every 30s</span><br><span class=\"line\">2020-03-07T17:11:05.822+0800\tINFO\tinstance/beat.go:439\tfilebeat start running.</span><br><span class=\"line\">2020-03-07T17:11:05.822+0800\tINFO\tregistrar/registrar.go:145\tLoading registrar data from /usr/elastic/filebeat/data/registry/filebeat/data.json</span><br><span class=\"line\">2020-03-07T17:11:05.822+0800\tINFO\tregistrar/registrar.go:152\tStates Loaded from registrar: 3</span><br><span class=\"line\">2020-03-07T17:11:05.822+0800\tINFO\tcrawler/crawler.go:72\tLoading Inputs: 1</span><br><span class=\"line\">2020-03-07T17:11:05.823+0800\tINFO\tlog/input.go:152\tConfigured paths: [/usr/local/nginx/logs/*.log]</span><br><span class=\"line\">2020-03-07T17:11:05.823+0800\tINFO\tinput/input.go:114\tStarting input of type: log; ID: 11194696681404026286 </span><br><span class=\"line\">2020-03-07T17:11:05.823+0800\tINFO\tcrawler/crawler.go:106\tLoading and starting Inputs completed. Enabled inputs: 1</span><br><span class=\"line\">2020-03-07T17:11:15.826+0800\tINFO\tlog/harvester.go:297\tHarvester started for file: /usr/local/nginx/logs/access.log</span><br><span class=\"line\">2020-03-07T17:11:16.828+0800\tINFO\tpipeline/output.go:95\tConnecting to backoff(elasticsearch(http://192.168.237.11:9200))</span><br><span class=\"line\">2020-03-07T17:11:16.831+0800\tINFO\telasticsearch/client.go:757\tAttempting to connect to Elasticsearch version 7.6.0</span><br><span class=\"line\">2020-03-07T17:11:16.859+0800\tINFO\t[license]\tlicenser/es_callback.go:50\tElasticsearch license: Basic</span><br><span class=\"line\">2020-03-07T17:11:16.891+0800\tINFO\t[index-management]\tidxmgmt/std.go:258\tAuto ILM enable success.</span><br><span class=\"line\">2020-03-07T17:11:16.892+0800\tINFO\t[index-management.ilm]\tilm/std.go:139\tdo not generate ilm policy: exists=true, overwrite=false</span><br><span class=\"line\">2020-03-07T17:11:16.893+0800\tINFO\t[index-management]\tidxmgmt/std.go:271\tILM policy successfully loaded.</span><br><span class=\"line\">2020-03-07T17:11:16.893+0800\tINFO\t[index-management]\tidxmgmt/std.go:410\tSet setup.template.name to &#x27;&#123;filebeat-7.6.0 &#123;now/d&#125;-000001&#125;&#x27; as ILM is enabled.</span><br><span class=\"line\">2020-03-07T17:11:16.893+0800\tINFO\t[index-management]\tidxmgmt/std.go:415\tSet setup.template.pattern to &#x27;filebeat-7.6.0-*&#x27; as ILM is enabled.</span><br><span class=\"line\">2020-03-07T17:11:16.893+0800\tINFO\t[index-management]\tidxmgmt/std.go:449\tSet settings.index.lifecycle.rollover_alias in template to &#123;filebeat-7.6.0 &#123;now/d&#125;-000001&#125; as ILM is enabled.</span><br><span class=\"line\">2020-03-07T17:11:16.893+0800\tINFO\t[index-management]\tidxmgmt/std.go:453\tSet settings.index.lifecycle.name in template to &#123;filebeat &#123;&quot;policy&quot;:&#123;&quot;phases&quot;:&#123;&quot;hot&quot;:&#123;&quot;actions&quot;:&#123;&quot;rollover&quot;:&#123;&quot;max_age&quot;:&quot;30d&quot;,&quot;max_size&quot;:&quot;50gb&quot;&#125;&#125;&#125;&#125;&#125;&#125;&#125; as ILM is enabled.</span><br><span class=\"line\">2020-03-07T17:11:16.895+0800\tINFO\ttemplate/load.go:89\tTemplate filebeat-7.6.0 already exists and will not be overwritten.</span><br><span class=\"line\">2020-03-07T17:11:16.895+0800\tINFO\t[index-management]\tidxmgmt/std.go:295\tLoaded index template.</span><br><span class=\"line\">2020-03-07T17:11:17.097+0800\tINFO\t[index-management]\tidxmgmt/std.go:306\tWrite alias successfully generated.</span><br><span class=\"line\">2020-03-07T17:11:17.097+0800\tINFO\tpipeline/output.go:105\tConnection to backoff(elasticsearch(http://192.168.237.11:9200)) established</span><br></pre></td></tr></table></figure>\n<ul>\n<li>刷新页面观察结果</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030701-f6f0c410456c47e7872c7719e1fe4205.png\" alt=\"2020030701\"><br><img src=\"https://eelve.com/upload/2020/3/2020030702-c17fe51d42ca47a3b4c452fa14131e92.png\" alt=\"2020030702\"></p>\n<p>我们可以看到采集已经成功，并且我们配置的tags也已经成功了</p>\n<h2 id=\"3-6-使用nginx-module采集nginx日志\"><a href=\"#3-6-使用nginx-module采集nginx日志\" class=\"headerlink\" title=\"3.6 使用nginx module采集nginx日志\"></a>3.6 使用nginx module采集nginx日志</h2><ul>\n<li>开启filebeat的nginx module</li>\n</ul>\n<p>前面要想实现日志数据的读取以及处理都是自己手动配置的，其实，在Filebeat中，有大量的Module，可以简化我们的配置，直接就可以使用，如下：</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 filebeat]$ ./filebeat modules list</span><br><span class=\"line\">Enabled:</span><br><span class=\"line\">nginx</span><br><span class=\"line\"></span><br><span class=\"line\">Disabled:</span><br><span class=\"line\">activemq</span><br><span class=\"line\">apache</span><br><span class=\"line\">auditd</span><br><span class=\"line\">aws</span><br><span class=\"line\">azure</span><br><span class=\"line\">cef</span><br><span class=\"line\">cisco</span><br><span class=\"line\">coredns</span><br><span class=\"line\">elasticsearch</span><br><span class=\"line\">envoyproxy</span><br><span class=\"line\">googlecloud</span><br><span class=\"line\">haproxy</span><br><span class=\"line\">ibmmq</span><br><span class=\"line\">icinga</span><br><span class=\"line\">iis</span><br><span class=\"line\">iptables</span><br><span class=\"line\">kafka</span><br><span class=\"line\">kibana</span><br><span class=\"line\">logstash</span><br><span class=\"line\">misp</span><br><span class=\"line\">mongodb</span><br><span class=\"line\">mssql</span><br><span class=\"line\">mysql</span><br><span class=\"line\">nats</span><br><span class=\"line\">netflow</span><br><span class=\"line\">osquery</span><br><span class=\"line\">panw</span><br><span class=\"line\">postgresql</span><br><span class=\"line\">rabbitmq</span><br><span class=\"line\">redis</span><br><span class=\"line\">santa</span><br><span class=\"line\">suricata</span><br><span class=\"line\">system</span><br><span class=\"line\">traefik</span><br><span class=\"line\">zeek</span><br></pre></td></tr></table></figure>\n<p>可以看到我这里的nginx modules已经开启了，但是默认是没有开启的，如果需要启用需要进行enable操作：</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/filebeat modules enable nginx #启动</span><br><span class=\"line\">./filebeat modules disable nginx #禁用</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>nginx module 配置</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 filebeat]$ cd modules.d</span><br><span class=\"line\">[iio@192 modules.d]$ vi nginx.yml </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Module: nginx</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Docs: https://www.elastic.co/guide/en/beats/filebeat/7.6/filebeat-module-nginx.html</span></span><br><span class=\"line\"></span><br><span class=\"line\">- module: nginx</span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\"> Access logs</span></span><br><span class=\"line\">  access:</span><br><span class=\"line\">    enabled: true</span><br><span class=\"line\">    var.paths: [&quot;/usr/local/nginx/logs/access.log*&quot;]</span><br><span class=\"line\">    # Set custom paths for the log files. If left empty,</span><br><span class=\"line\">    # Filebeat will choose the paths depending on your OS.</span><br><span class=\"line\">    #var.paths:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\"> Error logs</span></span><br><span class=\"line\">  error:</span><br><span class=\"line\">    enabled: true</span><br><span class=\"line\">    var.paths: [&quot;/usr/local/nginx/logs/error.log*&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">    # Set custom paths for the log files. If left empty,</span><br><span class=\"line\">    # Filebeat will choose the paths depending on your OS.</span><br><span class=\"line\">    #var.paths:</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>配置filebeat</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 filebeat]$ vi nginxmodule.yml</span><br><span class=\"line\">filebeat.inputs:</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">- <span class=\"built_in\">type</span>: <span class=\"built_in\">log</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  enabled: <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  paths:</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    - /usr/<span class=\"built_in\">local</span>/nginx/logs/*.<span class=\"built_in\">log</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  tags: [<span class=\"string\">&quot;nginx&quot;</span>]</span></span><br><span class=\"line\">setup.template.settings:</span><br><span class=\"line\">  index.number_of_shards: 1</span><br><span class=\"line\">output.elasticsearch:</span><br><span class=\"line\">  hosts: [&quot;http://192.168.237.11:9200&quot;]</span><br><span class=\"line\">filebeat.config.modules:</span><br><span class=\"line\">  path: $&#123;path.config&#125;/modules.d/*.yml</span><br><span class=\"line\">  reload.enabled: false</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 filebeat]$ ./filebeat  -e -c nginxmodule.yml</span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看结果</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030703-14356801335d4ea8a4256bce80a9bf5f.png\" alt=\"2020030703\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t&quot;msg&quot;: &quot;2020-02-29 02:30:26,634 [myid:] - WARN  [NIOServerCxn.Factory:0.0.0.0\\&#x2F;0.0.0.0:2181:NIOServerCnxn@376] - Unable to read additional data from client sessionid 0x0, likely client has closed socket&quot;,</span><br><span class=\"line\">\t&quot;rawmsg&quot;: &quot;2020-02-29 02:30:26,634 [myid:] - WARN  [NIOServerCxn.Factory:0.0.0.0\\&#x2F;0.0.0.0:2181:NIOServerCnxn@376] - Unable to read additional data from client sessionid 0x0, likely client has closed socket&quot;,</span><br><span class=\"line\">\t&quot;timereported&quot;: &quot;2020-02-29T10:30:26.635186+08:00&quot;,</span><br><span class=\"line\">\t&quot;hostname&quot;: &quot;izbp1a4b02uc2nj550yzs1z&quot;,</span><br><span class=\"line\">\t&quot;syslogtag&quot;: &quot;journal:&quot;,</span><br><span class=\"line\">\t&quot;inputname&quot;: &quot;imjournal&quot;,</span><br><span class=\"line\">\t&quot;fromhost&quot;: &quot;izbp1a4b02uc2nj550yzs1z&quot;,</span><br><span class=\"line\">\t&quot;fromhost-ip&quot;: &quot;127.0.0.1&quot;,</span><br><span class=\"line\">\t&quot;pri&quot;: &quot;14&quot;,</span><br><span class=\"line\">\t&quot;syslogfacility&quot;: &quot;1&quot;,</span><br><span class=\"line\">\t&quot;syslogseverity&quot;: &quot;6&quot;,</span><br><span class=\"line\">\t&quot;timegenerated&quot;: &quot;2020-02-29T10:30:26.635186+08:00&quot;,</span><br><span class=\"line\">\t&quot;programname&quot;: &quot;journal&quot;,</span><br><span class=\"line\">\t&quot;protocol-version&quot;: &quot;0&quot;,</span><br><span class=\"line\">\t&quot;structured-data&quot;: &quot;-&quot;,</span><br><span class=\"line\">\t&quot;app-name&quot;: &quot;journal&quot;,</span><br><span class=\"line\">\t&quot;procid&quot;: &quot;-&quot;,</span><br><span class=\"line\">\t&quot;msgid&quot;: &quot;-&quot;,</span><br><span class=\"line\">\t&quot;uuid&quot;: null,</span><br><span class=\"line\">\t&quot;$!&quot;: &#123;</span><br><span class=\"line\">\t\t&quot;_UID&quot;: &quot;0&quot;,</span><br><span class=\"line\">\t\t&quot;_GID&quot;: &quot;0&quot;,</span><br><span class=\"line\">\t\t&quot;_CAP_EFFECTIVE&quot;: &quot;1fffffffff&quot;,</span><br><span class=\"line\">\t\t&quot;_BOOT_ID&quot;: &quot;1c6d86e336cc4dc7b733ea3c53351d65&quot;,</span><br><span class=\"line\">\t\t&quot;_MACHINE_ID&quot;: &quot;f0f31005fb5a436d88e3c6cbf54e25aa&quot;,</span><br><span class=\"line\">\t\t&quot;_HOSTNAME&quot;: &quot;izbp1a4b02uc2nj550yzs1z&quot;,</span><br><span class=\"line\">\t\t&quot;_SYSTEMD_SLICE&quot;: &quot;system.slice&quot;,</span><br><span class=\"line\">\t\t&quot;PRIORITY&quot;: &quot;6&quot;,</span><br><span class=\"line\">\t\t&quot;_TRANSPORT&quot;: &quot;journal&quot;,</span><br><span class=\"line\">\t\t&quot;CONTAINER_ID_FULL&quot;: &quot;bdc76f9b56dbeb3f5005ca110d72945c6b949178b6948345febf5bc657433703&quot;,</span><br><span class=\"line\">\t\t&quot;CONTAINER_NAME&quot;: &quot;zookeeper&quot;,</span><br><span class=\"line\">\t\t&quot;CONTAINER_TAG&quot;: &quot;bdc76f9b56db&quot;,</span><br><span class=\"line\">\t\t&quot;CONTAINER_ID&quot;: &quot;bdc76f9b56db&quot;,</span><br><span class=\"line\">\t\t&quot;_PID&quot;: &quot;16046&quot;,</span><br><span class=\"line\">\t\t&quot;_COMM&quot;: &quot;dockerd-current&quot;,</span><br><span class=\"line\">\t\t&quot;_EXE&quot;: &quot;\\&#x2F;usr\\&#x2F;bin\\&#x2F;dockerd-current&quot;,</span><br><span class=\"line\">\t\t&quot;_CMDLINE&quot;: &quot;\\&#x2F;usr\\&#x2F;bin\\&#x2F;dockerd-current --add-runtime docker-runc&#x3D;\\&#x2F;usr\\&#x2F;libexec\\&#x2F;docker\\&#x2F;docker-runc-current --default-runtime&#x3D;docker-runc --exec-opt native.cgroupdriver&#x3D;systemd --userland-proxy-path&#x3D;\\&#x2F;usr\\&#x2F;libexec\\&#x2F;docker\\&#x2F;docker-proxy-current --init-path&#x3D;\\&#x2F;usr\\&#x2F;libexec\\&#x2F;docker\\&#x2F;docker-init-current --seccomp-profile&#x3D;\\&#x2F;etc\\&#x2F;docker\\&#x2F;seccomp.json --selinux-enabled --log-driver&#x3D;journald --signature-verification&#x3D;false --storage-driver overlay2&quot;,</span><br><span class=\"line\">\t\t&quot;_SYSTEMD_CGROUP&quot;: &quot;\\&#x2F;system.slice\\&#x2F;docker.service&quot;,</span><br><span class=\"line\">\t\t&quot;_SYSTEMD_UNIT&quot;: &quot;docker.service&quot;,</span><br><span class=\"line\">\t\t&quot;MESSAGE&quot;: &quot;2020-02-29 02:30:26,634 [myid:] - WARN  [NIOServerCxn.Factory:0.0.0.0\\&#x2F;0.0.0.0:2181:NIOServerCnxn@376] - Unable to read additional data from client sessionid 0x0, likely client has closed socket&quot;,</span><br><span class=\"line\">\t\t&quot;_SOURCE_REALTIME_TIMESTAMP&quot;: &quot;1582943426634852&quot;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125; &#123;</span><br><span class=\"line\">\t&quot;_index&quot;: &quot;filebeat-7.6.0-2020.03.07-000001&quot;,</span><br><span class=\"line\">\t&quot;_type&quot;: &quot;_doc&quot;,</span><br><span class=\"line\">\t&quot;_id&quot;: &quot;hBtStHAB2wqxgggKYbTw&quot;,</span><br><span class=\"line\">\t&quot;_version&quot;: 1,</span><br><span class=\"line\">\t&quot;_score&quot;: 1,</span><br><span class=\"line\">\t&quot;_source&quot;: &#123;</span><br><span class=\"line\">\t\t&quot;agent&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;hostname&quot;: &quot;192.168.237.11&quot;,</span><br><span class=\"line\">\t\t\t&quot;id&quot;: &quot;4f346e18-c77b-4a8c-ae9a-f97b2007be60&quot;,</span><br><span class=\"line\">\t\t\t&quot;ephemeral_id&quot;: &quot;b9759c98-cfbe-4240-8c7d-1e64c1caeec3&quot;,</span><br><span class=\"line\">\t\t\t&quot;type&quot;: &quot;filebeat&quot;,</span><br><span class=\"line\">\t\t\t&quot;version&quot;: &quot;7.6.0&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;nginx&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;access&quot;: &#123;</span><br><span class=\"line\">\t\t\t\t&quot;remote_ip_list&quot;: [</span><br><span class=\"line\">\t\t\t\t\t&quot;192.168.237.1&quot;</span><br><span class=\"line\">\t\t\t\t]</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;log&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;file&quot;: &#123;</span><br><span class=\"line\">\t\t\t\t&quot;path&quot;: &quot;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;logs&#x2F;access.log&quot;</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&quot;offset&quot;: 83567</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;source&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;address&quot;: &quot;192.168.237.1&quot;,</span><br><span class=\"line\">\t\t\t&quot;ip&quot;: &quot;192.168.237.1&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;fileset&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;name&quot;: &quot;access&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;url&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;original&quot;: &quot;&#x2F;&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;input&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;type&quot;: &quot;log&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;@timestamp&quot;: &quot;2020-03-07T09:27:40.000Z&quot;,</span><br><span class=\"line\">\t\t&quot;ecs&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;version&quot;: &quot;1.4.0&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;service&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;type&quot;: &quot;nginx&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;host&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;name&quot;: &quot;192.168.237.11&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;http&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;request&quot;: &#123;</span><br><span class=\"line\">\t\t\t\t&quot;referrer&quot;: &quot;-&quot;,</span><br><span class=\"line\">\t\t\t\t&quot;method&quot;: &quot;GET&quot;</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&quot;response&quot;: &#123;</span><br><span class=\"line\">\t\t\t\t&quot;status_code&quot;: 304,</span><br><span class=\"line\">\t\t\t\t&quot;body&quot;: &#123;</span><br><span class=\"line\">\t\t\t\t\t&quot;bytes&quot;: 0</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&quot;version&quot;: &quot;1.1&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;event&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;timezone&quot;: &quot;+08:00&quot;,</span><br><span class=\"line\">\t\t\t&quot;created&quot;: &quot;2020-03-07T09:27:41.512Z&quot;,</span><br><span class=\"line\">\t\t\t&quot;module&quot;: &quot;nginx&quot;,</span><br><span class=\"line\">\t\t\t&quot;dataset&quot;: &quot;nginx.access&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;user&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;name&quot;: &quot;-&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;user_agent&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;original&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;80.0.3987.132 Safari&#x2F;537.36&quot;,</span><br><span class=\"line\">\t\t\t&quot;os&quot;: &#123;</span><br><span class=\"line\">\t\t\t\t&quot;name&quot;: &quot;Windows&quot;,</span><br><span class=\"line\">\t\t\t\t&quot;version&quot;: &quot;10&quot;,</span><br><span class=\"line\">\t\t\t\t&quot;full&quot;: &quot;Windows 10&quot;</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&quot;name&quot;: &quot;Chrome&quot;,</span><br><span class=\"line\">\t\t\t&quot;device&quot;: &#123;</span><br><span class=\"line\">\t\t\t\t&quot;name&quot;: &quot;Other&quot;</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&quot;version&quot;: &quot;80.0.3987.132&quot;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们开用使用filebeat提供的modules采集nginx日志也成功,而且可以看到展示的信息也更加完善了。可以看到filebeat提供的各种modules就是帮我们做了一些解析工作，其他modules的用法类似。</p>\n<h2 id=\"3-7-使用Kibana展示\"><a href=\"#3-7-使用Kibana展示\" class=\"headerlink\" title=\"3.7 使用Kibana展示\"></a>3.7 使用Kibana展示</h2><ul>\n<li>修改filebeat配置</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 filebeat]$ vi iio.yml </span><br><span class=\"line\"></span><br><span class=\"line\">filebeat.inputs:</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">- <span class=\"built_in\">type</span>: <span class=\"built_in\">log</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  enabled: <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  paths:</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    - /usr/<span class=\"built_in\">local</span>/nginx/logs/*.<span class=\"built_in\">log</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  tags: [<span class=\"string\">&quot;nginx&quot;</span>]</span></span><br><span class=\"line\">setup.template.settings:</span><br><span class=\"line\">  index.number_of_shards: 1</span><br><span class=\"line\">output.elasticsearch:</span><br><span class=\"line\">  hosts: [&quot;http://192.168.237.11:9200&quot;]</span><br><span class=\"line\">filebeat.config.modules:</span><br><span class=\"line\">  path: $&#123;path.config&#125;/modules.d/*.yml</span><br><span class=\"line\">  reload.enabled: false</span><br><span class=\"line\">setup.kibana:</span><br><span class=\"line\">  host: &quot;192.168.237.11:5601&quot;</span><br><span class=\"line\">~   </span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动Kibana</li>\n</ul>\n<p>下面的安装仪表板依赖Kibana，也就是Kibana必须启动才能安装仪表盘</p>\n<ul>\n<li>安装仪表盘</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#安装仪表盘到Kibana</span><br><span class=\"line\">.&#x2F;metricbeat setup --dashboards</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030704-84aabcd7f21a4af0ab1ccb694e2f5f47.png\" alt=\"2020030704\"></p>\n<ul>\n<li>启动Filebeat</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./filebeat  -e -c iio.yml</span><br></pre></td></tr></table></figure>\n<ul>\n<li>观察结果</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030705-77c1f59279aa40d4b8319560da4a6ae5.png\" alt=\"2020030705\"><br><img src=\"https://eelve.com/upload/2020/3/2020030706-9f858efbcaba4dd898b07e54c2f42a0d.png\" alt=\"2020030706\"></p>\n<p>可以看到Kibana内置的nginx的仪表盘的展示情况，展示相当仿佛，并且还可以随着时间变化而刷新</p>\n<h1 id=\"肆、Filebeat工作原理\"><a href=\"#肆、Filebeat工作原理\" class=\"headerlink\" title=\"肆、Filebeat工作原理\"></a>肆、Filebeat工作原理</h1><p>Filebeat由两个主要组件组成：prospector 和 harvester。</p>\n<ul>\n<li><p>harvester：</p>\n<ul>\n<li>负责读取单个文件的内容。</li>\n<li>如果文件在读取时被删除或重命名，Filebeat将继续读取文件。</li>\n</ul>\n</li>\n<li><p>prospector：</p>\n<ul>\n<li>prospector 负责管理harvester并找到所有要读取的文件来源。</li>\n<li>如果输入类型为日志，则查找器将查找路径匹配的所有文件，并为每个文件启动一个harvester。</li>\n<li>Filebeat目前支持两种prospector类型：log和stdin。</li>\n</ul>\n</li>\n<li><p>Filebeat如何保持文件的状态</p>\n<ul>\n<li>Filebeat 保存每个文件的状态并经常将状态刷新到磁盘上的注册文件中。</li>\n<li>该状态用于记住harvester正在读取的最后偏移量，并确保发送所有日志行。</li>\n<li>如果输出（例如Elasticsearch或Logstash）无法访问，Filebeat会跟踪最后发送的行，并在输出再次可用时继续读取文件。</li>\n<li>在Filebeat运行时，每个prospector内存中也会保存的文件状态信息，当重新启动Filebeat时，将使用注册</li>\n<li>文件的数据来重建文件状态，Filebeat将每个harvester在从保存的最后偏移量继续读取。</li>\n<li>文件状态记录在data/registry文件中。</li>\n</ul>\n<p>```shell script<br>启动命令<br>./filebeat -e -c itcast.yml<br>./filebeat -e -c itcast.yml -d “publish”<br>#参数说明</p>\n</li>\n<li><p>e: 输出到标准输出,默认输出到syslog和logs下</p>\n</li>\n<li><p>c: 指定配置文件</p>\n</li>\n<li><p>d: 输出debug信息</p>\n</li>\n</ul>\n<p>#测试： ./filebeat -e -c iio.yml -d “publish”</p>\n<pre><code>\n---\n\n【**后面的话**】在本文中我们全面的体验了一下filebeat，还和Kibana结合应用了，我们可以看到filebeat和elk三大剑客整合的非常好，特别是Kibana提供了丰富的仪表盘，大大的方便了我们展示。后面还有再结合一下Logstash，使用以下过滤功能。\n\n---\n\n![薏米笔记](https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png)\n</code></pre>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"Elastic Stack实战之Kibana初体验本地版","slug":"Elastic-Stack实战之Kibana初体验本地版","date":"2020-03-03T11:49:22.000Z","updated":"2021-04-19T07:47:19.535Z","comments":true,"path":"api/articles/Elastic-Stack实战之Kibana初体验本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2020/3/illustrated-screenshot-hero-kibana-ab9ac4d9e6e748fda40fbdff14591bc6.png","content":"<hr>\n<p>layout: elastic<br>title: Elastic Stack实战之Kibana初体验<br>date: 2020-03-03 19:49:22<br>tags: [ELK,Kibana]<br>categories: Elastic Stack</p>\n<hr>\n<p>【<strong>前面的话</strong>】在前面已经安装好了Elasticsearch和Logstash，今天就来<a href=\"https://www.elastic.co/cn/kibana\">Kibana</a>进行一下初步体验。</p>\n<hr>\n<h1 id=\"壹、软件版本\"><a href=\"#壹、软件版本\" class=\"headerlink\" title=\"壹、软件版本\"></a>壹、软件版本</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">Centos：CentOS-7-x86_64-Minimal-1908</span></span><br><span class=\"line\"><span class=\"attr\">VM:</span> <span class=\"number\">15.5</span><span class=\"number\">.0</span> <span class=\"string\">build-14665864</span></span><br><span class=\"line\"><span class=\"attr\">Java:</span> <span class=\"number\">1.8</span><span class=\"string\">.0_211</span></span><br><span class=\"line\"><span class=\"attr\">Elasticsearch:</span> <span class=\"string\">elasticsearch-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Logstash:</span> <span class=\"string\">logstash-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Kibana:</span> <span class=\"string\">kibana-7.6.0</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"贰、Kibana介绍\"><a href=\"#贰、Kibana介绍\" class=\"headerlink\" title=\"贰、Kibana介绍\"></a>贰、Kibana介绍</h1><p><img src=\"https://eelve.com/upload/2020/3/illustrated-screenshot-hero-kibana-ab9ac4d9e6e748fda40fbdff14591bc6.png\" alt=\"illustrated-screenshot-hero-kibana\"></p>\n<pre><code>Kibana是了解 Elastic Stack 的窗口。\n\n通过 Kibana，您可以对自己的 Elasticsearch 进行可视化，还可以在 Elastic Stack 中进行导航，这样您便可以进行各种操作了，从跟踪查询负载，到理解请求如何流经您的整个应用，都能轻松完成。 \n</code></pre>\n<p><strong>可视化和分析：</strong> Kibana 让您能够自由地选择如何呈现自己的数据，一张图片胜过千万行日志，可以用下面几个特点来阐述：</p>\n<p><img src=\"https://eelve.com/upload/2020/3/animated-gif-lens-drag-and-drop-150ecdc9e8314ff798ae5958edac5963.gif\" alt=\"animated-gif-lens-drag-and-drop\"></p>\n<ul>\n<li><p><strong>基本内容：</strong> Kibana 核心产品搭载了一批经典功能：柱状图、线状图、饼图、旭日图，等等。当然啦，您还可以搜索自己的所有文档。            </p>\n<p><img src=\"https://eelve.com/upload/2020/3/kibana-basics-with-vega-87818e2dc2df4800bd116de2eb8ecf39.jpg\" alt=\"kibana-basics-with-vega\"></p>\n</li>\n<li><p><strong>位置分析：</strong> 借助 Elastic Maps，探索位置数据，还可以获得创意并对定制图层和矢量形状进行可视化。            </p>\n</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/geo-101256c64dc24b04abede3b0088ef4b8.jpg\" alt=\"geo\"></p>\n<ul>\n<li><strong>时间序列：</strong> 借助精选的时序数据 UI，对您 Elasticsearch 中的数据执行高级时间序列分析。您可以利用功能强大、简单易学的表达式来描述查询、转换和可视化。</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/kibana-timeseries-9cdce1ca946f44da9279e8c7577709e0.jpg\" alt=\"kibana-timeseries\"></p>\n<ul>\n<li><strong>Machine Learning：</strong> 借助非监督型 Machine Learning 功能来检测隐藏在您 Elasticsearch 数据中的异常情况并探索那些对它们有显著影响的属性。 </li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/kibana-machine-learning-5148691b6084492fb47558ebbee177e1.jpg\" alt=\"kibana-machine-learning\"></p>\n<ul>\n<li><strong>图表和网络：</strong> 凭借搜索引擎的相关性功能，结合 Graph 关联分析，揭示您 Elasticsearch 数据中极其常见的关系。 </li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/kibana-graph-e0e161ba7f3a4d6bb3c0640701e49a30.jpg\" alt=\"kibana-graph\"></p>\n<h1 id=\"叁、Kibana安装\"><a href=\"#叁、Kibana安装\" class=\"headerlink\" title=\"叁、Kibana安装\"></a>叁、Kibana安装</h1><h2 id=\"3-1-下载地址\"><a href=\"#3-1-下载地址\" class=\"headerlink\" title=\"3.1 下载地址\"></a>3.1 下载地址</h2><p><a href=\"https://artifacts.elastic.co/downloads/kibana/kibana-7.6.0-linux-x86_64.tar.gz\">kibana-7.6.0-linux-x86_64.tar.gz</a></p>\n<hr>\n<h2 id=\"3-2-解压kibana-7-6-0-linux-x86-64-tar-gz\"><a href=\"#3-2-解压kibana-7-6-0-linux-x86-64-tar-gz\" class=\"headerlink\" title=\"3.2 解压kibana-7.6.0-linux-x86_64.tar.gz\"></a>3.2 解压kibana-7.6.0-linux-x86_64.tar.gz</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zvxf kibana-7.6.0-linux-x86_64.tar.gz -C /usr/elastic</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-3-kibana配置说明\"><a href=\"#3-3-kibana配置说明\" class=\"headerlink\" title=\"3.3 kibana配置说明\"></a>3.3 kibana配置说明</h2><p>默认配置配置不需要改，下面给出一个最小的配置</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.port: 5601 #浏览器访问端口</span><br><span class=\"line\">server.host: &quot;192.168.237.11&quot;  #对外的服务地址</span><br><span class=\"line\">elasticsearch.hosts: [&quot;http://192.168.237.11:9200&quot;] #这里为你的elasticsearch集群的地址</span><br></pre></td></tr></table></figure>\n<h1 id=\"肆、Kibana简单使用\"><a href=\"#肆、Kibana简单使用\" class=\"headerlink\" title=\"肆、Kibana简单使用\"></a>肆、Kibana简单使用</h1><h2 id=\"4-1-启动Elasticsearch\"><a href=\"#4-1-启动Elasticsearch\" class=\"headerlink\" title=\"4.1 启动Elasticsearch\"></a>4.1 启动Elasticsearch</h2><p>首先我门要启动Elasticsearch，不然Kibana没有数据来源。同时检查是否启动成功，如下图</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030301-00f0ff22c74c4275be3690daa471cfa2.jpg\" alt=\"2020030301\"></p>\n<h2 id=\"4-2-启动Kibana\"><a href=\"#4-2-启动Kibana\" class=\"headerlink\" title=\"4.2 启动Kibana\"></a>4.2 启动Kibana</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ ./kibana</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>然后观察日志</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log   [13:27:27.338] [info][plugins-service] Plugin &quot;case&quot; is disabled.</span><br><span class=\"line\">log   [13:27:33.648] [info][plugins-system] Setting up [37] plugins: [licensing,taskManager,siem,code,infra,encryptedSavedObjects,usageCollection,metrics,canvas,timelion,features,security,apm_oss,translations,reporting,uiActions,data,navigation,newsfeed,share,status_page,home,spaces,cloud,apm,graph,bfetch,kibana_legacy,management,dev_tools,eui_utils,inspector,expressions,visualizations,embeddable,advancedUiActions,dashboard_embeddable_container]</span><br><span class=\"line\">log   [13:27:33.650] [info][licensing][plugins] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.652] [info][plugins][taskManager] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.667] [info][plugins][siem] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.667] [info][code][plugins] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.668] [info][infra][plugins] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.670] [info][encryptedSavedObjects][plugins] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.671] [warning][config][encryptedSavedObjects][plugins] Generating a random key for xpack.encryptedSavedObjects.encryptionKey. To be able to decrypt encrypted saved objects attributes after restart, please set xpack.encryptedSavedObjects.encryptionKey in kibana.yml</span><br><span class=\"line\">log   [13:27:33.677] [info][plugins][usageCollection] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.679] [info][metrics][plugins] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.680] [info][canvas][plugins] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.687] [info][plugins][timelion] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.689] [info][features][plugins] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.690] [info][plugins][security] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.691] [warning][config][plugins][security] Generating a random key for xpack.security.encryptionKey. To prevent sessions from being invalidated on restart, please set xpack.security.encryptionKey in kibana.yml</span><br><span class=\"line\">log   [13:27:33.691] [warning][config][plugins][security] Session cookies will be transmitted over insecure connections. This is not recommended.</span><br><span class=\"line\">log   [13:27:33.714] [info][apm_oss][plugins] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.715] [info][plugins][translations] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.715] [info][data][plugins] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.722] [info][plugins][share] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.724] [info][home][plugins] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.730] [info][plugins][spaces] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.736] [info][cloud][plugins] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.738] [info][apm][plugins] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.915] [info][graph][plugins] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.921] [info][bfetch][plugins] Setting up plugin</span><br><span class=\"line\">log   [13:27:33.933] [info][savedobjects-service] Waiting until all Elasticsearch nodes are compatible with Kibana before starting saved objects migrations...</span><br><span class=\"line\">log   [13:27:33.933] [info][savedobjects-service] Starting saved objects migrations</span><br><span class=\"line\">log   [13:27:34.115] [info][plugins-system] Starting [22] plugins: [licensing,taskManager,siem,code,infra,encryptedSavedObjects,usageCollection,metrics,canvas,timelion,features,security,apm_oss,translations,data,share,home,spaces,cloud,apm,graph,bfetch]</span><br><span class=\"line\">log   [13:27:40.328] [info][status][plugin:kibana@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:40.346] [info][status][plugin:elasticsearch@7.6.0] Status changed from uninitialized to yellow - Waiting for Elasticsearch</span><br><span class=\"line\">log   [13:27:40.348] [info][status][plugin:elasticsearch@7.6.0] Status changed from yellow to green - Ready</span><br><span class=\"line\">log   [13:27:40.358] [info][status][plugin:xpack_main@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:40.392] [info][status][plugin:graph@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:40.426] [info][kibana-monitoring][monitoring] Starting monitoring stats collection</span><br><span class=\"line\">log   [13:27:40.430] [info][status][plugin:monitoring@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:40.471] [info][status][plugin:spaces@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:40.507] [info][status][plugin:security@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:40.543] [info][status][plugin:searchprofiler@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:40.557] [info][status][plugin:ml@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:40.807] [info][status][plugin:tilemap@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:40.812] [info][status][plugin:watcher@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:40.836] [info][status][plugin:grokdebugger@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:40.856] [info][status][plugin:dashboard_mode@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:40.863] [info][status][plugin:logstash@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:40.891] [info][status][plugin:beats_management@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:40.958] [info][status][plugin:apm_oss@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.000] [info][status][plugin:apm@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.071] [info][status][plugin:maps@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.083] [info][status][plugin:interpreter@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.122] [info][status][plugin:canvas@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.130] [info][status][plugin:license_management@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.141] [info][status][plugin:index_management@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.228] [info][status][plugin:console@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.238] [info][status][plugin:console_extensions@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.245] [info][status][plugin:index_lifecycle_management@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.286] [info][status][plugin:kuery_autocomplete@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.304] [info][status][plugin:metrics@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.425] [info][status][plugin:infra@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.437] [info][plugins][taskManager][taskManager] TaskManager is identified by the Kibana UUID: ce42b997-a913-4d58-be46-bb1937feedd6</span><br><span class=\"line\">log   [13:27:41.441] [info][status][plugin:task_manager@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.448] [info][status][plugin:rollup@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.547] [info][status][plugin:transform@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.555] [info][status][plugin:encryptedSavedObjects@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.605] [info][status][plugin:actions@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.677] [info][status][plugin:alerting@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.853] [info][status][plugin:siem@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.868] [info][status][plugin:remote_clusters@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.876] [info][status][plugin:cross_cluster_replication@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.937] [info][status][plugin:upgrade_assistant@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:41.994] [info][status][plugin:uptime@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.006] [info][status][plugin:oss_telemetry@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.022] [info][status][plugin:file_upload@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.032] [info][status][plugin:data@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.067] [info][status][plugin:lens@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.136] [info][status][plugin:snapshot_restore@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.151] [info][status][plugin:input_control_vis@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.164] [info][status][plugin:navigation@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.169] [info][status][plugin:management@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.174] [info][status][plugin:kibana_react@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.178] [info][status][plugin:region_map@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.217] [info][status][plugin:telemetry@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.226] [info][status][plugin:metric_vis@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.230] [info][status][plugin:markdown_vis@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.399] [info][status][plugin:timelion@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.403] [info][status][plugin:ui_metric@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.406] [info][status][plugin:tagcloud@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.410] [info][status][plugin:table_vis@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.414] [info][status][plugin:vega@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:42.421] [warning][browser-driver][reporting] Enabling the Chromium sandbox provides an additional layer of protection.</span><br><span class=\"line\">log   [13:27:44.878] [warning][reporting] Generating a random key for xpack.reporting.encryptionKey. To prevent pending reports from failing on restart, please set xpack.reporting.encryptionKey in kibana.yml</span><br><span class=\"line\">log   [13:27:44.888] [info][status][plugin:reporting@7.6.0] Status changed from uninitialized to green - Ready</span><br><span class=\"line\">log   [13:27:44.970] [info][listening] Server running at http://192.168.237.11:5601</span><br><span class=\"line\">log   [13:27:45.502] [info][server][Kibana][http] http server running at http://192.168.237.11:5601</span><br><span class=\"line\">log   [13:27:45.549] [error][reporting] The Reporting plugin encountered issues launching Chromium in a self-test. You may have trouble generating reports.</span><br><span class=\"line\">log   [13:27:45.549] [error][reporting] ErrorEvent &#123;</span><br><span class=\"line\">target:</span><br><span class=\"line\"> WebSocket &#123;</span><br><span class=\"line\">   _events:</span><br><span class=\"line\">    [Object: null prototype] &#123; open: [Function], error: [Function] &#125;,</span><br><span class=\"line\">   _eventsCount: 2,</span><br><span class=\"line\">   _maxListeners: undefined,</span><br><span class=\"line\">   readyState: 3,</span><br><span class=\"line\">   protocol: &#x27;&#x27;,</span><br><span class=\"line\">   _binaryType: &#x27;nodebuffer&#x27;,</span><br><span class=\"line\">   _closeFrameReceived: false,</span><br><span class=\"line\">   _closeFrameSent: false,</span><br><span class=\"line\">   _closeMessage: &#x27;&#x27;,</span><br><span class=\"line\">   _closeTimer: null,</span><br><span class=\"line\">   _closeCode: 1006,</span><br><span class=\"line\">   _extensions: &#123;&#125;,</span><br><span class=\"line\">   _receiver: null,</span><br><span class=\"line\">   _sender: null,</span><br><span class=\"line\">   _socket: null,</span><br><span class=\"line\">   _isServer: false,</span><br><span class=\"line\">   _redirects: 0,</span><br><span class=\"line\">   url:</span><br><span class=\"line\">    &#x27;ws://127.0.0.1:44598/devtools/browser/cde91cb8-faad-4730-9d12-57c1e8ffd49a&#x27;,</span><br><span class=\"line\">   _req: null &#125;,</span><br><span class=\"line\">type: &#x27;error&#x27;,</span><br><span class=\"line\">message: &#x27;connect ECONNREFUSED 127.0.0.1:44598&#x27;,</span><br><span class=\"line\">error:</span><br><span class=\"line\"> &#123; Error: connect ECONNREFUSED 127.0.0.1:44598</span><br><span class=\"line\">     at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1107:14)</span><br><span class=\"line\">   errno: &#x27;ECONNREFUSED&#x27;,</span><br><span class=\"line\">   code: &#x27;ECONNREFUSED&#x27;,</span><br><span class=\"line\">   syscall: &#x27;connect&#x27;,</span><br><span class=\"line\">   address: &#x27;127.0.0.1&#x27;,</span><br><span class=\"line\">   port: 44598 &#125; &#125;</span><br><span class=\"line\">log   [13:27:45.557] [warning][reporting] See Chromium&#x27;s log output at &quot;/usr/elastic/kibana/data/headless_shell-linux/chrome_debug.log&quot;</span><br><span class=\"line\">log   [13:27:45.559] [warning][reporting] Reporting plugin self-check generated a warning: Error: Could not close browser client handle!</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-3-浏览器访问\"><a href=\"#4-3-浏览器访问\" class=\"headerlink\" title=\"4.3 浏览器访问\"></a>4.3 浏览器访问</h2><p><img src=\"https://eelve.com/upload/2020/3/2020030302-e7c518603e69473a8438fb32a9454154.png\" alt=\"2020030302\"></p>\n<p>下面我们继续操作，利用搭建Elasticsearch的时候添加的数据做一个可视化图表出来</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030306-5f167cf3142041ad944de9b7b0ff0eb9.png\" alt=\"2020030306\"><br><img src=\"https://eelve.com/upload/2020/3/2020030303-9787af1aceb148ef8b2f6a49015630c4.png\" alt=\"2020030303\"><br><img src=\"https://eelve.com/upload/2020/3/2020030304-a74acb31fabc4f4da44e96e0c7a28610.png\" alt=\"2020030304\"><br><img src=\"https://eelve.com/upload/2020/3/2020030305-c4f00a780a704435b28eb34f360857da.png\" alt=\"2020030305\"><br><img src=\"https://eelve.com/upload/2020/3/2020030308-53cd70f082074829afb4ee887948b24a.png\" alt=\"2020030308\"><br><img src=\"https://eelve.com/upload/2020/3/2020030311-d8de4d9839d34d38b731ba0ce0be2336.png\" alt=\"2020030311\"></p>\n<p>我们可以看到已经利用数据做出了一个柱饼图了，下面就再美化以下，得到最终结果</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030312-452f0ac1954844cab0ea2955bd43dfa2.png\" alt=\"2020030312\"></p>\n<p>另外我们还可以保存分享</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030313-425f770de5064b06b8951748d6a0d01b.png\" alt=\"2020030313\"></p>\n<p>然后我们还可以使用一下Kibana的开发工具，给<strong>eelve</strong>新加一条数据</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030314-1689d96967794fc38f042ea3807dfc1d.png\" alt=\"2020030314\"><br><img src=\"https://eelve.com/upload/2020/3/2020030315-68061267b1ac4b13a7844b873aa06c6b.png\" alt=\"2020030315\"></p>\n<p>然后再刷新图表，可以看到数据会产生相应的变化</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030316-bb66b6f0ba19419abc0ea3b674703f1b.png\" alt=\"2020030316\"></p>\n<p>也就是说如果数据是实时变化的话，这边的图表也会跟着变化。</p>\n<h1 id=\"伍、Kibana特性\"><a href=\"#伍、Kibana特性\" class=\"headerlink\" title=\"伍、Kibana特性\"></a>伍、Kibana特性</h1><ul>\n<li><p>强大的定制功能：根据业务通过Kibana中的Canvas，发挥无限创意自由定制</p>\n<ul>\n<li><p>日志分析</p>\n<p><img src=\"https://eelve.com/upload/2020/3/screenshot-canvas-log-analysis-e24abcc3311841c886dbc36c8ca8dc05.png\" alt=\"screenshot-canvas-log-analysis\"></p>\n</li>\n<li><p>基础设施监测</p>\n<p><img src=\"https://eelve.com/upload/2020/3/screenshot-canvas-infrastructure-706070724cb94eabbe6c37f1c82ce66d.png\" alt=\"screenshot-canvas-infrastructure\"></p>\n</li>\n<li><p>APM</p>\n<p><img src=\"https://eelve.com/upload/2020/3/screenshot-canvas-apm-d007b95db41646a8832f1b1e35734c14.png\" alt=\"screenshot-canvas-apm\"></p>\n</li>\n<li><p>安全运营</p>\n<p><img src=\"https://eelve.com/upload/2020/3/screenshot-canvas-security-operations-dd4a909ca4164efa93a30fc9e4c7b7e3.png\" alt=\"screenshot-canvas-security-operations\"></p>\n</li>\n<li><p>业务分析</p>\n<p><img src=\"https://eelve.com/upload/2020/3/screenshot-canvas-business-analytics-76b7f80430664be09ca4a2798ffb7faa.png\" alt=\"screenshot-canvas-business-analytics\"></p>\n</li>\n</ul>\n</li>\n<li><p>把制作好的图表分享，让每个人都感受到 Kibana 的便利：只需选择适合您的分享选项，即可轻松地把 Kibana 可视化分享给您选择的任何人：您的团队成员、您的老板、老板的老板、您的客户、合规经理或承包商。嵌入仪表板，分享链接，或者导出为 PDF、PNG 或 CSV 文件并作为附件发送给别人。</p>\n</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/reporting_no_zoom-optimized-1144e12a2f5e4e308fb9aee150ea7629.gif\" alt=\"reporting_no_zoom-optimized\"></p>\n<ul>\n<li>良好的控制访问权限：通过 Kibana Spaces 整理您的仪表板和可视化。通过基于角色的访问控制，邀请用户访问某些空间（但不允许访问其他空间），让他们能够查看特定内容并使用特定功能。</li>\n</ul>\n<p><img src=\"https://i.loli.net/2020/03/03/SlqFLG8AMNZiQXp.gif\" alt=\"security-login.gif\"></p>\n<ul>\n<li><p>管理：用于数据采集等操作的堆栈管理，有了 Kibana，命令行不再是管理安全设置、监测堆栈、采集和汇总数据或配置其他 Elastic Stack 功能的唯一途径。与此同时，得益于我们出色的 API，用户可以通过可视化 UI 轻松地管理 Elastic Stack 并确保其安全性，这种方式更加直观，也能让更多的人上手使用。</p>\n<ul>\n<li><p>添加数据</p>\n<p><img src=\"https://eelve.com/upload/2020/3/kibana-homepage-ca50d6a5d73b4e5e981724528a492eca.jpg\" alt=\"kibana-homepage\"></p>\n</li>\n<li><p>确保访问的安全性</p>\n<p><img src=\"https://eelve.com/upload/2020/3/kibana-management-security-2be33e4e888845ea87d6537b2eeaeb7f.jpg\" alt=\"kibana-management-security\"></p>\n</li>\n<li><p>管理管道</p>\n<p><img src=\"https://eelve.com/upload/2020/3/kibana-management-logstash-f9dbc5faf2ed484f9643ead95ef57e02.jpg\" alt=\"kibana-management-logstash\"></p>\n</li>\n<li><p>汇总</p>\n<p><img src=\"https://eelve.com/upload/2020/3/screenshot-rollups-management-ui-ec0be7dea0374a21a95bd18a048c094f.jpg\" alt=\"screenshot-rollups-management-ui\"></p>\n</li>\n<li><p>开发工具</p>\n<p><img src=\"https://eelve.com/upload/2020/3/5.5-console-80pct-generic-rgb-360a6e4bbf484353b27151e27de93b2e.jpg\" alt=\"5.5-console-80pct-generic-rgb\"></p>\n</li>\n</ul>\n</li>\n<li><p>可直接应用于用例</p>\n</li>\n</ul>\n<p>有时您只想对某个文件进行 tail 操作。您可能希望跟踪自己网站的运行状态。或者您可能希望查看分布式痕迹。通过 Kibana 内置应用，例如 Logs、Infrastructure、APM、Uptime 以及其他应用，无需离开 Kibana，便能轻松完成这一切。    </p>\n<p><img src=\"https://eelve.com/upload/2020/3/image4-2-d9d1a61d020f4af7b934c3e6fa424208.png\" alt=\"image4-2\"></p>\n<hr>\n<p>【<strong>后面的话</strong>】利用Kibana我们可以做出炫酷的符合业务且满足客户可视化展示。并且Kibana本身都提供相当多数量的各种图标模板，通过各种图标的组合可以轻松的开发一个属于我们自己的大屏。另外我们需要注意的是，我们应该根据我们的数据的特点选择合适的图表进行展示，这样可以是我们的图表显得更美观。今天只是体验了Kibana的部分功能，后续的其他功能，将配合Beats进行体验。</p>\n<hr>\n<p><img src=\"https://eelve.com/upload/2019/8/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"Java 8 Stream实践","slug":"Java 8 Stream实践本地版","date":"2019-06-29T06:54:24.000Z","updated":"2021-04-19T06:44:39.278Z","comments":true,"path":"api/articles/Java 8 Stream实践本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2019/7/streamDataSource-df15382b03b24526955b1b14636316dd.png","content":"<p>【<strong>前面的话</strong>】Java中的Stream于1.8版本析出，平时项目中也有用到，今天就系统的来实践一下。下面借用重庆力帆队伍中我个人比较喜欢的球员来操作一波，队员的年龄为了便于展示某些api做了调整，请不要太认真哦。</p>\n<hr>\n<h1 id=\"壹-Stream理解\"><a href=\"#壹-Stream理解\" class=\"headerlink\" title=\"壹. Stream理解\"></a>壹. Stream理解</h1><p>在java中我们称Stream为『<strong>流</strong>』，我们经常会用流去对集合进行一些流水线的操作。stream就像工厂一样，只需要把集合、命令还有一些参数灌输到流水线中去，就可以加工成得出想要的结果。这样的流水线能大大简洁代码，减少操作。给我个人的感觉类似JavaScript中的链式函数。</p>\n<h1 id=\"贰-Stream流程\"><a href=\"#贰-Stream流程\" class=\"headerlink\" title=\"贰. Stream流程\"></a>贰. Stream流程</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">原集合 —&gt; 流 —&gt; 各种操作(过滤、分组、统计) —&gt; 终端操作</span><br></pre></td></tr></table></figure>\n<p>Stream流的操作流程一般都是这样的，先将集合转为流，然后经过各种操作，比如过滤、筛选、分组、计算。最后的终端操作，就是转化成我们想要的数据，这个数据的形式一般还是集合，有时也会按照需求输出count计数。下文会一一举例。</p>\n<h1 id=\"叁-API实践\"><a href=\"#叁-API实践\" class=\"headerlink\" title=\"叁. API实践\"></a>叁. API实践</h1><p>首先，定义一个用户对象，包含姓名、年龄、id三个成员变量：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.eelve.training.entity;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.persistence.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> User</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> TDO</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zhao.zhilue</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2019/6/28 15:21</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@Entity</span></span><br><span class=\"line\"><span class=\"meta\">@Table(name = &quot;user&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@ToString</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@EqualsAndHashCode(exclude=&#123;&quot;id&quot;,&quot;name&quot;&#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> <span class=\"keyword\">implements</span>  <span class=\"title\">Comparable</span>&lt;<span class=\"title\">User</span>&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Id</span></span><br><span class=\"line\">    <span class=\"meta\">@GeneratedValue(strategy = GenerationType.IDENTITY)</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;id&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Link name.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;name&quot;, columnDefinition = &quot;varchar(255) not null&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;age&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">(String name, Integer age)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(User o)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age.compareTo(o.getAge());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在数据库中插入测试数据，见下图：</p>\n<p><img src=\"https://eelve.com/upload/2019/7/streamDataSource-df15382b03b24526955b1b14636316dd.png\" alt=\"streamDataSource\"></p>\n<h2 id=\"3-1过滤\"><a href=\"#3-1过滤\" class=\"headerlink\" title=\"3.1过滤\"></a>3.1过滤</h2><h3 id=\"1）filter-过滤-T-gt-boolean\"><a href=\"#1）filter-过滤-T-gt-boolean\" class=\"headerlink\" title=\"1）filter 过滤(T-&gt; boolean)\"></a>1）filter 过滤(T-&gt; boolean)</h3><p>假如我们要实现过滤出40岁以下的队员，我们可以这样来实现：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserStreamFilter</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        List&lt;User&gt; resultList = userList.stream().filter(user -&gt; user.getAge() &lt;= <span class=\"number\">40</span>).collect(Collectors.toList());</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (User user :  resultList)&#123;</span><br><span class=\"line\">            System.out.println(user.toString());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>filter里面，-&gt;箭头后面跟着的是一个<strong>boolean</strong>值，可以写任何的过滤条件，就相当于sql中where后面的东西，换句话说，能用sql实现的功能这里都可以实现<br>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User(id=<span class=\"number\">1</span>, name=费尔南多, age=<span class=\"number\">25</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">2</span>, name=费尔南迪尼奥, age=<span class=\"number\">26</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">3</span>, name=卡尔德克, age=<span class=\"number\">27</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">4</span>, name=阿德里安, age=<span class=\"number\">28</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">5</span>, name=隋维杰, age=<span class=\"number\">26</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"2）distinct-去重\"><a href=\"#2）distinct-去重\" class=\"headerlink\" title=\"2）distinct 去重\"></a>2）distinct 去重</h3><p>其用法和sql中的使用类似，假如我们要实现过去除用重复年龄的队员，我们可以这样来实现：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserDistinct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        List&lt;User&gt; resultList = userList.stream().distinct().collect(Collectors.toList());</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (User user :  resultList)&#123;</span><br><span class=\"line\">            System.out.println(user.toString());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User(id=<span class=\"number\">1</span>, name=费尔南多, age=<span class=\"number\">25</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">2</span>, name=费尔南迪尼奥, age=<span class=\"number\">26</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">3</span>, name=卡尔德克, age=<span class=\"number\">27</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">4</span>, name=阿德里安, age=<span class=\"number\">28</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">6</span>, name=克鲁伊夫, age=<span class=\"number\">43</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"3）sorted排序\"><a href=\"#3）sorted排序\" class=\"headerlink\" title=\"3）sorted排序\"></a>3）sorted排序</h3><p>如果流中的元素的类实现了 Comparable 接口，即有自己的排序规则，那么可以直接调用 sorted() 方法对元素进行排序，如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(User o)</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> age.compareTo(o.getAge());</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserStreamSorted</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        List&lt;User&gt; resultList = userList.stream().sorted().collect(Collectors.toList());</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (User user :  resultList)&#123;</span><br><span class=\"line\">            System.out.println(user.toString());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>反之, 需要调用 sorted((T, T) -&gt; int) 实现 Comparator 接口。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserStreamSortedWithComparator</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        List&lt;User&gt; resultList = userList.stream().sorted(Comparator.comparingInt(User::getAge)).collect(Collectors.toList());</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (User user :  resultList)&#123;</span><br><span class=\"line\">            System.out.println(user.toString());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User(id=<span class=\"number\">1</span>, name=费尔南多, age=<span class=\"number\">25</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">2</span>, name=费尔南迪尼奥, age=<span class=\"number\">26</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">5</span>, name=隋维杰, age=<span class=\"number\">26</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">3</span>, name=卡尔德克, age=<span class=\"number\">27</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">4</span>, name=阿德里安, age=<span class=\"number\">28</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">6</span>, name=克鲁伊夫, age=<span class=\"number\">43</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"4）limit（）-返回前n个元素\"><a href=\"#4）limit（）-返回前n个元素\" class=\"headerlink\" title=\"4）limit（） 返回前n个元素\"></a>4）limit（） 返回前n个元素</h3><p>如果想知道队伍中年龄最小的就可以使用下面来实现：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserStreamLimit</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        List&lt;User&gt; resultList = userList.stream().limit(<span class=\"number\">2</span>).collect(Collectors.toList());</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (User user :  resultList)&#123;</span><br><span class=\"line\">            System.out.println(user.toString());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User(id=<span class=\"number\">1</span>, name=费尔南多, age=<span class=\"number\">25</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">2</span>, name=费尔南迪尼奥, age=<span class=\"number\">26</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"5）skip\"><a href=\"#5）skip\" class=\"headerlink\" title=\"5）skip\"></a>5）skip</h3><p>它的用法和limit正好相反，是去除前面几个元素。<br>假如我们要去除前面两个元素就可以使用下面的方法来实现：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserStreamSkip</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        List&lt;User&gt; resultList = userList.stream().skip(<span class=\"number\">2</span>).collect(Collectors.toList());</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (User user :  resultList)&#123;</span><br><span class=\"line\">            System.out.println(user.toString());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User(id=<span class=\"number\">3</span>, name=卡尔德克, age=<span class=\"number\">27</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">4</span>, name=阿德里安, age=<span class=\"number\">28</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">5</span>, name=隋维杰, age=<span class=\"number\">26</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">6</span>, name=克鲁伊夫, age=<span class=\"number\">43</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"6）组合使用\"><a href=\"#6）组合使用\" class=\"headerlink\" title=\"6）组合使用\"></a>6）组合使用</h3><p>以上的过滤函数物品们可以组合来使用来实现我们具体的需求，示例代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserStreamSortLimit</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">       List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">       List&lt;User&gt; resultList = userList.stream().sorted().limit(<span class=\"number\">5</span>).collect(Collectors.toList());</span><br><span class=\"line\">       <span class=\"keyword\">for</span> (User user :  resultList)&#123;</span><br><span class=\"line\">           System.out.println(user.toString());</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>这样我们就可以得到先排序后限制的结果：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User(id=<span class=\"number\">1</span>, name=费尔南多, age=<span class=\"number\">25</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">2</span>, name=费尔南迪尼奥, age=<span class=\"number\">26</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">5</span>, name=隋维杰, age=<span class=\"number\">26</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">3</span>, name=卡尔德克, age=<span class=\"number\">27</span>)</span><br><span class=\"line\">User(id=<span class=\"number\">4</span>, name=阿德里安, age=<span class=\"number\">28</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-2-映射\"><a href=\"#3-2-映射\" class=\"headerlink\" title=\"3.2 映射\"></a>3.2 映射</h2><h3 id=\"1）map-T-gt-R\"><a href=\"#1）map-T-gt-R\" class=\"headerlink\" title=\"1）map(T-&gt;R)\"></a>1）map(T-&gt;R)</h3><p>map是将T类型的数据转为R类型的数据，比如我们想要设置一个新的list，存储用户所有的城市信息。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserStreamMap</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        List&lt;Integer&gt; resultList = userList.stream().map(User::getAge).distinct().collect(Collectors.toList());</span><br><span class=\"line\">        System.out.println(resultList.toString());</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>这样我们可以得到所有年龄的样本，执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"number\">25</span>, <span class=\"number\">26</span>, <span class=\"number\">27</span>, <span class=\"number\">28</span>, <span class=\"number\">43</span>]</span><br></pre></td></tr></table></figure>\n<h3 id=\"2）flatMap-T-gt-Stream\"><a href=\"#2）flatMap-T-gt-Stream\" class=\"headerlink\" title=\"2）flatMap(T -&gt; Stream)\"></a>2）flatMap(T -&gt; Stream<R>)</h3><p>将流中的每一个元素 T 映射为一个流，再把每一个流连接成为一个流。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testStreamMap</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;String&gt; habitsList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        habitsList.add(<span class=\"string\">&quot;唱歌,听歌&quot;</span>);</span><br><span class=\"line\">        habitsList.add(<span class=\"string\">&quot;羽毛球,足球,登山&quot;</span>);</span><br><span class=\"line\">        habitsList = habitsList.stream().map(s -&gt; s.split(<span class=\"string\">&quot;,&quot;</span>)).flatMap(Arrays::stream).collect(Collectors.toList());</span><br><span class=\"line\">        System.out.println(habitsList);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[唱歌, 听歌, 羽毛球, 足球, 登山]</span><br></pre></td></tr></table></figure>\n<p>这里原集合中的数据由逗号分割，使用split进行拆分后，得到的是Stream&lt;String[]&gt;，字符串数组组成的流，要使用flatMap的<strong>Arrays::stream</strong>，将Stream&lt;String[]&gt;转为Stream<String>,然后把流相连接，组成了完整的唱歌, 听歌, 羽毛球, 足球, 登山。</p>\n<h2 id=\"3-3-查找\"><a href=\"#3-3-查找\" class=\"headerlink\" title=\"3.3 查找\"></a>3.3 查找</h2><h3 id=\"1）allMatch（T-gt-boolean）\"><a href=\"#1）allMatch（T-gt-boolean）\" class=\"headerlink\" title=\"1）allMatch（T-&gt;boolean）\"></a>1）allMatch（T-&gt;boolean）</h3><p>检测是否全部满足参数行为，假如我们要检测是不是所有队员都是U21的球员：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserStreamAllMatch</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> isNotU21 = userList.stream().allMatch(user -&gt; user.getAge() &gt;= <span class=\"number\">21</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;是否都不是U21球员：&quot;</span> + isNotU21);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">是否都不是U21球员：<span class=\"keyword\">true</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2）anyMatch（T-gt-boolean）\"><a href=\"#2）anyMatch（T-gt-boolean）\" class=\"headerlink\" title=\"2）anyMatch（T-&gt;boolean）\"></a>2）anyMatch（T-&gt;boolean）</h3><p>检测是否有任意元素满足给定的条件，比如，想知道是否有26岁的球员：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserStreamAnyMatch</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> isAgeU26 = userList.stream().anyMatch(user -&gt; user.getAge() == <span class=\"number\">26</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;是否有26岁的球员：&quot;</span> + isAgeU26);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">是否有<span class=\"number\">26</span>岁的球员：<span class=\"keyword\">true</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3）noneMatch-T-gt-boolean\"><a href=\"#3）noneMatch-T-gt-boolean\" class=\"headerlink\" title=\"3）noneMatch(T -&gt; boolean)\"></a>3）noneMatch(T -&gt; boolean)</h3><p>流中是否有元素匹配给定的 T -&gt; boolean 条件。比如我们要检测是否含有U18的队员：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserStreamNoneMatch</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">       List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">       <span class=\"keyword\">boolean</span> isNotU18 = userList.stream().noneMatch(user -&gt; user.getAge() &lt;= <span class=\"number\">18</span>);</span><br><span class=\"line\">       System.out.println(<span class=\"string\">&quot;是否都不是U18球员：&quot;</span> + isNotU18);</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">是否都不是U18球员：<span class=\"keyword\">true</span></span><br></pre></td></tr></table></figure>\n<p>说明没有U18的队员。</p>\n<h3 id=\"4）findFirst-找到第一个元素\"><a href=\"#4）findFirst-找到第一个元素\" class=\"headerlink\" title=\"4）findFirst( ):找到第一个元素\"></a>4）findFirst( ):找到第一个元素</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserFindFirst</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        Optional&lt;User&gt; firstUser = userList.stream().sorted().findFirst();</span><br><span class=\"line\">        System.out.println(firstUser.toString());</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Optional[User(id=<span class=\"number\">1</span>, name=费尔南多, age=<span class=\"number\">25</span>)]</span><br></pre></td></tr></table></figure>\n<h3 id=\"5）findAny-找到任意一个元素\"><a href=\"#5）findAny-找到任意一个元素\" class=\"headerlink\" title=\"5）findAny():找到任意一个元素\"></a>5）findAny():找到任意一个元素</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserFindAny</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        Optional&lt;User&gt; anytUser = userList.parallelStream().sorted().findAny();</span><br><span class=\"line\">        System.out.println(anytUser.toString());</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Optional[User(id=<span class=\"number\">2</span>, name=费尔南迪尼奥, age=<span class=\"number\">26</span>)]</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-4-归纳计算\"><a href=\"#3-4-归纳计算\" class=\"headerlink\" title=\"3.4 归纳计算\"></a>3.4 归纳计算</h2><h3 id=\"1）求队员的总人数\"><a href=\"#1）求队员的总人数\" class=\"headerlink\" title=\"1）求队员的总人数\"></a>1）求队员的总人数</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserCount</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        <span class=\"keyword\">long</span> totalAge = userList.stream().collect(Collectors.counting());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;队员人数为：&quot;</span> + totalAge);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">队员人数为：<span class=\"number\">6</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2）得到某一属性的最大最小值\"><a href=\"#2）得到某一属性的最大最小值\" class=\"headerlink\" title=\"2）得到某一属性的最大最小值\"></a>2）得到某一属性的最大最小值</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserMaxAndMin</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        Optional&lt;User&gt; userMaxAge = userList.stream().collect(Collectors.maxBy(Comparator.comparing(User::getAge)));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;年龄最大的队员为：&quot;</span> + userMaxAge.toString());</span><br><span class=\"line\"></span><br><span class=\"line\">        Optional&lt;User&gt; userMinAge = userList.stream().collect(Collectors.minBy(Comparator.comparing(User::getAge)));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;年龄最小的队员为：&quot;</span> + userMinAge.toString());</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">年龄最大的队员为：Optional[User(id=<span class=\"number\">6</span>, name=克鲁伊夫, age=<span class=\"number\">43</span>)]</span><br><span class=\"line\">年龄最小的队员为：Optional[User(id=<span class=\"number\">1</span>, name=费尔南多, age=<span class=\"number\">25</span>)]</span><br></pre></td></tr></table></figure>\n<h3 id=\"3）求年龄总和是多少\"><a href=\"#3）求年龄总和是多少\" class=\"headerlink\" title=\"3）求年龄总和是多少\"></a>3）求年龄总和是多少</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserSummingInt</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> totalAge = userList.stream().collect(Collectors.summingInt(User::getAge));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;年龄总和为：&quot;</span> + totalAge);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">年龄总和为：<span class=\"number\">175</span></span><br></pre></td></tr></table></figure>\n<p>我们经常会用BigDecimal来记录金钱，假设想得到BigDecimal的总和：<br>// 获得列表对象金额， 使用reduce聚合函数,实现累加器<br>BigDecimal sum = myList.stream() .map(User::getMoney)<br>.reduce(BigDecimal.ZERO,BigDecimal::add);</p>\n<h3 id=\"4）求年龄平均值\"><a href=\"#4）求年龄平均值\" class=\"headerlink\" title=\"4）求年龄平均值\"></a>4）求年龄平均值</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserAveragingInt</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        Double totalAge = userList.stream().collect(Collectors.averagingInt(User::getAge));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;平均年龄为：&quot;</span> + totalAge);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">平均年龄为：<span class=\"number\">29.166666666666668</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"5）一次性得到元素的个数、总和、最大值、最小值\"><a href=\"#5）一次性得到元素的个数、总和、最大值、最小值\" class=\"headerlink\" title=\"5）一次性得到元素的个数、总和、最大值、最小值\"></a>5）一次性得到元素的个数、总和、最大值、最小值</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserSummarizingInt</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        IntSummaryStatistics  statistics  = userList.stream().collect(Collectors.summarizingInt(User::getAge));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;年龄的统计结果为：&quot;</span> + statistics );</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">年龄的统计结果为：IntSummaryStatistics&#123;count=<span class=\"number\">6</span>, sum=<span class=\"number\">175</span>, min=<span class=\"number\">25</span>, average=<span class=\"number\">29.166667</span>, max=<span class=\"number\">43</span>&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"6）字符串拼接\"><a href=\"#6）字符串拼接\" class=\"headerlink\" title=\"6）字符串拼接\"></a>6）字符串拼接</h3><p>要将队员的姓名连成一个字符串并用逗号分割。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserJoining</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        String  name  = userList.stream().map(User::getName).collect(Collectors.joining(<span class=\"string\">&quot;,&quot;</span>));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;所有的队员名字：&quot;</span> + name );</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">所有的队员名字：费尔南多,费尔南迪尼奥,卡尔德克,阿德里安,隋维杰,克鲁伊夫</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-5-分组\"><a href=\"#3-5-分组\" class=\"headerlink\" title=\"3.5 分组\"></a>3.5 分组</h2><p>在数据库操作中，我们经常通过GROUP BY关键字对查询到的数据进行分组，java8的流式处理也提供了分组的功能。使用Collectors.groupingBy来进行分组。</p>\n<h3 id=\"1）可以根据队员的年龄进行分组\"><a href=\"#1）可以根据队员的年龄进行分组\" class=\"headerlink\" title=\"1）可以根据队员的年龄进行分组\"></a>1）可以根据队员的年龄进行分组</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserGroupingBy</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">       List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">       Map&lt;Integer, List&lt;User&gt;&gt; ageMap  = userList.stream().collect(Collectors.groupingBy(User::getAge));</span><br><span class=\"line\">       <span class=\"keyword\">for</span> (Map.Entry&lt;Integer,List&lt;User&gt;&gt; entry :ageMap.entrySet())&#123;</span><br><span class=\"line\">           System.out.println(<span class=\"string\">&quot;key= &quot;</span> + entry.getKey() + <span class=\"string\">&quot; and value= &quot;</span> + entry.getValue());</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">key= <span class=\"number\">25</span> and value= [User(id=<span class=\"number\">1</span>, name=费尔南多, age=<span class=\"number\">25</span>)]</span><br><span class=\"line\">key= <span class=\"number\">26</span> and value= [User(id=<span class=\"number\">2</span>, name=费尔南迪尼奥, age=<span class=\"number\">26</span>), User(id=<span class=\"number\">5</span>, name=隋维杰, age=<span class=\"number\">26</span>)]</span><br><span class=\"line\">key= <span class=\"number\">43</span> and value= [User(id=<span class=\"number\">6</span>, name=克鲁伊夫, age=<span class=\"number\">43</span>)]</span><br><span class=\"line\">key= <span class=\"number\">27</span> and value= [User(id=<span class=\"number\">3</span>, name=卡尔德克, age=<span class=\"number\">27</span>)]</span><br><span class=\"line\">key= <span class=\"number\">28</span> and value= [User(id=<span class=\"number\">4</span>, name=阿德里安, age=<span class=\"number\">28</span>)]</span><br></pre></td></tr></table></figure>\n<p>结果是一个map，key为不重复的年龄，value为属于该年龄的队员列表。已经实现了分组。另外我们还可以继续分组得到两次分组的结果。</p>\n<h3 id=\"2）如果仅仅想统计各年龄的队员个数是多少，并不需要对应的list\"><a href=\"#2）如果仅仅想统计各年龄的队员个数是多少，并不需要对应的list\" class=\"headerlink\" title=\"2）如果仅仅想统计各年龄的队员个数是多少，并不需要对应的list\"></a>2）如果仅仅想统计各年龄的队员个数是多少，并不需要对应的list</h3><p>按年龄分组并统计人数：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserGroupingByCount</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        Map&lt;Integer,Long&gt; ageMap  = userList.stream().collect(Collectors.groupingBy(User::getAge,Collectors.counting()));</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Map.Entry&lt;Integer,Long&gt; entry :ageMap.entrySet())&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;队员中&quot;</span> + entry.getKey() + <span class=\"string\">&quot;岁的队员人数为：&quot;</span> + entry.getValue());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">队员中<span class=\"number\">25</span>岁的队员人数为：<span class=\"number\">1</span></span><br><span class=\"line\">队员中<span class=\"number\">26</span>岁的队员人数为：<span class=\"number\">2</span></span><br><span class=\"line\">队员中<span class=\"number\">43</span>岁的队员人数为：<span class=\"number\">1</span></span><br><span class=\"line\">队员中<span class=\"number\">27</span>岁的队员人数为：<span class=\"number\">1</span></span><br><span class=\"line\">队员中<span class=\"number\">28</span>岁的队员人数为：<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3）partitioningBy-分区\"><a href=\"#3）partitioningBy-分区\" class=\"headerlink\" title=\"3）partitioningBy 分区\"></a>3）partitioningBy 分区</h3><p>分区与分组的区别在于，分区是按照 true 和 false 来分的，因此partitioningBy 接受的参数的 lambda 也是 T -&gt; boolean</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserPartitioningBy</span> <span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.getALL();</span><br><span class=\"line\">        Map&lt;Boolean,List&lt;User&gt;&gt; partitioningByMap  = userList.stream().collect(partitioningBy(user -&gt; user.getAge() &gt;= <span class=\"number\">30</span>));</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Map.Entry&lt;Boolean,List&lt;User&gt;&gt; entry :partitioningByMap.entrySet())&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;key= &quot;</span> + entry.getKey() + <span class=\"string\">&quot; and value= &quot;</span> + entry.getValue());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">key= <span class=\"keyword\">false</span> and value= [User(id=<span class=\"number\">1</span>, name=费尔南多, age=<span class=\"number\">25</span>), User(id=<span class=\"number\">2</span>, name=费尔南迪尼奥, age=<span class=\"number\">26</span>), User(id=<span class=\"number\">3</span>, name=卡尔德克, age=<span class=\"number\">27</span>), User(id=<span class=\"number\">4</span>, name=阿德里安, age=<span class=\"number\">28</span>), User(id=<span class=\"number\">5</span>, name=隋维杰, age=<span class=\"number\">26</span>)]</span><br><span class=\"line\">key= <span class=\"keyword\">true</span> and value= [User(id=<span class=\"number\">6</span>, name=克鲁伊夫, age=<span class=\"number\">43</span>)]</span><br></pre></td></tr></table></figure>\n<hr>\n<p>【<strong>写在后面的话</strong>】留下stream的类实现的方法和依赖图，前面的实践也只是挑选了几个比较常用的Api。</p>\n<p><img src=\"https://eelve.com/upload/2019/7/stream-d2e3fe9045e945ce9411d8db6043b32c.png\" alt=\"stream\"></p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"SpringBoot配置web访问H2本地版","slug":"SpringBoot配置web访问H2本地版","date":"2019-08-09T09:13:41.000Z","updated":"2021-04-19T07:47:19.537Z","comments":true,"path":"api/articles/SpringBoot配置web访问H2本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2019/6/h2databasecollection-bffb24f29c9947b8871454427c88a9a3.png","content":"<p>【<strong>前情提要</strong>】最近开始搭建博客，在本地调试的时候使用的数据库是h2，但是调试的时候需要查看数据库，本文也由此而来。</p>\n<hr>\n<p>下面是我用到的方法：</p>\n<ol>\n<li>使用IDEA的Database连接工具，具体操作方法就是按照要求配置连接url，用户名和密码即可。具体操作见下图：<br><img src=\"https://eelve.com/upload/2019/6/h2databasecollection-bffb24f29c9947b8871454427c88a9a3.png\" alt=\"h2ideadatabase配置\"><br>查询结果：<br><img src=\"https://eelve.com/upload/2019/6/h2databaseselect-5f10495470e446f98af7b8aff0228ef2.png\" alt=\"h2ideadatabase查询结果\"><br>但是但是这个时候启动<strong>项目会报错</strong>：<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">org.h2.jdbc.JdbcSQLException: Database may be already in use: null. Possible solutions: close all other connection(s); use the server mode [90020-197]</span><br><span class=\"line\">\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:357) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.message.DbException.get(DbException.java:168) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.mvstore.db.MVTableEngine$Store.convertIllegalStateException(MVTableEngine.java:188) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:168) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:100) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.Database.getPageStore(Database.java:2538) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.Database.open(Database.java:709) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.Database.openDatabase(Database.java:286) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.Database.&lt;init&gt;(Database.java:280) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.Engine.openSession(Engine.java:66) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.Engine.openSession(Engine.java:179) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.Engine.createSessionAndValidate(Engine.java:157) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.Engine.createSession(Engine.java:140) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.Engine.createSession(Engine.java:28) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:351) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.jdbc.JdbcConnection.&lt;init&gt;(JdbcConnection.java:124) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.jdbc.JdbcConnection.&lt;init&gt;(JdbcConnection.java:103) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.Driver.connect(Driver.java:69) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136) ~[HikariCP-3.2.0.jar:na]</span><br><span class=\"line\">\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369) ~[HikariCP-3.2.0.jar:na]</span><br><span class=\"line\">\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198) ~[HikariCP-3.2.0.jar:na]</span><br><span class=\"line\">\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467) [HikariCP-3.2.0.jar:na]</span><br><span class=\"line\">\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541) [HikariCP-3.2.0.jar:na]</span><br><span class=\"line\">\tat com.zaxxer.hikari.pool.HikariPool.&lt;init&gt;(HikariPool.java:115) [HikariCP-3.2.0.jar:na]</span><br><span class=\"line\">\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) [HikariCP-3.2.0.jar:na]</span><br><span class=\"line\">\tat org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157) [spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) [spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78) [spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319) [spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356) [spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73) [spring-boot-autoconfigure-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142) [spring-boot-autoconfigure-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113) [spring-boot-autoconfigure-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$4bb137a5.CGLIB$jpaVendorAdapter$6(&lt;generated&gt;) [spring-boot-autoconfigure-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$4bb137a5$$FastClassBySpringCGLIB$$824457c4.invoke(&lt;generated&gt;) [spring-boot-autoconfigure-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) [spring-core-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) [spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$4bb137a5.jpaVendorAdapter(&lt;generated&gt;) [spring-boot-autoconfigure-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_161]</span><br><span class=\"line\">\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_161]</span><br><span class=\"line\">\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]</span><br><span class=\"line\">\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:218) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1325) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1171) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204) [spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:226) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:101) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.&lt;init&gt;(ServletContextInitializerBeans.java:88) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory$Initializer.onStartup(UndertowServletWebServerFactory.java:616) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat io.undertow.servlet.core.DeploymentManagerImpl$1.call(DeploymentManagerImpl.java:203) ~[undertow-servlet-2.0.17.Final.jar:2.0.17.Final]</span><br><span class=\"line\">\tat io.undertow.servlet.core.DeploymentManagerImpl$1.call(DeploymentManagerImpl.java:185) ~[undertow-servlet-2.0.17.Final.jar:2.0.17.Final]</span><br><span class=\"line\">\tat io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:42) ~[undertow-servlet-2.0.17.Final.jar:2.0.17.Final]</span><br><span class=\"line\">\tat io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43) ~[undertow-servlet-2.0.17.Final.jar:2.0.17.Final]</span><br><span class=\"line\">\tat io.undertow.servlet.core.DeploymentManagerImpl.deploy(DeploymentManagerImpl.java:250) ~[undertow-servlet-2.0.17.Final.jar:2.0.17.Final]</span><br><span class=\"line\">\tat org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory.createDeploymentManager(UndertowServletWebServerFactory.java:284) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory.getWebServer(UndertowServletWebServerFactory.java:208) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">\tat run.halo.app.Application.main(Application.java:31) ~[classes/:na]</span><br><span class=\"line\">\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_161]</span><br><span class=\"line\">\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_161]</span><br><span class=\"line\">\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]</span><br><span class=\"line\">\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]</span><br><span class=\"line\">\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) ~[spring-boot-devtools-2.1.3.RELEASE.jar:2.1.3.RELEASE]</span><br><span class=\"line\">Caused by: java.lang.IllegalStateException: The file is locked: nio:C:/Users/Chirius/.halo/db/halo.mv.db [1.4.197/7]</span><br><span class=\"line\">\tat org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:870) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.mvstore.FileStore.open(FileStore.java:173) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.mvstore.MVStore.&lt;init&gt;(MVStore.java:350) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.mvstore.MVStore$Builder.open(MVStore.java:2934) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\tat org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:155) ~[h2-1.4.197.jar:1.4.197]</span><br><span class=\"line\">\t... 152 common frames omitted</span><br></pre></td></tr></table></figure>\n所以笔主在这里不推荐这种方法，因为会占用h2数据库连接，用了这种数据库连接就不能启动项目，反之亦然。</li>\n</ol>\n<hr>\n<ol start=\"2\">\n<li>使用H2 Console进行查看，由于项目是SpringBoot的，所以在这里只需要修改相应配置即可，由<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h2:</span><br><span class=\"line\">    console:</span><br><span class=\"line\">      settings:</span><br><span class=\"line\">        web-allow-others: false</span><br><span class=\"line\">      path: &#x2F;h2-console</span><br><span class=\"line\">      enabled: false</span><br></pre></td></tr></table></figure>\n改为<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h2:</span><br><span class=\"line\">    console:</span><br><span class=\"line\">      settings:</span><br><span class=\"line\">        web-allow-others: false</span><br><span class=\"line\">      path: &#x2F;h2-console</span><br><span class=\"line\">      enabled: false</span><br></pre></td></tr></table></figure>\n即可，启动项目，然后在项目访问路径后面加上配置的path**/h2-console**就可以查看具体结果了：<br><img src=\"https://eelve.com/upload/2019/6/12344-e3c905ae1b794528af9706227afa9b38.png\" alt=\"通过H2 Console查看的结果\"></li>\n</ol>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]}]}