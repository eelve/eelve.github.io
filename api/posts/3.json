{"total":77,"pageSize":10,"pageCount":8,"data":[{"title":"WSL初体验","slug":"WSL初体验","date":"2020-04-11T05:29:55.000Z","updated":"2021-04-19T06:44:39.166Z","comments":true,"path":"api/articles/WSL初体验.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/2020041102-b3495d5d24fa4514b2e5293ded3cd61e.png","content":"<p>【<strong>前面的话</strong>】WSL是Windows Subsystem for Linux的缩写，今天就来体验一把。</p>\n<hr>\n<h1 id=\"壹、安装WSL\"><a href=\"#壹、安装WSL\" class=\"headerlink\" title=\"壹、安装WSL\"></a>壹、安装WSL</h1><h2 id=\"1-1-启用或关闭Windows功能\"><a href=\"#1-1-启用或关闭Windows功能\" class=\"headerlink\" title=\"1.1 启用或关闭Windows功能\"></a>1.1 启用或关闭Windows功能</h2><p>在搜索栏中搜索并打开“启用或关闭Windows功能”，勾选“适用于Linux的Windows子系统”项。只有开启这项设置才能正常安装WSL。然后按照提示稍后重启。</p>\n<h2 id=\"1-2-安装子系统\"><a href=\"#1-2-安装子系统\" class=\"headerlink\" title=\"1.2 安装子系统\"></a>1.2 安装子系统</h2><p>在微软应用商店搜索 Linux，可以看到一系列 Linux 发行版，根据自己需要选择适合自己的发行版，这里我选用 Ubuntu 18.04 LTS。等待下载完成后启动 Ubuntu 18.04 LTS，等待安装完成，输入账户和密码，我们便得到了一个 Linux 环境了。</p>\n<p><img src=\"https://image.eelve.com/eblog/2020041102-b3495d5d24fa4514b2e5293ded3cd61e.png\" alt=\"2020041102\"></p>\n<h1 id=\"贰、使用技巧\"><a href=\"#贰、使用技巧\" class=\"headerlink\" title=\"贰、使用技巧\"></a>贰、使用技巧</h1><h2 id=\"2-1使用其他命令行工具\"><a href=\"#2-1使用其他命令行工具\" class=\"headerlink\" title=\"2.1使用其他命令行工具\"></a>2.1使用其他命令行工具</h2><p>为什么不推荐自带的命令行呢？因为不支撑复制，这样你就只用手敲各种命令了。这里我推荐Windows Terminal，然后在Windows Terminal中键入<code>WSL</code>,就可以进入命令行了或者直接选择<code>Ubuntu 18.04</code>。</p>\n<p><img src=\"https://image.eelve.com/eblog/2020041104-617b46212475414ba2a4fd754bb395a8.png\" alt=\"2020041104\"><br><img src=\"https://image.eelve.com/eblog/2020041103-dd423936b8d348039cac18e3dd41db08.png\" alt=\"2020041103\"></p>\n<h2 id=\"2-2-更改源\"><a href=\"#2-2-更改源\" class=\"headerlink\" title=\"2.2 更改源\"></a>2.2 更改源</h2><p>Ubuntu 默认的 apt 源是国外的源，实在是太慢了，这里换成阿里云的源。</p>\n<h3 id=\"2-2-1-首先复制源文件备份，便于以后恢复\"><a href=\"#2-2-1-首先复制源文件备份，便于以后恢复\" class=\"headerlink\" title=\"2.2.1 首先复制源文件备份，便于以后恢复\"></a>2.2.1 首先复制源文件备份，便于以后恢复</h3><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-2-查看版本信息\"><a href=\"#2-2-2-查看版本信息\" class=\"headerlink\" title=\"2.2.2 查看版本信息\"></a>2.2.2 查看版本信息</h3><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cc@Chirius:/mnt/c/Users/Chirius$ lsb_release -c</span><br><span class=\"line\">Codename:       bionic</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-3-编辑源文件\"><a href=\"#2-2-3-编辑源文件\" class=\"headerlink\" title=\"2.2.3 编辑源文件\"></a>2.2.3 编辑源文件</h3><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cc@Chirius:/mnt/c/Users/Chirius$ sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-4-根据-Ubuntu-版本号，添加相应内容：\"><a href=\"#2-2-4-根据-Ubuntu-版本号，添加相应内容：\" class=\"headerlink\" title=\"2.2.4 根据 Ubuntu 版本号，添加相应内容：\"></a>2.2.4 根据 Ubuntu 版本号，添加相应内容：</h3><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure>\n<p>然后保存退出</p>\n<h3 id=\"2-2-5-升级系统\"><a href=\"#2-2-5-升级系统\" class=\"headerlink\" title=\"2.2.5 升级系统\"></a>2.2.5 升级系统</h3><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cc@Chirius:/mnt/c/Users/Chirius$ sudo apt-get update</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cc@Chirius:/mnt/c/Users/Chirius$ sudo apt-get upgrade</span><br></pre></td></tr></table></figure>\n<h1 id=\"叁、WSL-文件位置\"><a href=\"#叁、WSL-文件位置\" class=\"headerlink\" title=\"叁、WSL 文件位置\"></a>叁、WSL 文件位置</h1><p>如果想在 Linux 查看其他分区，WSL 将其它盘符挂载在 /mnt 下。</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cc@Chirius:/$ cd mnt</span><br><span class=\"line\">cc@Chirius:/mnt$ ls</span><br><span class=\"line\">c  d</span><br><span class=\"line\">cc@Chirius:/mnt$ pwd</span><br><span class=\"line\">/mnt</span><br></pre></td></tr></table></figure>\n<p>如果想在 Windows 下查看 WSL 文件位置，文件位置在：C:\\Users\\用户名\\AppData\\Local\\Packages\\CanonicalGroupLimited.Ubuntu18.04onWindows_79rhkp1fndgsc\\LocalState\\rootfs 下。</p>\n<p>我们还可以在资源管理器中键入<code>\\\\wsl$</code></p>\n<p><img src=\"https://image.eelve.com/eblog/2020041105-c34cdd30c9b24c6e879114f45880091b.png\" alt=\"2020041105\"></p>\n<p>然后我们还可以添加网络位置</p>\n<p><img src=\"https://image.eelve.com/eblog/2020041106-564ce889eb8843fe8687d63a2f81fece.png\" alt=\"2020041106\"></p>\n<h1 id=\"肆、添加root密码\"><a href=\"#肆、添加root密码\" class=\"headerlink\" title=\"肆、添加root密码\"></a>肆、添加root密码</h1><p>由于默认进入子系统之后是你添加的用户，当你需要root权限是可以通过<code>sudo</code>加上相应的命令解决。那还有另外一种方法：设置一个root用户的密码，然后切换到root用户去执行相应的命令。下面就说一下在子系统中设置root用户密码：</p>\n<p>首先需要Windows管理员身份运行<code>cmd</code>或者<code>PowerShell</code>，然后执行下面命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows PowerShell</span><br><span class=\"line\">版权所有 (C) Microsoft Corporation。保留所有权利。</span><br><span class=\"line\"></span><br><span class=\"line\">尝试新的跨平台 PowerShell https://aka.ms/pscore6</span><br><span class=\"line\"></span><br><span class=\"line\">PS C:\\Users\\Chirius&gt; wsl</span><br><span class=\"line\">cc@Chirius:/mnt/c/Users/Chirius$ sudo passwd root</span><br><span class=\"line\">[sudo] password <span class=\"keyword\">for</span> cc:</span><br><span class=\"line\">Enter new UNIX password:</span><br><span class=\"line\">Retype new UNIX password:</span><br><span class=\"line\">passwd: password updated successfully</span><br><span class=\"line\">cc@Chirius:/mnt/c/Users/Chirius$ su root</span><br><span class=\"line\">Password:</span><br><span class=\"line\">root@Chirius:/mnt/c/Users/Chirius<span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n<p>我们可以看到就已经可以切换到root用户了。</p>\n<p>【<strong>后面的话</strong>】在Windows2004版本中会发布WSL2，后面再来继续体验。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"WSL","path":"api/categories/WSL.json"}],"tags":[{"name":"WSL，Windows","path":"api/tags/WSL，Windows.json"}]},{"title":"Hyper-V和IDEA运行端口占用问题","slug":"Hyper-V和IDEA运行端口占用问题","date":"2020-04-11T04:56:30.000Z","updated":"2021-04-19T06:44:39.035Z","comments":true,"path":"api/articles/Hyper-V和IDEA运行端口占用问题.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/2020041101-3b9aed15aec84b7e9a0bd3d122c54170.png","content":"<p>【<strong>前面的话</strong>】因为安装Windows版本的Docker环境，开启了Hyper-V。其结果是导致了IDEA在运行Tomcat的时候提示1099端口占用，经过探索之后成功找到了解决方案。</p>\n<h1 id=\"壹、原因分析\"><a href=\"#壹、原因分析\" class=\"headerlink\" title=\"壹、原因分析\"></a>壹、原因分析</h1><p>首先我们可以查看一下我们系统默认的端口占用范围；</p>\n<blockquote>\n<p>netsh int ipv4 show dynamicport tcp</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Microsoft Windows [版本 10.0.18363.752]</span><br><span class=\"line\">(c) 2019 Microsoft Corporation。保留所有权利。</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\Chirius&gt;netsh int ipv4 show dynamicport tcp</span><br><span class=\"line\"></span><br><span class=\"line\">协议 tcp 动态端口范围</span><br><span class=\"line\">---------------------------------</span><br><span class=\"line\">启动端口        : 1024</span><br><span class=\"line\">端口数          : 13977</span><br></pre></td></tr></table></figure>\n<p>我们可以看到Windows系统默认的tcp 动态端口范围为：1024~13977。当我们开启Hyper-V后，系统默认会分配给一些保留端口供Hyper-V使用：</p>\n<blockquote>\n<p>netsh interface ipv4 show excludedportrange protocol=tcp</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\Chirius&gt;netsh interface ipv4 show excludedportrange protocol=tcp</span><br><span class=\"line\">协议 tcp 端口排除范围</span><br><span class=\"line\"> </span><br><span class=\"line\">开始端口    结束端口</span><br><span class=\"line\">----------    --------</span><br><span class=\"line\">      1026        1125</span><br><span class=\"line\">      1226        1325</span><br><span class=\"line\">      1326        1425</span><br><span class=\"line\">      1426        1525</span><br><span class=\"line\">      1526        1625</span><br><span class=\"line\">      2180        2279</span><br></pre></td></tr></table></figure>\n<p>我们可以看到IDEA运行Tomcat需要JMX的<strong>1099</strong>端口刚好在端口排除范围中，这样就导致了IDEA需要使用1099端口是会被占用，这样你当然就不能运行了。</p>\n<h1 id=\"贰、解决方法\"><a href=\"#贰、解决方法\" class=\"headerlink\" title=\"贰、解决方法\"></a>贰、解决方法</h1><p>使用管理员身份运行cmd，重置端口，然后重启</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\Chirius&gt;netsh winsock reset</span><br></pre></td></tr></table></figure>\n<p>这样你的tcp端口排除范围可能刚好不包含<strong>1099</strong>端口，这样你当然就可以用你的IDEA运行Tomcat应用了。但是你啥时候会出现就不得而知了。</p>\n<h1 id=\"叁、终极解决\"><a href=\"#叁、终极解决\" class=\"headerlink\" title=\"叁、终极解决\"></a>叁、终极解决</h1><h2 id=\"3-1-关闭Hyper-V\"><a href=\"#3-1-关闭Hyper-V\" class=\"headerlink\" title=\"3.1 关闭Hyper-V\"></a>3.1 关闭Hyper-V</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Microsoft Windows [版本 10.0.18363.752]</span><br><span class=\"line\">(c) 2019 Microsoft Corporation。保留所有权利。</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\WINDOWS\\system32&gt;dism.exe /Online /Disable-Feature:Microsoft-Hyper-V</span><br></pre></td></tr></table></figure>\n<p>或者采用传统方式，在控制面板的“程序和功能”中，找到“Windows功能”，取消Hyper-V的勾选。这两种方法都会要求重启。</p>\n<h2 id=\"3-2-修改动态端口范围\"><a href=\"#3-2-修改动态端口范围\" class=\"headerlink\" title=\"3.2 修改动态端口范围\"></a>3.2 修改动态端口范围</h2><p>使用管理员身份运行cmd</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\WINDOWS\\system32&gt;netsh int ipv4 <span class=\"built_in\">set</span> dynamicport tcp start=49152 num=16383</span><br><span class=\"line\">确定。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">C:\\WINDOWS\\system32&gt;netsh int ipv4 <span class=\"built_in\">set</span> dynamicport udp start=49152 num=16383</span><br><span class=\"line\">确定。</span><br></pre></td></tr></table></figure>\n<p>然后检查结果</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\Chirius&gt;netsh int ipv4 show dynamicport tcp</span><br><span class=\"line\"></span><br><span class=\"line\">协议 tcp 动态端口范围</span><br><span class=\"line\">---------------------------------</span><br><span class=\"line\">启动端口        : 49152</span><br><span class=\"line\">端口数          : 16383</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Microsoft Windows [版本 10.0.18363.752]</span><br><span class=\"line\">(c) 2019 Microsoft Corporation。保留所有权利。</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\Chirius&gt;netsh interface ipv4 show excludedportrange protocol=tcp</span><br><span class=\"line\"></span><br><span class=\"line\">协议 tcp 端口排除范围</span><br><span class=\"line\"></span><br><span class=\"line\">开始端口    结束端口</span><br><span class=\"line\">----------    --------</span><br><span class=\"line\">      5357        5357</span><br><span class=\"line\">     49702       49801</span><br><span class=\"line\">     49802       49901</span><br><span class=\"line\">     49902       50001</span><br><span class=\"line\">     50051       50051     *</span><br><span class=\"line\">     50052       50151</span><br><span class=\"line\">     50152       50251</span><br><span class=\"line\">     50252       50351</span><br><span class=\"line\">     50352       50451</span><br><span class=\"line\">     50465       50564</span><br><span class=\"line\">     50911       51010</span><br><span class=\"line\"></span><br><span class=\"line\">* - 管理的端口排除。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\Chirius&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-3-开启Hyper-V\"><a href=\"#3-3-开启Hyper-V\" class=\"headerlink\" title=\"3.3 开启Hyper-V\"></a>3.3 开启Hyper-V</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\WINDOWS\\system32&gt;dism.exe /Online /Enable-Feature:Microsoft-Hyper-V /All</span><br><span class=\"line\"></span><br><span class=\"line\">部署映像服务和管理工具</span><br><span class=\"line\">版本: 10.0.18362.1</span><br><span class=\"line\"></span><br><span class=\"line\">映像版本: 10.0.18363.752</span><br><span class=\"line\"></span><br><span class=\"line\">启用一个或多个功能</span><br><span class=\"line\">[==========================100.0%==========================]</span><br><span class=\"line\">操作成功完成。</span><br><span class=\"line\">重新启动 Windows 以完成该操作。</span><br><span class=\"line\">是否立即重新启动计算机? (Y/N)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://image.eelve.com/eblog/2020041101-3b9aed15aec84b7e9a0bd3d122c54170.png\" alt=\"开启Hyper-V\"></p>\n<p>或者采用传统方式，在控制面板的“程序和功能”中，找到“Windows功能”，取消Hyper-V的勾选。这两种方法都会要求重启。</p>\n<p>【<strong>后面的话</strong>】使用终极解决方案解决之后，你会发现你的IDEA又可以正常运行了。另外这里说一个单独排除端口的命令，后面可能会用到：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netsh int ipv4 add excludedportrange protocol=tcp startport=50051 numberofports=1</span><br></pre></td></tr></table></figure>\n<p>使用上面的命令之后我们就可以单独排除某个端口了，保障改端口不会被其他应用占用。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"Hyper-V","path":"api/categories/Hyper-V.json"}],"tags":[{"name":"yper-V","path":"api/tags/yper-V.json"},{"name":"IDEA","path":"api/tags/IDEA.json"}]},{"title":"Hexo拯救计划","slug":"Hexo拯救计划","date":"2020-04-06T06:37:42.000Z","updated":"2021-04-19T06:44:39.033Z","comments":true,"path":"api/articles/Hexo拯救计划.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png","content":"<p>【<strong>前面的话</strong>】就在上个月底，Github遭受了中间人攻击，导致Github Pages的证书被篡改失效，而基于此的一众利用Github Pages生成博客全部都不能访问。鉴于“不能把鸡蛋放在同一个篮子里”的优秀理念，我决定给我的博客找一个新家。</p>\n<h1 id=\"壹、第三方博客\"><a href=\"#壹、第三方博客\" class=\"headerlink\" title=\"壹、第三方博客\"></a>壹、第三方博客</h1><p>本人在有<a href=\"https://zzlve.win/\">Github Pages生成的博客</a>之外，我还有拥有<a href=\"https://eelve.com/\">Halo搭建的博客</a>。<a href=\"https://halo.run/\">Halo</a>一个优秀的开源博客发布应用。</p>\n<h1 id=\"贰、CloudFlare\"><a href=\"#贰、CloudFlare\" class=\"headerlink\" title=\"贰、CloudFlare\"></a>贰、CloudFlare</h1><p>我们可以利用CloudFlare，在Hexo外层套一层证书，进而不使用Github Pages的证书，来避免这个问题。目前我的博客就是使用的CloudFlare，其访问速度和Gihub Pages的Fastly Anycast节点速度差不多，都是比较慢。</p>\n<h1 id=\"叁、Gitee-Coding-GitLab\"><a href=\"#叁、Gitee-Coding-GitLab\" class=\"headerlink\" title=\"叁、Gitee/Coding/GitLab\"></a>叁、Gitee/Coding/GitLab</h1><p>我们也可以使用其他托管平台提供的服务，主要就是你需要将你的源程序上传到对应的平台然后在上面发布，下面说一下优缺点：</p>\n<ul>\n<li><a href=\"https://eelve.gitee.io/\">Gitee</a><ul>\n<li>优点：<ul>\n<li>1.支持HTTPS</li>\n<li>2.上海腾讯云节点</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>自定义域名需要付费套餐（且域名需要备案）  </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Coding<ul>\n<li>优点：<ul>\n<li>1.可自定义域名</li>\n<li>2.支持HTTPS</li>\n<li>3.全球腾讯云新加坡CN2</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>1.不稳定</li>\n<li>2.不能被百度爬虫收录</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>GitLab<ul>\n<li>优点：<ul>\n<li>1.可自定义域名，自定义证书</li>\n<li>2.支持HTTPS，一键SSL配置</li>\n<li>3.GitLab-CI集成</li>\n<li>4.Fastly Anycast节点</li>\n<li>5.与GitHub功能上差不多，自带的GitLab-Ci持续部署能有效地提高效率。</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>1.国内访问速度与GitHub相似</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"肆、Netlify\"><a href=\"#肆、Netlify\" class=\"headerlink\" title=\"肆、Netlify\"></a>肆、Netlify</h1><p>主要特点：</p>\n<ul>\n<li>1.可自定义域名</li>\n<li>2.支持HTTPS HTTP/2 IPv6</li>\n<li>3.自定义页面重定向，静态资源优化</li>\n<li>4.DigitalOcean 美国纽约&amp;新加坡节点</li>\n</ul>\n<p>另外Netlify提供的服务应该算是最多的。自定义插入代码、打包和压缩js/css、压缩，处理图片、自动部署、提供Webhooks与API等功能。</p>\n<p>我自己的实现：<a href=\"https://eelve.netlify.com/\">南国薏米</a>。在我本地提交代码之后会自动触发，重新解析从而可以达到博客同步更新，在这一点上是和Github Pages更新是一样的。</p>\n<h1 id=\"伍、ZEIT\"><a href=\"#伍、ZEIT\" class=\"headerlink\" title=\"伍、ZEIT\"></a>伍、ZEIT</h1><p>主要特点：</p>\n<ul>\n<li>1.可自定义域名，自定义证书（付费）</li>\n<li>2.支持HTTPS</li>\n<li>3.提供ServerLess服务</li>\n<li>4.GCP&amp;AWS节点</li>\n<li>5.国内电信联通走台湾（电信有些地区35段绕美国），移动走美国</li>\n</ul>\n<p>另外大陆速度不错，可使用 now.sh CLI或GitHub，GitLab，Bitbucket导入项目进行自动代码部署，提供ServerLess，会地总分配的*.now.sh域名，但免费额度的流量有点少，限量20G。</p>\n<p>我自己的实现：<a href=\"https://eelve-github-io.now.sh/\">南国薏米</a>。在我本地提交代码之后会自动触发，重新解析从而可以达到博客同步更新，在这一点上是和Github Pages更新是一样的。说实话我们完全可以将博客迁移，并且你之前开发Hexo的不走完全没有改变。另外你的Hexo是采用多分支管理：博客分支和源代码分支。如果你的源代码分支中包含主题子仓库的话，发布之后ZEIT是不能正常解析的，会丢失样式。如果为了解决我们可以配置ZEIT是解析我们Hexo博客分支就 可以了。</p>\n<h1 id=\"陆、云存储\"><a href=\"#陆、云存储\" class=\"headerlink\" title=\"陆、云存储\"></a>陆、云存储</h1><p>我这里有一个利用又拍云实现的案例：<a href=\"https://image.eelve.com/\">南国薏米</a>。我们可以在生成静态页面之后，将页面全部上传的控件中，然后在云存储中开启index首页，就可以正常访问了。这里我们还可以结合hexo的插件来使用：</p>\n<p>安装插件</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-upyundeploy --save</span><br></pre></td></tr></table></figure>\n<p>编辑根目录的_config.yml文件的deploy字段,配置又拍云存储的服务名称、操作员名称、操作员密码</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">upyun</span></span><br><span class=\"line\">    <span class=\"attr\">serviceName:</span> <span class=\"string\">服务名称</span></span><br><span class=\"line\">    <span class=\"attr\">operatorName:</span> <span class=\"string\">操作员名称</span></span><br><span class=\"line\">    <span class=\"attr\">operatorPassword:</span> <span class=\"string\">操作员密码</span></span><br><span class=\"line\">    <span class=\"attr\">path:</span> <span class=\"string\">/</span> <span class=\"string\">上传目录(选填，默认为根目录)</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>【<strong>后面的话</strong>】以上列举的各种方法，叁、肆、伍、陆都是生成静态博客。其中我个人最推荐方案伍，不仅你的开放方式不会改变，另外还能得到比较好的访问速度，还可以被百度的爬虫抓取。另外如果有服务器也喜欢的折腾的话，可以使用地方法博客程序搭建，包括但不仅限于Halo。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"lifeme","path":"api/categories/lifeme.json"}],"tags":[{"name":"lifeme","path":"api/tags/lifeme.json"}]},{"title":"SpringBoot自定义Starter","slug":"SpringBoot自定义Starter","date":"2020-04-05T04:01:17.000Z","updated":"2021-04-19T06:44:39.042Z","comments":true,"path":"api/articles/SpringBoot自定义Starter.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png","content":"<p>【<strong>前面的话</strong>】在使用SpringBoot的日常开发过程中，我们不可避免的要封装一些自己的Starter，今天这篇文章就来讨论一下怎么自定义一个Starter，本文会封装一个短信发送能力的Starter,使用<a href=\"https://office.ucpaas.com/about/index.html\">云之讯</a>的SDK。</p>\n<hr>\n<h1 id=\"壹、命名规范\"><a href=\"#壹、命名规范\" class=\"headerlink\" title=\"壹、命名规范\"></a>壹、命名规范</h1><p>官方的约定主要有一个命名的约定：在maven中，groupId代表着姓氏，artifactId代表着名字。Spring Boot也是有一个命名的建议的。groupId不要用官方的org.springframework.boot而要用你自己独特的。对于artifactId的命名，Spring Boot官方建议非官方的Starter命名格式遵循 xxxx-spring-boot-starter ，例如 mybatis-spring-boot-starter 。官方starter会遵循spring-boot-starter-xxxx ,例如spring-boot-starter-web 。很多开源starter作者会忽略这种约定，显得不够“专业“。</p>\n<h1 id=\"贰、新建工程\"><a href=\"#贰、新建工程\" class=\"headerlink\" title=\"贰、新建工程\"></a>贰、新建工程</h1><p>新建一个<strong>sms-spring-boot-starter</strong>工程，pom依赖如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--封装Starter核心依赖  --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-autoconfigure<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2.4.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--非必需,该依赖作用是在使用IDEA编写配置文件有代码提示--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2.4.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- lombok 插件  --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.18.6<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">optional</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">optional</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 因为要使用RestTemplate和转换Json，所以引入这两个依赖 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2.4.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>fastjson<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.61<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"叁、Properties配置\"><a href=\"#叁、Properties配置\" class=\"headerlink\" title=\"叁、Properties配置\"></a>叁、Properties配置</h1><p>一般配置参数都是在Spring Boot 的application.yml中。我们会定义一个前缀标识来作为名称空间隔离各个组件的参数。对应的组件会定义一个XXXXProperties 来自动装配这些参数。自动装配的机制基于@ConfigurationProperties注解，请注意一定要显式声明你配置的前缀标识（prefix）。所以这里我们新建<strong>SmsProperties</strong>类，可以配置信息通过配置项名称映射成实体类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@ConfigurationProperties(prefix = &quot;ucpaassms-config&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SmsProperties</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String appid;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String accountSid;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String authToken;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在这里我们可以将配置文件中前缀为<strong>ucpaassms-config</strong>的配置，映射到<strong>SmsProperties</strong>类中。在将来使用时只需要在application.yml中加入上面对应SmsProperties的配置：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">ucpaassms-config:</span></span><br><span class=\"line\">  <span class=\"attr\">account-sid:</span>  <span class=\"string\">//这里填写平台获取的ID和KEY</span></span><br><span class=\"line\">  <span class=\"attr\">auth-token:</span>   <span class=\"string\">//这里填写平台获取的ID和KEY</span></span><br><span class=\"line\">  <span class=\"attr\">appid:</span>        <span class=\"string\">//这里填写平台获取的ID和KEY</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"肆、定义业务实现类\"><a href=\"#肆、定义业务实现类\" class=\"headerlink\" title=\"肆、定义业务实现类\"></a>肆、定义业务实现类</h1><p>拿到配置后，接下来就是根据配置来初始化我们的功能接口。这里我们新建<strong>SmsService</strong>，用来提供具体业务逻辑处理能力</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SmsService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RestTemplate restTemplate;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String appid;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String accountSid;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String authToken;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 初始化</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SmsService</span><span class=\"params\">(SmsProperties smsProperties)</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">this</span>.appid = smsProperties.getAppid();</span><br><span class=\"line\">       <span class=\"keyword\">this</span>.accountSid = smsProperties.getAccountSid();</span><br><span class=\"line\">       <span class=\"keyword\">this</span>.authToken = smsProperties.getAuthToken();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 单独发送</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">sendSMS</span><span class=\"params\">(SendSMSDTO sendSMSDTO)</span></span>&#123;</span><br><span class=\"line\">        JSONObject jsonObject = <span class=\"keyword\">new</span> JSONObject();</span><br><span class=\"line\">        jsonObject.put(<span class=\"string\">&quot;sid&quot;</span>, accountSid);</span><br><span class=\"line\">        jsonObject.put(<span class=\"string\">&quot;token&quot;</span>, authToken);</span><br><span class=\"line\">        jsonObject.put(<span class=\"string\">&quot;appid&quot;</span>, appid);</span><br><span class=\"line\">        jsonObject.put(<span class=\"string\">&quot;templateid&quot;</span>, sendSMSDTO.getTemplateid());</span><br><span class=\"line\">        jsonObject.put(<span class=\"string\">&quot;param&quot;</span>, sendSMSDTO.getParam());</span><br><span class=\"line\">        jsonObject.put(<span class=\"string\">&quot;mobile&quot;</span>, sendSMSDTO.getMobile());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sendSMSDTO.getUid()!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            jsonObject.put(<span class=\"string\">&quot;uid&quot;</span>,sendSMSDTO.getUid());</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            jsonObject.put(<span class=\"string\">&quot;uid&quot;</span>,<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        String json = JSONObject.toJSONString(jsonObject);</span><br><span class=\"line\">        <span class=\"comment\">//使用restTemplate进行访问远程Http服务</span></span><br><span class=\"line\">        HttpHeaders headers = <span class=\"keyword\">new</span> HttpHeaders();</span><br><span class=\"line\">        headers.setContentType(MediaType.APPLICATION_JSON_UTF8);</span><br><span class=\"line\">        HttpEntity&lt;String&gt; httpEntity = <span class=\"keyword\">new</span> HttpEntity&lt;String&gt;(json, headers);</span><br><span class=\"line\">        String result = restTemplate.postForObject(ENUM_SMSAPI_URL.SENDSMS.getUrl(), httpEntity, String.class);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 群体发送</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">sendBatchSMS</span><span class=\"params\">(SendSMSDTO sendSMSDTO)</span></span>&#123;</span><br><span class=\"line\">        JSONObject jsonObject = <span class=\"keyword\">new</span> JSONObject();</span><br><span class=\"line\">        jsonObject.put(<span class=\"string\">&quot;sid&quot;</span>, accountSid);</span><br><span class=\"line\">        jsonObject.put(<span class=\"string\">&quot;token&quot;</span>, authToken);</span><br><span class=\"line\">        jsonObject.put(<span class=\"string\">&quot;appid&quot;</span>, appid);</span><br><span class=\"line\">        jsonObject.put(<span class=\"string\">&quot;templateid&quot;</span>, sendSMSDTO.getTemplateid());</span><br><span class=\"line\">        jsonObject.put(<span class=\"string\">&quot;param&quot;</span>, sendSMSDTO.getParam());</span><br><span class=\"line\">        jsonObject.put(<span class=\"string\">&quot;mobile&quot;</span>, sendSMSDTO.getMobile());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sendSMSDTO.getUid()!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            jsonObject.put(<span class=\"string\">&quot;uid&quot;</span>,sendSMSDTO.getUid());</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            jsonObject.put(<span class=\"string\">&quot;uid&quot;</span>,<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        String json = JSONObject.toJSONString(jsonObject);</span><br><span class=\"line\">        <span class=\"comment\">//使用restTemplate进行访问远程Http服务</span></span><br><span class=\"line\">        HttpHeaders headers = <span class=\"keyword\">new</span> HttpHeaders();</span><br><span class=\"line\">        headers.setContentType(MediaType.APPLICATION_JSON_UTF8);</span><br><span class=\"line\">        HttpEntity&lt;String&gt; httpEntity = <span class=\"keyword\">new</span> HttpEntity&lt;String&gt;(json, headers);</span><br><span class=\"line\">        String result = restTemplate.postForObject(ENUM_SMSAPI_URL.SENDBATCHSMS.getUrl(), httpEntity, String.class);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"伍、定义配置类\"><a href=\"#伍、定义配置类\" class=\"headerlink\" title=\"伍、定义配置类\"></a>伍、定义配置类</h1><p>功能接口实现完后我们会编写一个自动配置类 SmsAutoConfiguration 。除了@Configuration注解外，@EnableConfigurationProperties会帮助我们将我们的配置类SmsProperties加载进来。然后将我们需要暴露的功能接口声明为Spring Bean暴露给Spring Boot应用。这里我们新建<strong>SmsAutoConfiguration</strong>类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span>  <span class=\"comment\">//注释使类成为bean的工厂</span></span><br><span class=\"line\"><span class=\"meta\">@EnableConfigurationProperties(SmsProperties.class)</span> <span class=\"comment\">//使@ConfigurationProperties注解生效</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SmsAutoConfiguration</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> SmsService <span class=\"title\">getBean</span><span class=\"params\">(SmsProperties smsProperties)</span></span>&#123;</span><br><span class=\"line\">        SmsService smsService = <span class=\"keyword\">new</span> SmsService(smsProperties);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> smsService;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"陆、自动装配\"><a href=\"#陆、自动装配\" class=\"headerlink\" title=\"陆、自动装配\"></a>陆、自动装配</h1><p>这里会用到类似java的SPI机制。在资源包下新建META-INF/spring.factories写入SmsAutoConfiguration全限定名。这样在starter组件集成入Spring Boot应用时就可以被应用捕捉到。  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">org.springframework.boot.autoconfigure.EnableAutoConfiguration&#x3D;com.eelve.sms.starter.config.SmsAutoConfiguration</span><br></pre></td></tr></table></figure>\n<p>这里还有另外一种方式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Target(ElementType.TYPE)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"meta\">@Import(SmsAutoConfiguration.class)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> EnableSMS &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//这样我们使用EnableSMS注解，就可以使用能力了</span></span><br></pre></td></tr></table></figure>\n<p>到这里我们的自定义配置就可以完成了，然后就可以上传仓库，提供给第三方使用了。</p>\n<h1 id=\"柒、测试\"><a href=\"#柒、测试\" class=\"headerlink\" title=\"柒、测试\"></a>柒、测试</h1><h2 id=\"7-1-加入sms-spring-boot-starter短信依赖\"><a href=\"#7-1-加入sms-spring-boot-starter短信依赖\" class=\"headerlink\" title=\"7.1 加入sms-spring-boot-starter短信依赖\"></a>7.1 加入<strong>sms-spring-boot-starter</strong>短信依赖</h2><h2 id=\"7-2-编写配置\"><a href=\"#7-2-编写配置\" class=\"headerlink\" title=\"7.2 编写配置\"></a>7.2 编写配置</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">ucpaassms-config:</span></span><br><span class=\"line\">  <span class=\"attr\">account-sid:</span>  <span class=\"string\">//这里填写平台获取的ID和KEY</span></span><br><span class=\"line\">  <span class=\"attr\">auth-token:</span>   <span class=\"string\">//这里填写平台获取的ID和KEY</span></span><br><span class=\"line\">  <span class=\"attr\">appid:</span>        <span class=\"string\">//这里填写平台获取的ID和KEY</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"7-3-编写测试类\"><a href=\"#7-3-编写测试类\" class=\"headerlink\" title=\"7.3 编写测试类\"></a>7.3 编写测试类</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.eelve.ucpaassms.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.eelve.sms.starter.SmsService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.eelve.sms.starter.dto.SendSMSDTO;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/sms&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> SmsService smsService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(value = &quot;/sendsmsTest&quot;,method = RequestMethod.GET)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">sendsmsTest</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建传输类设置参数</span></span><br><span class=\"line\">        SendSMSDTO sendSMSDTO  = <span class=\"keyword\">new</span> SendSMSDTO();</span><br><span class=\"line\">        sendSMSDTO.setMobile(<span class=\"string\">&quot;18888888888&quot;</span>);     <span class=\"comment\">//手机号</span></span><br><span class=\"line\">        sendSMSDTO.setTemplateid(<span class=\"string\">&quot;55555&quot;</span>); <span class=\"comment\">//模板</span></span><br><span class=\"line\">        sendSMSDTO.setParam(<span class=\"string\">&quot;9999&quot;</span>);      <span class=\"comment\">//参数</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> smsService.sendSMS(sendSMSDTO);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后运行，访问<a href=\"http://localhost:8080/sms/sendsmsTest\">http://localhost:8080/sms/sendsmsTest</a>,就可以收到发送的短信了</p>\n<pre><code>【蔚然山庄】尊敬的用户，敬请关注我们的后续活动。\n</code></pre>\n<hr>\n<p>【<strong>后面的话</strong>】</p>\n<p>在引入自己封装的Starter的时候,有的人会报错xxxx类的bean没有找到问题,是因为@SpringBootApplication扫描包的范围是启动类所在同级包和子包,但是不包括第三方的jar包.如果需要扫描maven依赖添加的Jar,我们就要单独使用@ComponentScan注解扫描包.<br>针对这种情况解决方式有两种:</p>\n<p>第一种:是你封装的Starter项目下父级包名称和测试项目的父级包名一样,例如这两个项目包名都叫com.eelve,这样可以不使用@ComponentScan注解,很显然这样做有局限性,不推荐.</p>\n<p>第二种:是可以单独使用@ComponentScan注解扫描第三方包,但是这里一定要注意@SpringBootApplication注解等价于默认属性使用@Configuration+@EnableAutoConfiguration+@ComponentScan,如果@SpringBootApplication和@ComponentScan注解同时存在，那么@SpringBootApplication注解中@ComponentScan的扫描范围会被覆盖,所以单独使用@ComponentScan的话,必须在该注解上配置项目需要扫描的包的所有范围,即项目包路径+依赖包路径.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">/**</span></span><br><span class=\"line\"> <span class=\"string\">*</span> <span class=\"string\">@ComponentScan注解扫描多个包下示例</span></span><br><span class=\"line\"> <span class=\"string\">*/</span></span><br><span class=\"line\"><span class=\"string\">@ComponentScan(&#123;&quot;com.test&quot;,&quot;sms.test&quot;&#125;)</span></span><br></pre></td></tr></table></figure>\n<p>另外具体实现可以参考我的项目：<a href=\"https://github.com/eelve/ucpaas-spring-boot-starter\">ucpaas-spring-boot-starter</a></p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"SpringBoot","path":"api/categories/SpringBoot.json"}],"tags":[{"name":"java","path":"api/tags/java.json"},{"name":"springboot","path":"api/tags/springboot.json"}]},{"title":"清明祭","slug":"清明祭","date":"2020-04-04T01:44:57.000Z","updated":"2021-04-19T06:44:39.258Z","comments":true,"path":"api/articles/清明祭.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/20200404.jpg","content":"<p><img src=\"https://image.eelve.com/eblog/20200404.jpg\" alt=\"清明祭\"></p>\n<blockquote>\n<p>今日，全国哀悼。此刻，一起缅怀，为逝去的同胞！</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">filter</span>: progid:DXImageTransform.Microsoft.<span class=\"built_in\">BasicImage</span>(grayscale=<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-filter</span>: <span class=\"built_in\">grayscale</span>(<span class=\"number\">100%</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>或者</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> *&#123;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-filter</span>: <span class=\"built_in\">grayscale</span>(<span class=\"number\">100%</span>); <span class=\"comment\">/* webkit */</span></span><br><span class=\"line\">    <span class=\"attribute\">-moz-filter</span>: <span class=\"built_in\">grayscale</span>(<span class=\"number\">100%</span>); <span class=\"comment\">/*firefox*/</span></span><br><span class=\"line\">    <span class=\"attribute\">-ms-filter</span>: <span class=\"built_in\">grayscale</span>(<span class=\"number\">100%</span>); <span class=\"comment\">/*ie9*/</span></span><br><span class=\"line\">    <span class=\"attribute\">-o-filter</span>: <span class=\"built_in\">grayscale</span>(<span class=\"number\">100%</span>); <span class=\"comment\">/*opera*/</span></span><br><span class=\"line\">    <span class=\"attribute\">filter</span>: <span class=\"built_in\">grayscale</span>(<span class=\"number\">100%</span>);</span><br><span class=\"line\">    <span class=\"attribute\">filter</span>:progid:DXImageTransform.Microsoft.<span class=\"built_in\">BasicImage</span>(grayscale=<span class=\"number\">1</span>); </span><br><span class=\"line\">    <span class=\"attribute\">filter</span>:gray; <span class=\"comment\">/*ie9- */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre><code>南国薏米全站参与默哀!\n</code></pre>\n","raw":null,"categories":[{"name":"lifeme","path":"api/categories/lifeme.json"}],"tags":[{"name":"lifeme","path":"api/tags/lifeme.json"}]},{"title":"Elastic Stack实战之应用日志监控","slug":"Elastic-Stack实战之应用日志监控","date":"2020-03-14T13:49:22.000Z","updated":"2023-09-30T08:39:39.667Z","comments":true,"path":"api/articles/Elastic-Stack实战之应用日志监控.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/2020031400-c4c762ac3d134548bea4fb19e64088a6.png","content":"<p>【<strong>前面的话</strong>】在前面我们已经介绍了<a href=\"https://eelve.com/posts/975621af.html\">Elasticsearch</a>、<a href=\"https://eelve.com/posts/e05eadb0.html\">Logstash</a>、<a href=\"https://eelve.com/posts/b84d7094.html\">Kibana</a>和<a href=\"https://eelve.com/posts/d1a5ff40.html\">Beats</a>，并且都对各个组件进行了初步体验。今天我们就来模拟一把日常使用，来收集一个我们自己的应用的日志，并使用Kibana展示。</p>\n<hr>\n<h1 id=\"壹、软件版本\"><a href=\"#壹、软件版本\" class=\"headerlink\" title=\"壹、软件版本\"></a>壹、软件版本</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">Centos：CentOS-7-x86_64-Minimal-1908</span></span><br><span class=\"line\"><span class=\"attr\">VM:</span> <span class=\"number\">15.5</span><span class=\"number\">.0</span> <span class=\"string\">build-14665864</span></span><br><span class=\"line\"><span class=\"attr\">Java:</span> <span class=\"number\">1.8</span><span class=\"string\">.0_211</span></span><br><span class=\"line\"><span class=\"attr\">Elasticsearch:</span> <span class=\"string\">elasticsearch-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Logstash:</span> <span class=\"string\">logstash-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Kibana:</span> <span class=\"string\">kibana-7.6.0</span></span><br><span class=\"line\"><span class=\"string\">Filebeat：filebeat-7.6.0</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"贰、自定义采集应用\"><a href=\"#贰、自定义采集应用\" class=\"headerlink\" title=\"贰、自定义采集应用\"></a>贰、自定义采集应用</h1><p>我们这里来模拟一个现在购物网站的使用，主要代码如下</p>\n<ul>\n<li>核心代码</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.eelve.elk.dashboardgenerate;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.lang3.RandomUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.joda.time.DateTime;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DashboardGenerateApplication</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Logger LOGGER = LoggerFactory.getLogger(DashboardGenerateApplication.class);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String[] VISIT = <span class=\"keyword\">new</span> String[]&#123;<span class=\"string\">&quot;浏览页面&quot;</span>, <span class=\"string\">&quot;评论商品&quot;</span>, <span class=\"string\">&quot;加入收藏&quot;</span>, <span class=\"string\">&quot;加入购物车&quot;</span>, <span class=\"string\">&quot;提交订单&quot;</span>, <span class=\"string\">&quot;使用优惠券&quot;</span>, <span class=\"string\">&quot;领取优惠券&quot;</span>, <span class=\"string\">&quot;搜索&quot;</span>, <span class=\"string\">&quot;查看订单&quot;</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            Long sleep = RandomUtils.nextLong(<span class=\"number\">200</span>, <span class=\"number\">1000</span> * <span class=\"number\">5</span>);</span><br><span class=\"line\">            Thread.sleep(sleep);</span><br><span class=\"line\">            Long maxUserId = <span class=\"number\">9999L</span>;</span><br><span class=\"line\">            Long userId = RandomUtils.nextLong(<span class=\"number\">1</span>, maxUserId);</span><br><span class=\"line\">            String visit = VISIT[RandomUtils.nextInt(<span class=\"number\">0</span>, VISIT.length)];</span><br><span class=\"line\">            DateTime now = <span class=\"keyword\">new</span> DateTime();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> maxHour = now.getHourOfDay();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> maxMillis = now.getMinuteOfHour();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> maxSeconds = now.getSecondOfMinute();</span><br><span class=\"line\">            String date = now.plusHours(-(RandomUtils.nextInt(<span class=\"number\">0</span>, maxHour)))</span><br><span class=\"line\">                    .plusMinutes(-(RandomUtils.nextInt(<span class=\"number\">0</span>, maxMillis)))</span><br><span class=\"line\">                    .plusSeconds(-(RandomUtils.nextInt(<span class=\"number\">0</span>, maxSeconds)))</span><br><span class=\"line\">                    .toString(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            String result = <span class=\"string\">&quot;IIO|&quot;</span> + userId + <span class=\"string\">&quot;|&quot;</span> + visit + <span class=\"string\">&quot;|&quot;</span> + date;</span><br><span class=\"line\">            LOGGER.info(result);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>日志配置文件</li>\n</ul>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">log4j.rootLogger</span>=<span class=\"string\">DEBUG,A1,A2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A1</span>=<span class=\"string\">org.apache.log4j.ConsoleAppender</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A1.layout</span>=<span class=\"string\">org.apache.log4j.PatternLayout</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A1.layout.ConversionPattern</span>=<span class=\"string\">[%p] %-d&#123;yyyy-MM-dd HH:mm:ss&#125; [%c] - %m%n</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A2</span> = <span class=\"string\">org.apache.log4j.DailyRollingFileAppender</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A2.File</span> = <span class=\"string\">/iio/logs/app.log</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A2.Append</span> = <span class=\"string\">true</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A2.Threshold</span> = <span class=\"string\">INFO</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A2.layout</span> = <span class=\"string\">org.apache.log4j.PatternLayout</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A2.layout.ConversionPattern</span> =<span class=\"string\">[%p] %-d&#123;yyyy-MM-dd HH:mm:ss&#125; [%c] - %m%n</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>运行结果</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;C:\\Program Files\\Java\\jdk1.8.0_221\\bin\\java.exe&quot; -XX:TieredStopAtLevel=1 -noverify -Dspring.output.ansi.enabled=always -Dcom.sun.management.jmxremote -Dspring.jmx.enabled=true -Dspring.liveBeansView.mbeanDomain -Dspring.application.admin.enabled=true &quot;-javaagent:C:\\Program Files\\JetBrains\\IntelliJ IDEA 2019.1\\lib\\idea_rt.jar=6396:C:\\Program Files\\JetBrains\\IntelliJ IDEA 2019.1\\bin&quot; -Dfile.encoding=UTF-8 -classpath &quot;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\deploy.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\access-bridge-64.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\cldrdata.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\dnsns.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\jaccess.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\jfxrt.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\localedata.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\nashorn.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\sunec.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\sunjce_provider.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\sunmscapi.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\sunpkcs11.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\zipfs.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\javaws.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\jfxswt.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\management-agent.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\plugin.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\rt.jar;D:\\iio\\dashboard-generate\\target\\classes;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\boot\\spring-boot-starter\\2.2.5.RELEASE\\spring-boot-starter-2.2.5.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\boot\\spring-boot\\2.2.5.RELEASE\\spring-boot-2.2.5.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\spring-context\\5.2.4.RELEASE\\spring-context-5.2.4.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\spring-aop\\5.2.4.RELEASE\\spring-aop-5.2.4.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\spring-beans\\5.2.4.RELEASE\\spring-beans-5.2.4.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\spring-expression\\5.2.4.RELEASE\\spring-expression-5.2.4.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\boot\\spring-boot-autoconfigure\\2.2.5.RELEASE\\spring-boot-autoconfigure-2.2.5.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\boot\\spring-boot-starter-logging\\2.2.5.RELEASE\\spring-boot-starter-logging-2.2.5.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\apache\\logging\\log4j\\log4j-to-slf4j\\2.12.1\\log4j-to-slf4j-2.12.1.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\apache\\logging\\log4j\\log4j-api\\2.12.1\\log4j-api-2.12.1.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\slf4j\\jul-to-slf4j\\1.7.30\\jul-to-slf4j-1.7.30.jar;C:\\Users\\Chirius\\.m2\\repository\\jakarta\\annotation\\jakarta.annotation-api\\1.3.5\\jakarta.annotation-api-1.3.5.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\spring-core\\5.2.4.RELEASE\\spring-core-5.2.4.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\spring-jcl\\5.2.4.RELEASE\\spring-jcl-5.2.4.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\yaml\\snakeyaml\\1.25\\snakeyaml-1.25.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\apache\\commons\\commons-lang3\\3.3.2\\commons-lang3-3.3.2.jar;C:\\Users\\Chirius\\.m2\\repository\\joda-time\\joda-time\\2.9.9\\joda-time-2.9.9.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\slf4j\\slf4j-log4j12\\1.7.26\\slf4j-log4j12-1.7.26.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\slf4j\\slf4j-api\\1.7.30\\slf4j-api-1.7.30.jar;C:\\Users\\Chirius\\.m2\\repository\\log4j\\log4j\\1.2.17\\log4j-1.2.17.jar&quot; com.eelve.elk.dashboardgenerate.DashboardGenerateApplication</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:09 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|4234|加入收藏|2020-03-14 04:04:03</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:11 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|6502|领取优惠券|2020-03-14 14:05:07</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:12 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|3694|加入购物车|2020-03-14 20:03:09</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:14 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|8112|使用优惠券|2020-03-14 12:06:02</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:14 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|3391|加入收藏|2020-03-14 02:01:05</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:17 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|3696|搜索|2020-03-14 04:06:05</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:18 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|6670|使用优惠券|2020-03-14 17:04:17</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:21 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|6646|搜索|2020-03-14 11:06:05</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:24 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|8227|使用优惠券|2020-03-14 12:06:24</span><br><span class=\"line\"></span><br><span class=\"line\">Process finished with exit code -1</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>我们这里模拟了用户的操作，并记录到/iio/logs/app.log文件中。主要的业务流程为：APP-&gt;filebeat-&gt;logstash-&gt;elasticsearch-&gt;kibanan-&gt;User</p>\n<p><img src=\"https://image.eelve.com/eblog/2020031400-c4c762ac3d134548bea4fb19e64088a6.png\" alt=\"2020031400\"></p>\n<h1 id=\"叁、准备过程\"><a href=\"#叁、准备过程\" class=\"headerlink\" title=\"叁、准备过程\"></a>叁、准备过程</h1><h2 id=\"3-1-编写filebeat配置\"><a href=\"#3-1-编写filebeat配置\" class=\"headerlink\" title=\"3.1 编写filebeat配置\"></a>3.1 编写filebeat配置</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 filebeat]$ vi dashboard.yml </span><br><span class=\"line\">filebeat.inputs:</span><br><span class=\"line\">- type: log</span><br><span class=\"line\">  enabled: true</span><br><span class=\"line\">  paths:</span><br><span class=\"line\">    - /iio/logs/*.log</span><br><span class=\"line\">output.logstash:</span><br><span class=\"line\">  hosts: [&quot;192.168.237.11:5044&quot;]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-2-编写logstash配置\"><a href=\"#3-2-编写logstash配置\" class=\"headerlink\" title=\"3.2 编写logstash配置\"></a>3.2 编写logstash配置</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 config]$ vi logstash-dashboard.yml </span><br><span class=\"line\">input &#123;</span><br><span class=\"line\">  beats &#123;</span><br><span class=\"line\">    port =&gt; &quot;5044&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">filter &#123;</span><br><span class=\"line\">  mutate &#123;</span><br><span class=\"line\">    split =&gt; &#123;&quot;message&quot;=&gt;&quot;|&quot;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  mutate &#123;</span><br><span class=\"line\">    add_field =&gt; &#123;</span><br><span class=\"line\">       &quot;userId&quot; =&gt; &quot;%&#123;[message][1]&#125;&quot;</span><br><span class=\"line\">       &quot;visit&quot; =&gt; &quot;%&#123;[message][2]&#125;&quot;</span><br><span class=\"line\">       &quot;date&quot; =&gt; &quot;%&#123;[message][3]&#125;&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  mutate &#123;</span><br><span class=\"line\">    convert =&gt; &#123;</span><br><span class=\"line\">        &quot;userId&quot; =&gt; &quot;integer&quot;</span><br><span class=\"line\">        &quot;visit&quot; =&gt; &quot;string&quot;</span><br><span class=\"line\">        &quot;date&quot; =&gt; &quot;string&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">output &#123;</span><br><span class=\"line\">    elasticsearch &#123;</span><br><span class=\"line\">        hosts =&gt; [&quot;192.168.237.11:9200&quot;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-3-启动应用\"><a href=\"#3-3-启动应用\" class=\"headerlink\" title=\"3.3 启动应用\"></a>3.3 启动应用</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@192 home]# java -jar dashboard-generate-0.0.1-SNAPSHOT.jar &amp;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-4-启动elasticsearch\"><a href=\"#3-4-启动elasticsearch\" class=\"headerlink\" title=\"3.4 启动elasticsearch\"></a>3.4 启动elasticsearch</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ ./elasticsearch</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-5-启动kibana\"><a href=\"#3-5-启动kibana\" class=\"headerlink\" title=\"3.5 启动kibana\"></a>3.5 启动kibana</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ ./kibana</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-6-启动logstash\"><a href=\"#3-6-启动logstash\" class=\"headerlink\" title=\"3.6 启动logstash\"></a>3.6 启动logstash</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ ./logstash -f /usr/elastic/logstash/config/logstash-dashboard.yml</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-7-启动filebeat\"><a href=\"#3-7-启动filebeat\" class=\"headerlink\" title=\"3.7 启动filebeat\"></a>3.7 启动filebeat</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 filebeat]$ ./filebeat  -e -c dashboard.yml</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-8-查看采集的数据\"><a href=\"#3-8-查看采集的数据\" class=\"headerlink\" title=\"3.8 查看采集的数据\"></a>3.8 查看采集的数据</h2><p><img src=\"https://image.eelve.com/eblog/2020031401-66d588f9d78f4bf4b34b3d9d0f82001d.png\" alt=\"2020031401\"></p>\n<h2 id=\"3-9-开始制作大屏\"><a href=\"#3-9-开始制作大屏\" class=\"headerlink\" title=\"3.9 开始制作大屏\"></a>3.9 开始制作大屏</h2><p><img src=\"https://image.eelve.com/eblog/2020031402-28114b868ca3470497782f558737d25e.png\" alt=\"2020031402\"><br><img src=\"https://image.eelve.com/eblog/2020031403-7b2ffa7f424b478781543ffb2b1b4207.png\" alt=\"2020031403\"><br><img src=\"https://image.eelve.com/eblog/2020031404-41d668eff3e247e7aa942d850e7775fa.png\" alt=\"2020031404\"><br><img src=\"https://image.eelve.com/eblog/2020031405-2aba46902b5f4495bfae81991385b60d.png\" alt=\"2020031405\"><br><img src=\"https://image.eelve.com/eblog/2020031406-8dbfc5fc883e46298da14ceb8e14348c.png\" alt=\"2020031406\"><br><img src=\"https://image.eelve.com/eblog/2020031407-cd57f9cb79b64ca6acaa2ba604e78511.png\" alt=\"2020031407\"></p>\n<p>到这里我们可以看到就已经完成了对我们自定义数据的监控，然后还利用了Kibana做了图表化展示。</p>\n<hr>\n<p>【<strong>后面的话</strong>】在我们日常应用中，我们的日志需要按照某种规则产生，方便我们使用logstash进行过滤，然后做一些处理。也就是说我们在开发之前就应该想好日志生成的格式，然后设计好日志的处理方式。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"Elastic-Stack","path":"api/categories/Elastic-Stack.json"}],"tags":[{"name":"ELK","path":"api/tags/ELK.json"}]},{"title":"Elastic Stack实战之应用日志监控本地版","slug":"Elastic-Stack实战之应用日志监控本地版","date":"2020-03-14T13:49:22.000Z","updated":"2023-09-30T08:39:39.667Z","comments":true,"path":"api/articles/Elastic-Stack实战之应用日志监控本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2020/3/2020031400-c4c762ac3d134548bea4fb19e64088a6.png","content":"<p>【<strong>前面的话</strong>】在前面我们已经介绍了<a href=\"https://eelve.com/posts/975621af.html\">Elasticsearch</a>、<a href=\"https://eelve.com/posts/e05eadb0.html\">Logstash</a>、<a href=\"https://eelve.com/posts/b84d7094.html\">Kibana</a>和<a href=\"https://eelve.com/posts/d1a5ff40.html\">Beats</a>，并且都对各个组件进行了初步体验。今天我们就来模拟一把日常使用，来收集一个我们自己的应用的日志，并使用Kibana展示。</p>\n<hr>\n<h1 id=\"壹、软件版本\"><a href=\"#壹、软件版本\" class=\"headerlink\" title=\"壹、软件版本\"></a>壹、软件版本</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">Centos：CentOS-7-x86_64-Minimal-1908</span></span><br><span class=\"line\"><span class=\"attr\">VM:</span> <span class=\"number\">15.5</span><span class=\"number\">.0</span> <span class=\"string\">build-14665864</span></span><br><span class=\"line\"><span class=\"attr\">Java:</span> <span class=\"number\">1.8</span><span class=\"string\">.0_211</span></span><br><span class=\"line\"><span class=\"attr\">Elasticsearch:</span> <span class=\"string\">elasticsearch-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Logstash:</span> <span class=\"string\">logstash-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Kibana:</span> <span class=\"string\">kibana-7.6.0</span></span><br><span class=\"line\"><span class=\"string\">Filebeat：filebeat-7.6.0</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"贰、自定义采集应用\"><a href=\"#贰、自定义采集应用\" class=\"headerlink\" title=\"贰、自定义采集应用\"></a>贰、自定义采集应用</h1><p>我们这里来模拟一个现在购物网站的使用，主要代码如下</p>\n<ul>\n<li>核心代码</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.eelve.elk.dashboardgenerate;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.lang3.RandomUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.joda.time.DateTime;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DashboardGenerateApplication</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Logger LOGGER = LoggerFactory.getLogger(DashboardGenerateApplication.class);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String[] VISIT = <span class=\"keyword\">new</span> String[]&#123;<span class=\"string\">&quot;浏览页面&quot;</span>, <span class=\"string\">&quot;评论商品&quot;</span>, <span class=\"string\">&quot;加入收藏&quot;</span>, <span class=\"string\">&quot;加入购物车&quot;</span>, <span class=\"string\">&quot;提交订单&quot;</span>, <span class=\"string\">&quot;使用优惠券&quot;</span>, <span class=\"string\">&quot;领取优惠券&quot;</span>, <span class=\"string\">&quot;搜索&quot;</span>, <span class=\"string\">&quot;查看订单&quot;</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            Long sleep = RandomUtils.nextLong(<span class=\"number\">200</span>, <span class=\"number\">1000</span> * <span class=\"number\">5</span>);</span><br><span class=\"line\">            Thread.sleep(sleep);</span><br><span class=\"line\">            Long maxUserId = <span class=\"number\">9999L</span>;</span><br><span class=\"line\">            Long userId = RandomUtils.nextLong(<span class=\"number\">1</span>, maxUserId);</span><br><span class=\"line\">            String visit = VISIT[RandomUtils.nextInt(<span class=\"number\">0</span>, VISIT.length)];</span><br><span class=\"line\">            DateTime now = <span class=\"keyword\">new</span> DateTime();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> maxHour = now.getHourOfDay();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> maxMillis = now.getMinuteOfHour();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> maxSeconds = now.getSecondOfMinute();</span><br><span class=\"line\">            String date = now.plusHours(-(RandomUtils.nextInt(<span class=\"number\">0</span>, maxHour)))</span><br><span class=\"line\">                    .plusMinutes(-(RandomUtils.nextInt(<span class=\"number\">0</span>, maxMillis)))</span><br><span class=\"line\">                    .plusSeconds(-(RandomUtils.nextInt(<span class=\"number\">0</span>, maxSeconds)))</span><br><span class=\"line\">                    .toString(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            String result = <span class=\"string\">&quot;IIO|&quot;</span> + userId + <span class=\"string\">&quot;|&quot;</span> + visit + <span class=\"string\">&quot;|&quot;</span> + date;</span><br><span class=\"line\">            LOGGER.info(result);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>日志配置文件</li>\n</ul>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">log4j.rootLogger</span>=<span class=\"string\">DEBUG,A1,A2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A1</span>=<span class=\"string\">org.apache.log4j.ConsoleAppender</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A1.layout</span>=<span class=\"string\">org.apache.log4j.PatternLayout</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A1.layout.ConversionPattern</span>=<span class=\"string\">[%p] %-d&#123;yyyy-MM-dd HH:mm:ss&#125; [%c] - %m%n</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A2</span> = <span class=\"string\">org.apache.log4j.DailyRollingFileAppender</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A2.File</span> = <span class=\"string\">/iio/logs/app.log</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A2.Append</span> = <span class=\"string\">true</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A2.Threshold</span> = <span class=\"string\">INFO</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A2.layout</span> = <span class=\"string\">org.apache.log4j.PatternLayout</span></span><br><span class=\"line\"><span class=\"meta\">log4j.appender.A2.layout.ConversionPattern</span> =<span class=\"string\">[%p] %-d&#123;yyyy-MM-dd HH:mm:ss&#125; [%c] - %m%n</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>运行结果</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;C:\\Program Files\\Java\\jdk1.8.0_221\\bin\\java.exe&quot; -XX:TieredStopAtLevel=1 -noverify -Dspring.output.ansi.enabled=always -Dcom.sun.management.jmxremote -Dspring.jmx.enabled=true -Dspring.liveBeansView.mbeanDomain -Dspring.application.admin.enabled=true &quot;-javaagent:C:\\Program Files\\JetBrains\\IntelliJ IDEA 2019.1\\lib\\idea_rt.jar=6396:C:\\Program Files\\JetBrains\\IntelliJ IDEA 2019.1\\bin&quot; -Dfile.encoding=UTF-8 -classpath &quot;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\deploy.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\access-bridge-64.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\cldrdata.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\dnsns.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\jaccess.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\jfxrt.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\localedata.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\nashorn.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\sunec.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\sunjce_provider.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\sunmscapi.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\sunpkcs11.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\ext\\zipfs.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\javaws.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\jfxswt.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\management-agent.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\plugin.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_221\\jre\\lib\\rt.jar;D:\\iio\\dashboard-generate\\target\\classes;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\boot\\spring-boot-starter\\2.2.5.RELEASE\\spring-boot-starter-2.2.5.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\boot\\spring-boot\\2.2.5.RELEASE\\spring-boot-2.2.5.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\spring-context\\5.2.4.RELEASE\\spring-context-5.2.4.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\spring-aop\\5.2.4.RELEASE\\spring-aop-5.2.4.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\spring-beans\\5.2.4.RELEASE\\spring-beans-5.2.4.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\spring-expression\\5.2.4.RELEASE\\spring-expression-5.2.4.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\boot\\spring-boot-autoconfigure\\2.2.5.RELEASE\\spring-boot-autoconfigure-2.2.5.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\boot\\spring-boot-starter-logging\\2.2.5.RELEASE\\spring-boot-starter-logging-2.2.5.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\apache\\logging\\log4j\\log4j-to-slf4j\\2.12.1\\log4j-to-slf4j-2.12.1.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\apache\\logging\\log4j\\log4j-api\\2.12.1\\log4j-api-2.12.1.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\slf4j\\jul-to-slf4j\\1.7.30\\jul-to-slf4j-1.7.30.jar;C:\\Users\\Chirius\\.m2\\repository\\jakarta\\annotation\\jakarta.annotation-api\\1.3.5\\jakarta.annotation-api-1.3.5.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\spring-core\\5.2.4.RELEASE\\spring-core-5.2.4.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\springframework\\spring-jcl\\5.2.4.RELEASE\\spring-jcl-5.2.4.RELEASE.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\yaml\\snakeyaml\\1.25\\snakeyaml-1.25.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\apache\\commons\\commons-lang3\\3.3.2\\commons-lang3-3.3.2.jar;C:\\Users\\Chirius\\.m2\\repository\\joda-time\\joda-time\\2.9.9\\joda-time-2.9.9.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\slf4j\\slf4j-log4j12\\1.7.26\\slf4j-log4j12-1.7.26.jar;C:\\Users\\Chirius\\.m2\\repository\\org\\slf4j\\slf4j-api\\1.7.30\\slf4j-api-1.7.30.jar;C:\\Users\\Chirius\\.m2\\repository\\log4j\\log4j\\1.2.17\\log4j-1.2.17.jar&quot; com.eelve.elk.dashboardgenerate.DashboardGenerateApplication</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:09 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|4234|加入收藏|2020-03-14 04:04:03</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:11 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|6502|领取优惠券|2020-03-14 14:05:07</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:12 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|3694|加入购物车|2020-03-14 20:03:09</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:14 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|8112|使用优惠券|2020-03-14 12:06:02</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:14 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|3391|加入收藏|2020-03-14 02:01:05</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:17 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|3696|搜索|2020-03-14 04:06:05</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:18 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|6670|使用优惠券|2020-03-14 17:04:17</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:21 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|6646|搜索|2020-03-14 11:06:05</span><br><span class=\"line\">[INFO] 2020-03-14 21:06:24 [com.eelve.elk.dashboardgenerate.DashboardGenerateApplication] - IIO|8227|使用优惠券|2020-03-14 12:06:24</span><br><span class=\"line\"></span><br><span class=\"line\">Process finished with exit code -1</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>我们这里模拟了用户的操作，并记录到/iio/logs/app.log文件中。主要的业务流程为：APP-&gt;filebeat-&gt;logstash-&gt;elasticsearch-&gt;kibanan-&gt;User</p>\n<p><img src=\"https://eelve.com/upload/2020/3/2020031400-c4c762ac3d134548bea4fb19e64088a6.png\" alt=\"2020031400\"></p>\n<h1 id=\"叁、准备过程\"><a href=\"#叁、准备过程\" class=\"headerlink\" title=\"叁、准备过程\"></a>叁、准备过程</h1><h2 id=\"3-1-编写filebeat配置\"><a href=\"#3-1-编写filebeat配置\" class=\"headerlink\" title=\"3.1 编写filebeat配置\"></a>3.1 编写filebeat配置</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 filebeat]$ vi dashboard.yml </span><br><span class=\"line\">filebeat.inputs:</span><br><span class=\"line\">- type: log</span><br><span class=\"line\">  enabled: true</span><br><span class=\"line\">  paths:</span><br><span class=\"line\">    - /iio/logs/*.log</span><br><span class=\"line\">output.logstash:</span><br><span class=\"line\">  hosts: [&quot;192.168.237.11:5044&quot;]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-2-编写logstash配置\"><a href=\"#3-2-编写logstash配置\" class=\"headerlink\" title=\"3.2 编写logstash配置\"></a>3.2 编写logstash配置</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 config]$ vi logstash-dashboard.yml </span><br><span class=\"line\">input &#123;</span><br><span class=\"line\">  beats &#123;</span><br><span class=\"line\">    port =&gt; &quot;5044&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">filter &#123;</span><br><span class=\"line\">  mutate &#123;</span><br><span class=\"line\">    split =&gt; &#123;&quot;message&quot;=&gt;&quot;|&quot;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  mutate &#123;</span><br><span class=\"line\">    add_field =&gt; &#123;</span><br><span class=\"line\">       &quot;userId&quot; =&gt; &quot;%&#123;[message][1]&#125;&quot;</span><br><span class=\"line\">       &quot;visit&quot; =&gt; &quot;%&#123;[message][2]&#125;&quot;</span><br><span class=\"line\">       &quot;date&quot; =&gt; &quot;%&#123;[message][3]&#125;&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  mutate &#123;</span><br><span class=\"line\">    convert =&gt; &#123;</span><br><span class=\"line\">        &quot;userId&quot; =&gt; &quot;integer&quot;</span><br><span class=\"line\">        &quot;visit&quot; =&gt; &quot;string&quot;</span><br><span class=\"line\">        &quot;date&quot; =&gt; &quot;string&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">output &#123;</span><br><span class=\"line\">    elasticsearch &#123;</span><br><span class=\"line\">        hosts =&gt; [&quot;192.168.237.11:9200&quot;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-3-启动应用\"><a href=\"#3-3-启动应用\" class=\"headerlink\" title=\"3.3 启动应用\"></a>3.3 启动应用</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@192 home]# java -jar dashboard-generate-0.0.1-SNAPSHOT.jar &amp;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-4-启动elasticsearch\"><a href=\"#3-4-启动elasticsearch\" class=\"headerlink\" title=\"3.4 启动elasticsearch\"></a>3.4 启动elasticsearch</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ ./elasticsearch</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-5-启动kibana\"><a href=\"#3-5-启动kibana\" class=\"headerlink\" title=\"3.5 启动kibana\"></a>3.5 启动kibana</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ ./kibana</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-6-启动logstash\"><a href=\"#3-6-启动logstash\" class=\"headerlink\" title=\"3.6 启动logstash\"></a>3.6 启动logstash</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ ./logstash -f /usr/elastic/logstash/config/logstash-dashboard.yml</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-7-启动filebeat\"><a href=\"#3-7-启动filebeat\" class=\"headerlink\" title=\"3.7 启动filebeat\"></a>3.7 启动filebeat</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 filebeat]$ ./filebeat  -e -c dashboard.yml</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-8-查看采集的数据\"><a href=\"#3-8-查看采集的数据\" class=\"headerlink\" title=\"3.8 查看采集的数据\"></a>3.8 查看采集的数据</h2><p><img src=\"https://eelve.com/upload/2020/3/2020031401-66d588f9d78f4bf4b34b3d9d0f82001d.png\" alt=\"2020031401\"></p>\n<h2 id=\"3-9-开始制作大屏\"><a href=\"#3-9-开始制作大屏\" class=\"headerlink\" title=\"3.9 开始制作大屏\"></a>3.9 开始制作大屏</h2><p><img src=\"https://eelve.com/upload/2020/3/2020031402-28114b868ca3470497782f558737d25e.png\" alt=\"2020031402\"><br><img src=\"https://eelve.com/upload/2020/3/2020031403-7b2ffa7f424b478781543ffb2b1b4207.png\" alt=\"2020031403\"><br><img src=\"https://eelve.com/upload/2020/3/2020031404-41d668eff3e247e7aa942d850e7775fa.png\" alt=\"2020031404\"><br><img src=\"https://eelve.com/upload/2020/3/2020031405-2aba46902b5f4495bfae81991385b60d.png\" alt=\"2020031405\"><br><img src=\"https://eelve.com/upload/2020/3/2020031406-8dbfc5fc883e46298da14ceb8e14348c.png\" alt=\"2020031406\"><br><img src=\"https://eelve.com/upload/2020/3/2020031407-cd57f9cb79b64ca6acaa2ba604e78511.png\" alt=\"2020031407\"></p>\n<p>到这里我们可以看到就已经完成了对我们自定义数据的监控，然后还利用了Kibana做了图表化展示。</p>\n<hr>\n<p>【<strong>后面的话</strong>】在我们日常应用中，我们的日志需要按照某种规则产生，方便我们使用logstash进行过滤，然后做一些处理。也就是说我们在开发之前就应该想好日志生成的格式，然后设计好日志的处理方式。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"Elastic Stack实战之Metricbeat初体验","slug":"Elastic-Stack实战之Metricbeat初体验","date":"2020-03-07T13:36:20.000Z","updated":"2023-09-30T08:39:39.667Z","comments":true,"path":"api/articles/Elastic-Stack实战之Metricbeat初体验.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/screenshot-infrastructure-ui-d2c3e13f47f74d82a6f0f6c2799d94f8.png","content":"<p>【<strong>前面的话</strong>】<a href=\"https://eelve.com/posts/d1a5ff40.html\">前面介绍了Elastic Stack的Beats家族</a>，并且<a href=\"https://eelve.com/posts/1d8b943d.html\">体验了Filebeat</a>，接下来我们就继续来体验一下</p>\n<hr>\n<h1 id=\"壹、软件版本\"><a href=\"#壹、软件版本\" class=\"headerlink\" title=\"壹、软件版本\"></a>壹、软件版本</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">Centos：CentOS-7-x86_64-Minimal-1908</span></span><br><span class=\"line\"><span class=\"attr\">VM:</span> <span class=\"number\">15.5</span><span class=\"number\">.0</span> <span class=\"string\">build-14665864</span></span><br><span class=\"line\"><span class=\"attr\">Java:</span> <span class=\"number\">1.8</span><span class=\"string\">.0_211</span></span><br><span class=\"line\"><span class=\"attr\">Elasticsearch:</span> <span class=\"string\">elasticsearch-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Logstash:</span> <span class=\"string\">logstash-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Kibana:</span> <span class=\"string\">kibana-7.6.0</span></span><br><span class=\"line\"><span class=\"string\">MetricBeat：filebeat-7.6.0</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"贰、MetricBeat介绍\"><a href=\"#贰、MetricBeat介绍\" class=\"headerlink\" title=\"贰、MetricBeat介绍\"></a>贰、MetricBeat介绍</h1><p>MetricBeat是一种轻量型指标采集器，用于从系统和服务收集指标。Metricbeat 能够以一种轻量型的方式，输送各种系统和服务统计数据，从 CPU 到内存，从 Redis 到 Nginx，不一而足。</p>\n<ul>\n<li>系统级监控，更简洁</li>\n</ul>\n<p><img src=\"https://image.eelve.com/eblog/screenshot-infrastructure-ui-d2c3e13f47f74d82a6f0f6c2799d94f8.png\" alt=\"screenshot-infrastructure-ui\"></p>\n<ul>\n<li><p>单个二进制文件提供多种模块</p>\n<p>Metricbeat 提供多种内部模块，这些模块可从多项服务（诸如 Apache、Jolokia、NGINX、MongoDB、MySQL、PostgreSQL、Prometheus 等等）中收集指标。安装简单，完全零依赖性。只需在配置文件中启用您所需的模块即可。</p>\n<p>而且，如果您没有看到要找的模块，还可以自己构建。以 Go 语言编写 Metricbeat 模块，过程十分简单。 </p>\n<ul>\n<li>系统</li>\n</ul>\n<p><img src=\"https://image.eelve.com/eblog/metricbeat-modules-system-7f76e2200cfb40089bb112f50aae710e.jpg\" alt=\"metricbeat-modules-system\"></p>\n<ul>\n<li>Docker</li>\n</ul>\n<p><img src=\"https://image.eelve.com/eblog/container-monitoring-screenshot-carousel-docker-908943a547964d11996a9775855235f0.jpg\" alt=\"container-monitoring-screenshot-carousel-docker\"></p>\n<ul>\n<li>MongoDB</li>\n</ul>\n<p><img src=\"https://image.eelve.com/eblog/metricbeat-modules-mongo-d5d719649a7a4e2a9bf9f1a984528efc.jpg\" alt=\"metricbeat-modules-mongo\"></p>\n<ul>\n<li>Kubernetes</li>\n</ul>\n<p><img src=\"https://image.eelve.com/eblog/container-monitoring-screenshot-carousel-kubernetes-0ee5a1fdacf74c3b82d12c81c5c14af1.jpg\" alt=\"container-monitoring-screenshot-carousel-kubernetes\"></p>\n</li>\n<li><p>容器就绪 </p>\n<p>近来是不是所有工作都转移到了 Docker 中？通过 Elastic Stack，您能够轻松地监测容器。将 Metricbeat 部署到同一台主机上的一个单独容器后，它将收集与主机上运行的其他每一个容器相关的统计数据。在收集统计数据时，它直接从 proc 文件系统读取 cgroup 信息，这就意味着它无需特权即可访问 Docker API，并且同样适用于其他 Runtime。针对 Docker 的 Autodiscovery 让事情进一步简化，您只需指定一个条件即可开启 Metricbeat 模块。 </p>\n</li>\n<li><p>不错过任何检测信号</p>\n<p>将指标通过假脱机传输方式输送至磁盘，这样您的数据管道再也不会错过任何一个数据点，即使发生中断（例如网络问题），也勿需担心。Metricbeat 会保留传入的数据，并在重新上线后将这些指标输送至 Elasticsearch 或 Logstash。 </p>\n</li>\n</ul>\n<ul>\n<li><p>输送至 Elasticsearch 或 Logstash。在 Kibana 中实现可视化。</p>\n<p>Metricbeat 是 Elastic Stack 的一部分，因此能够与 Logstash、Elasticsearch 和 Kibana 无缝协作。无论您要使用 Logstash 转换或充实指标，还是在 Elasticsearch 中随意处理一些数据分析，亦或在 Kibana 中构建和分享仪表板，Metricbeat 都能轻松地将您的数据发送至最关键的地方。</p>\n</li>\n</ul>\n<h1 id=\"叁-MetricBeat安装\"><a href=\"#叁-MetricBeat安装\" class=\"headerlink\" title=\"叁 MetricBeat安装\"></a>叁 MetricBeat安装</h1><h2 id=\"3-1-下载地址\"><a href=\"#3-1-下载地址\" class=\"headerlink\" title=\"3.1 下载地址\"></a>3.1 下载地址</h2><p><a href=\"https://artifacts.elastic.co/downloads/beats/filebeat/metricBeat-7.6.0-linux-x86_64.tar.gz\">metricBeat-7.6.0-linux-x86_64</a></p>\n<h2 id=\"3-2-解压metricBeat-7-6-0-linux-x86-64\"><a href=\"#3-2-解压metricBeat-7-6-0-linux-x86-64\" class=\"headerlink\" title=\"3.2 解压metricBeat-7.6.0-linux-x86_64\"></a>3.2 解压metricBeat-7.6.0-linux-x86_64</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zvxf metricBeat-7.6.0-linux-x86_64.tar.gz -C /usr/elastic</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-3-使用Kibana展示Metricbeat系统指标\"><a href=\"#3-3-使用Kibana展示Metricbeat系统指标\" class=\"headerlink\" title=\"3.3 使用Kibana展示Metricbeat系统指标\"></a>3.3 使用Kibana展示Metricbeat系统指标</h2><ul>\n<li>修改Metricbeat配置</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output.elasticsearch:</span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\"> Array of hosts to connect to.</span></span><br><span class=\"line\">  hosts: [&quot;http://192.168.237.11:9200&quot;]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 metricbeat]$ ./metricbeat -e</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在Elasticsearch中查看采集的数据</li>\n</ul>\n<p><img src=\"https://image.eelve.com/eblog/2020030707-906f151d4ab34f7c8bbcfea65d83f8e9.png\" alt=\"2020030707\"></p>\n<ul>\n<li>修改Metricbeat配置</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setup.kibana:</span><br><span class=\"line\">  host: &quot;192.168.237.11:5601&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装仪表盘</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./metricbeat setup --dashboards</span><br></pre></td></tr></table></figure>\n<ul>\n<li>重启服务查看效果</li>\n</ul>\n<p><img src=\"https://image.eelve.com/eblog/2020030708-ba77ee4e36c6478c8b816a314d730f80.png\" alt=\"2020030708\"><br><img src=\"https://image.eelve.com/eblog/2020030709-a40f0d5711fc4707a416e2c39bbbcb79.png\" alt=\"2020030709\"></p>\n<p>到这里我们就监控了我们系统的指标，并且利用Kibana提供的仪表板做了图形化展示。</p>\n<h2 id=\"3-4-使用Kibana展示Metricbeat采集nginx指标\"><a href=\"#3-4-使用Kibana展示Metricbeat采集nginx指标\" class=\"headerlink\" title=\"3.4 使用Kibana展示Metricbeat采集nginx指标\"></a>3.4 使用Kibana展示Metricbeat采集nginx指标</h2><ul>\n<li><p>开启nginx的状态查询</p>\n<p>在nginx中，需要开启状态查询，才能查询到指标数据。</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">重新编译nginx</span></span><br><span class=\"line\">./configure --prefix=/usr/local/nginx --with-http_stub_status_module</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br><span class=\"line\"></span><br><span class=\"line\">./nginx -V #查询版本信息</span><br><span class=\"line\">nginx version: nginx/1.12.0</span><br><span class=\"line\">built by gcc 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC) </span><br><span class=\"line\">configure arguments: --prefix=/usr/local/nginx/ --with-http_stub_status_module</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">配置nginx</span></span><br><span class=\"line\">vi nginx.conf</span><br><span class=\"line\">location /nginx-status &#123;</span><br><span class=\"line\">    stub_status on;</span><br><span class=\"line\">    access_log off;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://image.eelve.com/eblog/2020030710-267475b4b77648ccb8d57c0fece62055.png\" alt=\"2020030710\"></p>\n<p>结果说明：</p>\n<ul>\n<li>Active connections：正在处理的活动连接数</li>\n<li>server accepts handled requests<ul>\n<li>第一个 server 表示Nginx启动到现在共处理了22个连接</li>\n<li>第二个 accepts 表示Nginx启动到现在共成功创建 22 次握手</li>\n<li>第三个 handled requests 表示总共处理了 193 次请求</li>\n<li>请求丢失数 = 握手数 - 连接数 ，可以看出目前为止没有丢失请求</li>\n</ul>\n</li>\n<li>Reading: 0 Writing: 1 Waiting: 2<ul>\n<li>Reading：Nginx 读取到客户端的 Header 信息数</li>\n<li>Writing：Nginx 返回给客户端 Header 信息数</li>\n<li>Waiting：Nginx 已经处理完正在等候下一次请求指令的驻留链接（开启keep-alive的情况下，这个值等于 Active - (Reading+Writing)）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>配置Nginx Module</p>\n<p>默认Metricbeat之开启了system modules，所以我们这里要手动启用nginx modules</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./metricbeat modules enable nginx</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 metricbeat]$ ./metricbeat modules list</span><br><span class=\"line\">Enabled:</span><br><span class=\"line\">nginx</span><br><span class=\"line\">system</span><br><span class=\"line\"></span><br><span class=\"line\">Disabled:</span><br><span class=\"line\">activemq</span><br><span class=\"line\">aerospike</span><br><span class=\"line\">apache</span><br><span class=\"line\">appsearch</span><br><span class=\"line\">aws</span><br><span class=\"line\">azure</span><br><span class=\"line\">beat</span><br><span class=\"line\">beat-xpack</span><br><span class=\"line\">ceph</span><br><span class=\"line\">cockroachdb</span><br><span class=\"line\">consul</span><br><span class=\"line\">coredns</span><br><span class=\"line\">couchbase</span><br><span class=\"line\">couchdb</span><br><span class=\"line\">docker</span><br><span class=\"line\">dropwizard</span><br><span class=\"line\">elasticsearch</span><br><span class=\"line\">elasticsearch-xpack</span><br><span class=\"line\">envoyproxy</span><br><span class=\"line\">etcd</span><br><span class=\"line\">golang</span><br><span class=\"line\">googlecloud</span><br><span class=\"line\">graphite</span><br><span class=\"line\">haproxy</span><br><span class=\"line\">http</span><br><span class=\"line\">jolokia</span><br><span class=\"line\">kafka</span><br><span class=\"line\">kibana</span><br><span class=\"line\">kibana-xpack</span><br><span class=\"line\">kubernetes</span><br><span class=\"line\">kvm</span><br><span class=\"line\">logstash</span><br><span class=\"line\">logstash-xpack</span><br><span class=\"line\">memcached</span><br><span class=\"line\">mongodb</span><br><span class=\"line\">mssql</span><br><span class=\"line\">munin</span><br><span class=\"line\">mysql</span><br><span class=\"line\">nats</span><br><span class=\"line\">oracle</span><br><span class=\"line\">php_fpm</span><br><span class=\"line\">postgresql</span><br><span class=\"line\">prometheus</span><br><span class=\"line\">rabbitmq</span><br><span class=\"line\">redis</span><br><span class=\"line\">sql</span><br><span class=\"line\">stan</span><br><span class=\"line\">statsd</span><br><span class=\"line\">tomcat</span><br><span class=\"line\">traefik</span><br><span class=\"line\">uwsgi</span><br><span class=\"line\">vsphere</span><br><span class=\"line\">windows</span><br><span class=\"line\">zookeeper</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改nginx modules的配置</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 modules.d]$ vi nginx.yml </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Module: nginx</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Docs: https://www.elastic.co/guide/en/beats/metricbeat/7.6/metricbeat-module-nginx.html</span></span><br><span class=\"line\"></span><br><span class=\"line\">- module: nginx</span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\">metricsets:</span></span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\">  - stubstatus</span></span><br><span class=\"line\">  period: 10s</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\"> Nginx hosts</span></span><br><span class=\"line\">  hosts: [&quot;http://192.168.237.11&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\"> Path to server status. Default server-status</span></span><br><span class=\"line\">  server_status_path: &quot;nginx-status&quot; #配置的nginx状态访问地址</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\">username: <span class=\"string\">&quot;user&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\">password: <span class=\"string\">&quot;secret&quot;</span></span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>启动测试</p>\n</li>\n</ul>\n<p><img src=\"https://image.eelve.com/eblog/2020030711-c1217270b05241ca96fa42f063ba8d9f.png\" alt=\"2020030711\"><br><img src=\"https://image.eelve.com/eblog/2020030712-8ae5730e5301448b974d67545ff98e7a.png\" alt=\"2020030712\"></p>\n<p>到这里我们采集的nginx的指标数据，并且利用Kibana安装的Metricbeatd的nginx仪表盘做了图形化展示。</p>\n<h1 id=\"肆、Metricbeat组成\"><a href=\"#肆、Metricbeat组成\" class=\"headerlink\" title=\"肆、Metricbeat组成\"></a>肆、Metricbeat组成</h1><p>Metricbeat有2部分组成，一部分是Module，另一部分为Metricset。</p>\n<ul>\n<li><p>Module</p>\n<p>收集的对象，如：mysql、redis、nginx、操作系统等；</p>\n</li>\n<li><p>Metricset</p>\n<p>收集指标的集合，如：cpu、memory、network等；  </p>\n</li>\n</ul>\n<hr>\n<p>【<strong>后面的话</strong>】在本文中我们利用Metricbeat监控了系统和nginx的系统指标，并且做了图标化的展示。其他module的使用也类似，他们都是利用Metricbeat给被监控的机器放松状态指令，然后采集数据，再做图形化的展示。同时我们也看到Merticbeat也内置了很多的module，足够了我们日工作需要了。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"Elastic-Stack","path":"api/categories/Elastic-Stack.json"}],"tags":[{"name":"ELK","path":"api/tags/ELK.json"},{"name":"Beats","path":"api/tags/Beats.json"},{"name":"MetricBeat","path":"api/tags/MetricBeat.json"}]},{"title":"Elastic Stack实战之Metricbeat初体验本地版","slug":"Elastic-Stack实战之Metricbeat初体验本地版","date":"2020-03-07T13:36:20.000Z","updated":"2023-09-30T08:39:39.667Z","comments":true,"path":"api/articles/Elastic-Stack实战之Metricbeat初体验本地版.json","excerpt":null,"keywords":"南国薏米","cover":"https://eelve.com/upload/2020/3/screenshot-infrastructure-ui-d2c3e13f47f74d82a6f0f6c2799d94f8.png","content":"<p>【<strong>前面的话</strong>】<a href=\"https://eelve.com/posts/d1a5ff40.html\">前面介绍了Elastic Stack的Beats家族</a>，并且<a href=\"https://eelve.com/posts/1d8b943d.html\">体验了Filebeat</a>，接下来我们就继续来体验一下</p>\n<hr>\n<h1 id=\"壹、软件版本\"><a href=\"#壹、软件版本\" class=\"headerlink\" title=\"壹、软件版本\"></a>壹、软件版本</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">Centos：CentOS-7-x86_64-Minimal-1908</span></span><br><span class=\"line\"><span class=\"attr\">VM:</span> <span class=\"number\">15.5</span><span class=\"number\">.0</span> <span class=\"string\">build-14665864</span></span><br><span class=\"line\"><span class=\"attr\">Java:</span> <span class=\"number\">1.8</span><span class=\"string\">.0_211</span></span><br><span class=\"line\"><span class=\"attr\">Elasticsearch:</span> <span class=\"string\">elasticsearch-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Logstash:</span> <span class=\"string\">logstash-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Kibana:</span> <span class=\"string\">kibana-7.6.0</span></span><br><span class=\"line\"><span class=\"string\">MetricBeat：filebeat-7.6.0</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"贰、MetricBeat介绍\"><a href=\"#贰、MetricBeat介绍\" class=\"headerlink\" title=\"贰、MetricBeat介绍\"></a>贰、MetricBeat介绍</h1><p>MetricBeat是一种轻量型指标采集器，用于从系统和服务收集指标。Metricbeat 能够以一种轻量型的方式，输送各种系统和服务统计数据，从 CPU 到内存，从 Redis 到 Nginx，不一而足。</p>\n<ul>\n<li>系统级监控，更简洁</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/screenshot-infrastructure-ui-d2c3e13f47f74d82a6f0f6c2799d94f8.png\" alt=\"screenshot-infrastructure-ui\"></p>\n<ul>\n<li><p>单个二进制文件提供多种模块</p>\n<p>Metricbeat 提供多种内部模块，这些模块可从多项服务（诸如 Apache、Jolokia、NGINX、MongoDB、MySQL、PostgreSQL、Prometheus 等等）中收集指标。安装简单，完全零依赖性。只需在配置文件中启用您所需的模块即可。</p>\n<p>而且，如果您没有看到要找的模块，还可以自己构建。以 Go 语言编写 Metricbeat 模块，过程十分简单。 </p>\n<ul>\n<li>系统</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/metricbeat-modules-system-7f76e2200cfb40089bb112f50aae710e.jpg\" alt=\"metricbeat-modules-system\"></p>\n<ul>\n<li>Docker</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/container-monitoring-screenshot-carousel-docker-908943a547964d11996a9775855235f0.jpg\" alt=\"container-monitoring-screenshot-carousel-docker\"></p>\n<ul>\n<li>MongoDB</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/metricbeat-modules-mongo-d5d719649a7a4e2a9bf9f1a984528efc.jpg\" alt=\"metricbeat-modules-mongo\"></p>\n<ul>\n<li>Kubernetes</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/container-monitoring-screenshot-carousel-kubernetes-0ee5a1fdacf74c3b82d12c81c5c14af1.jpg\" alt=\"container-monitoring-screenshot-carousel-kubernetes\"></p>\n</li>\n<li><p>容器就绪 </p>\n<p>近来是不是所有工作都转移到了 Docker 中？通过 Elastic Stack，您能够轻松地监测容器。将 Metricbeat 部署到同一台主机上的一个单独容器后，它将收集与主机上运行的其他每一个容器相关的统计数据。在收集统计数据时，它直接从 proc 文件系统读取 cgroup 信息，这就意味着它无需特权即可访问 Docker API，并且同样适用于其他 Runtime。针对 Docker 的 Autodiscovery 让事情进一步简化，您只需指定一个条件即可开启 Metricbeat 模块。 </p>\n</li>\n<li><p>不错过任何检测信号</p>\n<p>将指标通过假脱机传输方式输送至磁盘，这样您的数据管道再也不会错过任何一个数据点，即使发生中断（例如网络问题），也勿需担心。Metricbeat 会保留传入的数据，并在重新上线后将这些指标输送至 Elasticsearch 或 Logstash。 </p>\n</li>\n</ul>\n<ul>\n<li><p>输送至 Elasticsearch 或 Logstash。在 Kibana 中实现可视化。</p>\n<p>Metricbeat 是 Elastic Stack 的一部分，因此能够与 Logstash、Elasticsearch 和 Kibana 无缝协作。无论您要使用 Logstash 转换或充实指标，还是在 Elasticsearch 中随意处理一些数据分析，亦或在 Kibana 中构建和分享仪表板，Metricbeat 都能轻松地将您的数据发送至最关键的地方。</p>\n</li>\n</ul>\n<h1 id=\"叁-MetricBeat安装\"><a href=\"#叁-MetricBeat安装\" class=\"headerlink\" title=\"叁 MetricBeat安装\"></a>叁 MetricBeat安装</h1><h2 id=\"3-1-下载地址\"><a href=\"#3-1-下载地址\" class=\"headerlink\" title=\"3.1 下载地址\"></a>3.1 下载地址</h2><p><a href=\"https://artifacts.elastic.co/downloads/beats/filebeat/metricBeat-7.6.0-linux-x86_64.tar.gz\">metricBeat-7.6.0-linux-x86_64</a></p>\n<h2 id=\"3-2-解压metricBeat-7-6-0-linux-x86-64\"><a href=\"#3-2-解压metricBeat-7-6-0-linux-x86-64\" class=\"headerlink\" title=\"3.2 解压metricBeat-7.6.0-linux-x86_64\"></a>3.2 解压metricBeat-7.6.0-linux-x86_64</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zvxf metricBeat-7.6.0-linux-x86_64.tar.gz -C /usr/elastic</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-3-使用Kibana展示Metricbeat系统指标\"><a href=\"#3-3-使用Kibana展示Metricbeat系统指标\" class=\"headerlink\" title=\"3.3 使用Kibana展示Metricbeat系统指标\"></a>3.3 使用Kibana展示Metricbeat系统指标</h2><ul>\n<li>修改Metricbeat配置</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output.elasticsearch:</span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\"> Array of hosts to connect to.</span></span><br><span class=\"line\">  hosts: [&quot;http://192.168.237.11:9200&quot;]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 metricbeat]$ ./metricbeat -e</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在Elasticsearch中查看采集的数据</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030707-906f151d4ab34f7c8bbcfea65d83f8e9.png\" alt=\"2020030707\"></p>\n<ul>\n<li>修改Metricbeat配置</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setup.kibana:</span><br><span class=\"line\">  host: &quot;192.168.237.11:5601&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装仪表盘</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./metricbeat setup --dashboards</span><br></pre></td></tr></table></figure>\n<ul>\n<li>重启服务查看效果</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030708-ba77ee4e36c6478c8b816a314d730f80.png\" alt=\"2020030708\"><br><img src=\"https://eelve.com/upload/2020/3/2020030709-a40f0d5711fc4707a416e2c39bbbcb79.png\" alt=\"2020030709\"></p>\n<p>到这里我们就监控了我们系统的指标，并且利用Kibana提供的仪表板做了图形化展示。</p>\n<h2 id=\"3-4-使用Kibana展示Metricbeat采集nginx指标\"><a href=\"#3-4-使用Kibana展示Metricbeat采集nginx指标\" class=\"headerlink\" title=\"3.4 使用Kibana展示Metricbeat采集nginx指标\"></a>3.4 使用Kibana展示Metricbeat采集nginx指标</h2><ul>\n<li><p>开启nginx的状态查询</p>\n<p>在nginx中，需要开启状态查询，才能查询到指标数据。</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">重新编译nginx</span></span><br><span class=\"line\">./configure --prefix=/usr/local/nginx --with-http_stub_status_module</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br><span class=\"line\"></span><br><span class=\"line\">./nginx -V #查询版本信息</span><br><span class=\"line\">nginx version: nginx/1.12.0</span><br><span class=\"line\">built by gcc 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC) </span><br><span class=\"line\">configure arguments: --prefix=/usr/local/nginx/ --with-http_stub_status_module</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">配置nginx</span></span><br><span class=\"line\">vi nginx.conf</span><br><span class=\"line\">location /nginx-status &#123;</span><br><span class=\"line\">    stub_status on;</span><br><span class=\"line\">    access_log off;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://eelve.com/upload/2020/3/2020030710-267475b4b77648ccb8d57c0fece62055.png\" alt=\"2020030710\"></p>\n<p>结果说明：</p>\n<ul>\n<li>Active connections：正在处理的活动连接数</li>\n<li>server accepts handled requests<ul>\n<li>第一个 server 表示Nginx启动到现在共处理了22个连接</li>\n<li>第二个 accepts 表示Nginx启动到现在共成功创建 22 次握手</li>\n<li>第三个 handled requests 表示总共处理了 193 次请求</li>\n<li>请求丢失数 = 握手数 - 连接数 ，可以看出目前为止没有丢失请求</li>\n</ul>\n</li>\n<li>Reading: 0 Writing: 1 Waiting: 2<ul>\n<li>Reading：Nginx 读取到客户端的 Header 信息数</li>\n<li>Writing：Nginx 返回给客户端 Header 信息数</li>\n<li>Waiting：Nginx 已经处理完正在等候下一次请求指令的驻留链接（开启keep-alive的情况下，这个值等于 Active - (Reading+Writing)）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>配置Nginx Module</p>\n<p>默认Metricbeat之开启了system modules，所以我们这里要手动启用nginx modules</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./metricbeat modules enable nginx</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 metricbeat]$ ./metricbeat modules list</span><br><span class=\"line\">Enabled:</span><br><span class=\"line\">nginx</span><br><span class=\"line\">system</span><br><span class=\"line\"></span><br><span class=\"line\">Disabled:</span><br><span class=\"line\">activemq</span><br><span class=\"line\">aerospike</span><br><span class=\"line\">apache</span><br><span class=\"line\">appsearch</span><br><span class=\"line\">aws</span><br><span class=\"line\">azure</span><br><span class=\"line\">beat</span><br><span class=\"line\">beat-xpack</span><br><span class=\"line\">ceph</span><br><span class=\"line\">cockroachdb</span><br><span class=\"line\">consul</span><br><span class=\"line\">coredns</span><br><span class=\"line\">couchbase</span><br><span class=\"line\">couchdb</span><br><span class=\"line\">docker</span><br><span class=\"line\">dropwizard</span><br><span class=\"line\">elasticsearch</span><br><span class=\"line\">elasticsearch-xpack</span><br><span class=\"line\">envoyproxy</span><br><span class=\"line\">etcd</span><br><span class=\"line\">golang</span><br><span class=\"line\">googlecloud</span><br><span class=\"line\">graphite</span><br><span class=\"line\">haproxy</span><br><span class=\"line\">http</span><br><span class=\"line\">jolokia</span><br><span class=\"line\">kafka</span><br><span class=\"line\">kibana</span><br><span class=\"line\">kibana-xpack</span><br><span class=\"line\">kubernetes</span><br><span class=\"line\">kvm</span><br><span class=\"line\">logstash</span><br><span class=\"line\">logstash-xpack</span><br><span class=\"line\">memcached</span><br><span class=\"line\">mongodb</span><br><span class=\"line\">mssql</span><br><span class=\"line\">munin</span><br><span class=\"line\">mysql</span><br><span class=\"line\">nats</span><br><span class=\"line\">oracle</span><br><span class=\"line\">php_fpm</span><br><span class=\"line\">postgresql</span><br><span class=\"line\">prometheus</span><br><span class=\"line\">rabbitmq</span><br><span class=\"line\">redis</span><br><span class=\"line\">sql</span><br><span class=\"line\">stan</span><br><span class=\"line\">statsd</span><br><span class=\"line\">tomcat</span><br><span class=\"line\">traefik</span><br><span class=\"line\">uwsgi</span><br><span class=\"line\">vsphere</span><br><span class=\"line\">windows</span><br><span class=\"line\">zookeeper</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改nginx modules的配置</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 modules.d]$ vi nginx.yml </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Module: nginx</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Docs: https://www.elastic.co/guide/en/beats/metricbeat/7.6/metricbeat-module-nginx.html</span></span><br><span class=\"line\"></span><br><span class=\"line\">- module: nginx</span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\">metricsets:</span></span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\">  - stubstatus</span></span><br><span class=\"line\">  period: 10s</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\"> Nginx hosts</span></span><br><span class=\"line\">  hosts: [&quot;http://192.168.237.11&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\"> Path to server status. Default server-status</span></span><br><span class=\"line\">  server_status_path: &quot;nginx-status&quot; #配置的nginx状态访问地址</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\">username: <span class=\"string\">&quot;user&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\">password: <span class=\"string\">&quot;secret&quot;</span></span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>启动测试</p>\n</li>\n</ul>\n<p><img src=\"https://eelve.com/upload/2020/3/2020030711-c1217270b05241ca96fa42f063ba8d9f.png\" alt=\"2020030711\"><br><img src=\"https://eelve.com/upload/2020/3/2020030712-8ae5730e5301448b974d67545ff98e7a.png\" alt=\"2020030712\"></p>\n<p>到这里我们采集的nginx的指标数据，并且利用Kibana安装的Metricbeatd的nginx仪表盘做了图形化展示。</p>\n<h1 id=\"肆、Metricbeat组成\"><a href=\"#肆、Metricbeat组成\" class=\"headerlink\" title=\"肆、Metricbeat组成\"></a>肆、Metricbeat组成</h1><p>Metricbeat有2部分组成，一部分是Module，另一部分为Metricset。</p>\n<ul>\n<li><p>Module</p>\n<p>收集的对象，如：mysql、redis、nginx、操作系统等；</p>\n</li>\n<li><p>Metricset</p>\n<p>收集指标的集合，如：cpu、memory、network等；  </p>\n</li>\n</ul>\n<hr>\n<p>【<strong>后面的话</strong>】在本文中我们利用Metricbeat监控了系统和nginx的系统指标，并且做了图标化的展示。其他module的使用也类似，他们都是利用Metricbeat给被监控的机器放松状态指令，然后采集数据，再做图形化的展示。同时我们也看到Merticbeat也内置了很多的module，足够了我们日工作需要了。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"hide","path":"api/categories/hide.json"}],"tags":[{"name":"hide","path":"api/tags/hide.json"}]},{"title":"Elastic Stack实战之Filebeat初体验","slug":"Elastic-Stack实战之Filebeat初体验","date":"2020-03-07T09:49:22.000Z","updated":"2023-09-30T08:39:39.667Z","comments":true,"path":"api/articles/Elastic-Stack实战之Filebeat初体验.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/animated-gif-logs-ui-optimized-7bf3c88845c84ee3a0564f7a608726b5.gif","content":"<p>【<strong>前面的话</strong>】<a href=\"https://eelve.com/posts/d1a5ff40.html\">前文</a>介绍了Elastic Stack的Beats家族，今天我们就来体验其中的专门用于采集文件的<a href=\"https://www.elastic.co/cn/beats/filebeat\">Filebeat</a>，走起。</p>\n<hr>\n<h1 id=\"壹、软件版本\"><a href=\"#壹、软件版本\" class=\"headerlink\" title=\"壹、软件版本\"></a>壹、软件版本</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">Centos：CentOS-7-x86_64-Minimal-1908</span></span><br><span class=\"line\"><span class=\"attr\">VM:</span> <span class=\"number\">15.5</span><span class=\"number\">.0</span> <span class=\"string\">build-14665864</span></span><br><span class=\"line\"><span class=\"attr\">Java:</span> <span class=\"number\">1.8</span><span class=\"string\">.0_211</span></span><br><span class=\"line\"><span class=\"attr\">Elasticsearch:</span> <span class=\"string\">elasticsearch-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Logstash:</span> <span class=\"string\">logstash-7.6.0</span></span><br><span class=\"line\"><span class=\"attr\">Kibana:</span> <span class=\"string\">kibana-7.6.0</span></span><br><span class=\"line\"><span class=\"string\">Filebeat：filebeat-7.6.0</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"贰、Filebeat介绍\"><a href=\"#贰、Filebeat介绍\" class=\"headerlink\" title=\"贰、Filebeat介绍\"></a>贰、Filebeat介绍</h1><p>Filebeat是一种轻量型日志采集器，具有以下特点</p>\n<ul>\n<li>汇总、“tail -f”和搜索：启动 Filebeat 后，打开 Logs UI，直接在 Kibana 中观看对您的文件进行 tail 操作的过程。通过搜索栏按照服务、应用程序、主机、数据中心或者其他条件进行筛选，以跟踪您的全部汇总日志中的异常行为。</li>\n</ul>\n<p><img src=\"https://image.eelve.com/eblog/animated-gif-logs-ui-optimized-7bf3c88845c84ee3a0564f7a608726b5.gif\" alt=\"animated-gif-logs-ui-optimized\"></p>\n<ul>\n<li><p>性能稳健，不错过任何检测信号：无论在任何环境中，随时都潜伏着应用程序中断的风险。Filebeat 能够读取并转发日志行，如果出现中断，还会在一切恢复正常后，从中断前停止的位置继续开始。</p>\n</li>\n<li><p>Filebeat 让简单的事情简单化：Filebeat 内置有多种模块（Apache、Cisco ASA、Microsoft Azure、NGINX、MySQL 等等），可针对常见格式的日志大大简化收集、解析和可视化过程，只需一条命令即可。之所以能实现这一点，是因为它将自动默认路径（因操作系统而异）与 Elasticsearch 采集节点管道的定义和 Kibana 仪表板组合在一起。不仅如此，数个 Filebeat 模块还包括预配置的 Machine Learning 任务。 </p>\n<ul>\n<li>系统</li>\n</ul>\n<p><img src=\"https://image.eelve.com/eblog/filebeat-modules-system-1fcfe648ed244a3eb6981805e48eb805.jpg\" alt=\"filebeat-modules-system\"></p>\n<ul>\n<li>NGINX</li>\n</ul>\n<p><img src=\"https://image.eelve.com/eblog/filebeat-modules-nginx-60aafcc8bf6e416e8489e30b85e84446.jpg\" alt=\"filebeat-modules-nginx\"></p>\n<ul>\n<li>MySQL</li>\n</ul>\n<p><img src=\"https://image.eelve.com/eblog/filebeat-modules-mysql-532077e16cc3495291fbe4c7b15e7f36.jpg\" alt=\"filebeat-modules-mysql\"></p>\n<ul>\n<li>Auditd</li>\n</ul>\n<p><img src=\"https://image.eelve.com/eblog/filebeat-modules-auditd-593f8272484b4aa4ac01bc3fcd596d43.jpg\" alt=\"filebeat-modules-auditd\"></p>\n</li>\n</ul>\n<ul>\n<li><p>容器就绪和云端就绪：正在对所有内容进行容器化，或者正在云端环境中运行？通过 Elastic Stack，可以轻松地监测容器和云服务。在 Kubernetes、Docker 或云端部署中部署 Filebeat，即可获得所有的日志流：信息十分完整，包括日志流的 pod、容器、节点、VM、主机以及自动关联时用到的其他元数据。此外，Beats Autodiscover 功能可检测到新容器，并使用恰当的 Filebeat 模块对这些容器进行自适应监测。 </p>\n</li>\n<li><p>它不会导致您的管道过载：当将数据发送到 Logstash 或 Elasticsearch 时，Filebeat 使用背压敏感协议，以应对更多的数据量。如果 Logstash 正在忙于处理数据，则会告诉 Filebeat 减慢读取速度。一旦拥堵得到解决，Filebeat 就会恢复到原来的步伐并继续传输数据。 </p>\n</li>\n</ul>\n<p><img src=\"https://image.eelve.com/eblog/filebeat-diagram-71397eba004043f3a0593620b0139364.svg\" alt=\"filebeat-diagram\"></p>\n<ul>\n<li><p>输送至 Elasticsearch 或 Logstash。在 Kibana 中实现可视化。</p>\n<p>Filebeat 是 Elastic Stack 的一部分，因此能够与 Logstash、Elasticsearch 和 Kibana 无缝协作。无论您要使用 Logstash 转换或充实日志和文件，还是在 Elasticsearch 中随意处理一些数据分析，亦或在 Kibana 中构建和分享仪表板，Filebeat 都能轻松地将您的数据发送至最关键的地方。</p>\n</li>\n</ul>\n<h1 id=\"叁-Filebeat安装\"><a href=\"#叁-Filebeat安装\" class=\"headerlink\" title=\"叁 Filebeat安装\"></a>叁 Filebeat安装</h1><h2 id=\"3-1-下载地址\"><a href=\"#3-1-下载地址\" class=\"headerlink\" title=\"3.1 下载地址\"></a>3.1 下载地址</h2><p><a href=\"https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.6.0-linux-x86_64.tar.gz\">filebeat-7.6.0-linux-x86_64</a></p>\n<h2 id=\"3-2-解压filebeat-7-6-0-linux-x86-64\"><a href=\"#3-2-解压filebeat-7-6-0-linux-x86-64\" class=\"headerlink\" title=\"3.2 解压filebeat-7.6.0-linux-x86_64\"></a>3.2 解压filebeat-7.6.0-linux-x86_64</h2><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zvxf filebeat-7.6.0-linux-x86_64.tar.gz -C /usr/elastic</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-3-filebeat配置\"><a href=\"#3-3-filebeat配置\" class=\"headerlink\" title=\"3.3 filebeat配置\"></a>3.3 filebeat配置</h2><p>我们可以针对不同的采集项自定义配置，同时方便测试和展示。</p>\n<h2 id=\"3-4-采集控制台日志\"><a href=\"#3-4-采集控制台日志\" class=\"headerlink\" title=\"3.4 采集控制台日志\"></a>3.4 采集控制台日志</h2><ul>\n<li>新建std.yml配置</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filebeat.inputs:</span><br><span class=\"line\">- type: stdin</span><br><span class=\"line\">  enabled: true</span><br><span class=\"line\">setup.template.settings:</span><br><span class=\"line\">  index.number_of_shards: 1</span><br><span class=\"line\">output.console:</span><br><span class=\"line\">  pretty: true</span><br><span class=\"line\">  enable: true</span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./filebeat  -e -c std.yml</span><br></pre></td></tr></table></figure>\n<ul>\n<li>结果</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hello</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;@timestamp&quot;: &quot;2020-03-07T08:40:10.807Z&quot;,</span><br><span class=\"line\">  &quot;@metadata&quot;: &#123;</span><br><span class=\"line\">    &quot;beat&quot;: &quot;filebeat&quot;,</span><br><span class=\"line\">    &quot;type&quot;: &quot;_doc&quot;,</span><br><span class=\"line\">    &quot;version&quot;: &quot;7.6.0&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;agent&quot;: &#123;</span><br><span class=\"line\">    &quot;id&quot;: &quot;4f346e18-c77b-4a8c-ae9a-f97b2007be60&quot;,</span><br><span class=\"line\">    &quot;version&quot;: &quot;7.6.0&quot;,</span><br><span class=\"line\">    &quot;type&quot;: &quot;filebeat&quot;,</span><br><span class=\"line\">    &quot;ephemeral_id&quot;: &quot;2b5dd30b-1a9a-454a-a9f1-0a428fd6c6da&quot;,</span><br><span class=\"line\">    &quot;hostname&quot;: &quot;192.168.237.11&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;ecs&quot;: &#123;</span><br><span class=\"line\">    &quot;version&quot;: &quot;1.4.0&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;message&quot;: &quot;hello&quot;,</span><br><span class=\"line\">  &quot;log&quot;: &#123;</span><br><span class=\"line\">    &quot;offset&quot;: 0,</span><br><span class=\"line\">    &quot;file&quot;: &#123;</span><br><span class=\"line\">      &quot;path&quot;: &quot;&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;input&quot;: &#123;</span><br><span class=\"line\">    &quot;type&quot;: &quot;stdin&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;host&quot;: &#123;</span><br><span class=\"line\">    &quot;name&quot;: &quot;192.168.237.11&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-5-采集nginx日志\"><a href=\"#3-5-采集nginx日志\" class=\"headerlink\" title=\"3.5 采集nginx日志\"></a>3.5 采集nginx日志</h2><ul>\n<li><p>启动nginx</p>\n<p>这里如果没有安装的话，可以自行安装配置，然后启动nginx</p>\n</li>\n<li><p>新建nginx.yml配置</p>\n</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filebeat.inputs:</span><br><span class=\"line\">- type: log</span><br><span class=\"line\">  enabled: true</span><br><span class=\"line\">  paths:</span><br><span class=\"line\">    - /usr/local/nginx/logs/*.log</span><br><span class=\"line\">  tags: [&quot;nginx&quot;]</span><br><span class=\"line\">setup.template.settings:</span><br><span class=\"line\">  index.number_of_shards: 1</span><br><span class=\"line\">output.elasticsearch:</span><br><span class=\"line\">  hosts: [&quot;http://192.168.237.11:9200&quot;]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动Elasticsearch</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 bin]$ ./elasticsearch</span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动Filebeat</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 filebeat]$ ./filebeat  -e -c nginx.yml</span><br><span class=\"line\"></span><br><span class=\"line\">2020-03-07T17:11:05.821+0800\tINFO\tinstance/beat.go:298\tSetup Beat: filebeat; Version: 7.6.0</span><br><span class=\"line\">2020-03-07T17:11:05.821+0800\tINFO\t[index-management]\tidxmgmt/std.go:182\tSet output.elasticsearch.index to &#x27;filebeat-7.6.0&#x27; as ILM is enabled.</span><br><span class=\"line\">2020-03-07T17:11:05.821+0800\tINFO\telasticsearch/client.go:174\tElasticsearch url: http://192.168.237.11:9200</span><br><span class=\"line\">2020-03-07T17:11:05.821+0800\tINFO\t[publisher]\tpipeline/module.go:110\tBeat name: 192.168.237.11</span><br><span class=\"line\">2020-03-07T17:11:05.822+0800\tINFO\t[monitoring]\tlog/log.go:118\tStarting metrics logging every 30s</span><br><span class=\"line\">2020-03-07T17:11:05.822+0800\tINFO\tinstance/beat.go:439\tfilebeat start running.</span><br><span class=\"line\">2020-03-07T17:11:05.822+0800\tINFO\tregistrar/registrar.go:145\tLoading registrar data from /usr/elastic/filebeat/data/registry/filebeat/data.json</span><br><span class=\"line\">2020-03-07T17:11:05.822+0800\tINFO\tregistrar/registrar.go:152\tStates Loaded from registrar: 3</span><br><span class=\"line\">2020-03-07T17:11:05.822+0800\tINFO\tcrawler/crawler.go:72\tLoading Inputs: 1</span><br><span class=\"line\">2020-03-07T17:11:05.823+0800\tINFO\tlog/input.go:152\tConfigured paths: [/usr/local/nginx/logs/*.log]</span><br><span class=\"line\">2020-03-07T17:11:05.823+0800\tINFO\tinput/input.go:114\tStarting input of type: log; ID: 11194696681404026286 </span><br><span class=\"line\">2020-03-07T17:11:05.823+0800\tINFO\tcrawler/crawler.go:106\tLoading and starting Inputs completed. Enabled inputs: 1</span><br><span class=\"line\">2020-03-07T17:11:15.826+0800\tINFO\tlog/harvester.go:297\tHarvester started for file: /usr/local/nginx/logs/access.log</span><br><span class=\"line\">2020-03-07T17:11:16.828+0800\tINFO\tpipeline/output.go:95\tConnecting to backoff(elasticsearch(http://192.168.237.11:9200))</span><br><span class=\"line\">2020-03-07T17:11:16.831+0800\tINFO\telasticsearch/client.go:757\tAttempting to connect to Elasticsearch version 7.6.0</span><br><span class=\"line\">2020-03-07T17:11:16.859+0800\tINFO\t[license]\tlicenser/es_callback.go:50\tElasticsearch license: Basic</span><br><span class=\"line\">2020-03-07T17:11:16.891+0800\tINFO\t[index-management]\tidxmgmt/std.go:258\tAuto ILM enable success.</span><br><span class=\"line\">2020-03-07T17:11:16.892+0800\tINFO\t[index-management.ilm]\tilm/std.go:139\tdo not generate ilm policy: exists=true, overwrite=false</span><br><span class=\"line\">2020-03-07T17:11:16.893+0800\tINFO\t[index-management]\tidxmgmt/std.go:271\tILM policy successfully loaded.</span><br><span class=\"line\">2020-03-07T17:11:16.893+0800\tINFO\t[index-management]\tidxmgmt/std.go:410\tSet setup.template.name to &#x27;&#123;filebeat-7.6.0 &#123;now/d&#125;-000001&#125;&#x27; as ILM is enabled.</span><br><span class=\"line\">2020-03-07T17:11:16.893+0800\tINFO\t[index-management]\tidxmgmt/std.go:415\tSet setup.template.pattern to &#x27;filebeat-7.6.0-*&#x27; as ILM is enabled.</span><br><span class=\"line\">2020-03-07T17:11:16.893+0800\tINFO\t[index-management]\tidxmgmt/std.go:449\tSet settings.index.lifecycle.rollover_alias in template to &#123;filebeat-7.6.0 &#123;now/d&#125;-000001&#125; as ILM is enabled.</span><br><span class=\"line\">2020-03-07T17:11:16.893+0800\tINFO\t[index-management]\tidxmgmt/std.go:453\tSet settings.index.lifecycle.name in template to &#123;filebeat &#123;&quot;policy&quot;:&#123;&quot;phases&quot;:&#123;&quot;hot&quot;:&#123;&quot;actions&quot;:&#123;&quot;rollover&quot;:&#123;&quot;max_age&quot;:&quot;30d&quot;,&quot;max_size&quot;:&quot;50gb&quot;&#125;&#125;&#125;&#125;&#125;&#125;&#125; as ILM is enabled.</span><br><span class=\"line\">2020-03-07T17:11:16.895+0800\tINFO\ttemplate/load.go:89\tTemplate filebeat-7.6.0 already exists and will not be overwritten.</span><br><span class=\"line\">2020-03-07T17:11:16.895+0800\tINFO\t[index-management]\tidxmgmt/std.go:295\tLoaded index template.</span><br><span class=\"line\">2020-03-07T17:11:17.097+0800\tINFO\t[index-management]\tidxmgmt/std.go:306\tWrite alias successfully generated.</span><br><span class=\"line\">2020-03-07T17:11:17.097+0800\tINFO\tpipeline/output.go:105\tConnection to backoff(elasticsearch(http://192.168.237.11:9200)) established</span><br></pre></td></tr></table></figure>\n<ul>\n<li>刷新页面观察结果</li>\n</ul>\n<p><img src=\"https://image.eelve.com/eblog/2020030701-f6f0c410456c47e7872c7719e1fe4205.png\" alt=\"2020030701\"><br><img src=\"https://image.eelve.com/eblog/2020030702-c17fe51d42ca47a3b4c452fa14131e92.png\" alt=\"2020030702\"></p>\n<p>我们可以看到采集已经成功，并且我们配置的tags也已经成功了</p>\n<h2 id=\"3-6-使用nginx-module采集nginx日志\"><a href=\"#3-6-使用nginx-module采集nginx日志\" class=\"headerlink\" title=\"3.6 使用nginx module采集nginx日志\"></a>3.6 使用nginx module采集nginx日志</h2><ul>\n<li>开启filebeat的nginx module</li>\n</ul>\n<p>前面要想实现日志数据的读取以及处理都是自己手动配置的，其实，在Filebeat中，有大量的Module，可以简化我们的配置，直接就可以使用，如下：</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 filebeat]$ ./filebeat modules list</span><br><span class=\"line\">Enabled:</span><br><span class=\"line\">nginx</span><br><span class=\"line\"></span><br><span class=\"line\">Disabled:</span><br><span class=\"line\">activemq</span><br><span class=\"line\">apache</span><br><span class=\"line\">auditd</span><br><span class=\"line\">aws</span><br><span class=\"line\">azure</span><br><span class=\"line\">cef</span><br><span class=\"line\">cisco</span><br><span class=\"line\">coredns</span><br><span class=\"line\">elasticsearch</span><br><span class=\"line\">envoyproxy</span><br><span class=\"line\">googlecloud</span><br><span class=\"line\">haproxy</span><br><span class=\"line\">ibmmq</span><br><span class=\"line\">icinga</span><br><span class=\"line\">iis</span><br><span class=\"line\">iptables</span><br><span class=\"line\">kafka</span><br><span class=\"line\">kibana</span><br><span class=\"line\">logstash</span><br><span class=\"line\">misp</span><br><span class=\"line\">mongodb</span><br><span class=\"line\">mssql</span><br><span class=\"line\">mysql</span><br><span class=\"line\">nats</span><br><span class=\"line\">netflow</span><br><span class=\"line\">osquery</span><br><span class=\"line\">panw</span><br><span class=\"line\">postgresql</span><br><span class=\"line\">rabbitmq</span><br><span class=\"line\">redis</span><br><span class=\"line\">santa</span><br><span class=\"line\">suricata</span><br><span class=\"line\">system</span><br><span class=\"line\">traefik</span><br><span class=\"line\">zeek</span><br></pre></td></tr></table></figure>\n<p>可以看到我这里的nginx modules已经开启了，但是默认是没有开启的，如果需要启用需要进行enable操作：</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/filebeat modules enable nginx #启动</span><br><span class=\"line\">./filebeat modules disable nginx #禁用</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>nginx module 配置</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 filebeat]$ cd modules.d</span><br><span class=\"line\">[iio@192 modules.d]$ vi nginx.yml </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Module: nginx</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Docs: https://www.elastic.co/guide/en/beats/filebeat/7.6/filebeat-module-nginx.html</span></span><br><span class=\"line\"></span><br><span class=\"line\">- module: nginx</span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\"> Access logs</span></span><br><span class=\"line\">  access:</span><br><span class=\"line\">    enabled: true</span><br><span class=\"line\">    var.paths: [&quot;/usr/local/nginx/logs/access.log*&quot;]</span><br><span class=\"line\">    # Set custom paths for the log files. If left empty,</span><br><span class=\"line\">    # Filebeat will choose the paths depending on your OS.</span><br><span class=\"line\">    #var.paths:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\"> Error logs</span></span><br><span class=\"line\">  error:</span><br><span class=\"line\">    enabled: true</span><br><span class=\"line\">    var.paths: [&quot;/usr/local/nginx/logs/error.log*&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">    # Set custom paths for the log files. If left empty,</span><br><span class=\"line\">    # Filebeat will choose the paths depending on your OS.</span><br><span class=\"line\">    #var.paths:</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>配置filebeat</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 filebeat]$ vi nginxmodule.yml</span><br><span class=\"line\">filebeat.inputs:</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">- <span class=\"built_in\">type</span>: <span class=\"built_in\">log</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  enabled: <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  paths:</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    - /usr/<span class=\"built_in\">local</span>/nginx/logs/*.<span class=\"built_in\">log</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  tags: [<span class=\"string\">&quot;nginx&quot;</span>]</span></span><br><span class=\"line\">setup.template.settings:</span><br><span class=\"line\">  index.number_of_shards: 1</span><br><span class=\"line\">output.elasticsearch:</span><br><span class=\"line\">  hosts: [&quot;http://192.168.237.11:9200&quot;]</span><br><span class=\"line\">filebeat.config.modules:</span><br><span class=\"line\">  path: $&#123;path.config&#125;/modules.d/*.yml</span><br><span class=\"line\">  reload.enabled: false</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 filebeat]$ ./filebeat  -e -c nginxmodule.yml</span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看结果</li>\n</ul>\n<p><img src=\"https://image.eelve.com/eblog/2020030703-14356801335d4ea8a4256bce80a9bf5f.png\" alt=\"2020030703\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t&quot;msg&quot;: &quot;2020-02-29 02:30:26,634 [myid:] - WARN  [NIOServerCxn.Factory:0.0.0.0\\&#x2F;0.0.0.0:2181:NIOServerCnxn@376] - Unable to read additional data from client sessionid 0x0, likely client has closed socket&quot;,</span><br><span class=\"line\">\t&quot;rawmsg&quot;: &quot;2020-02-29 02:30:26,634 [myid:] - WARN  [NIOServerCxn.Factory:0.0.0.0\\&#x2F;0.0.0.0:2181:NIOServerCnxn@376] - Unable to read additional data from client sessionid 0x0, likely client has closed socket&quot;,</span><br><span class=\"line\">\t&quot;timereported&quot;: &quot;2020-02-29T10:30:26.635186+08:00&quot;,</span><br><span class=\"line\">\t&quot;hostname&quot;: &quot;izbp1a4b02uc2nj550yzs1z&quot;,</span><br><span class=\"line\">\t&quot;syslogtag&quot;: &quot;journal:&quot;,</span><br><span class=\"line\">\t&quot;inputname&quot;: &quot;imjournal&quot;,</span><br><span class=\"line\">\t&quot;fromhost&quot;: &quot;izbp1a4b02uc2nj550yzs1z&quot;,</span><br><span class=\"line\">\t&quot;fromhost-ip&quot;: &quot;127.0.0.1&quot;,</span><br><span class=\"line\">\t&quot;pri&quot;: &quot;14&quot;,</span><br><span class=\"line\">\t&quot;syslogfacility&quot;: &quot;1&quot;,</span><br><span class=\"line\">\t&quot;syslogseverity&quot;: &quot;6&quot;,</span><br><span class=\"line\">\t&quot;timegenerated&quot;: &quot;2020-02-29T10:30:26.635186+08:00&quot;,</span><br><span class=\"line\">\t&quot;programname&quot;: &quot;journal&quot;,</span><br><span class=\"line\">\t&quot;protocol-version&quot;: &quot;0&quot;,</span><br><span class=\"line\">\t&quot;structured-data&quot;: &quot;-&quot;,</span><br><span class=\"line\">\t&quot;app-name&quot;: &quot;journal&quot;,</span><br><span class=\"line\">\t&quot;procid&quot;: &quot;-&quot;,</span><br><span class=\"line\">\t&quot;msgid&quot;: &quot;-&quot;,</span><br><span class=\"line\">\t&quot;uuid&quot;: null,</span><br><span class=\"line\">\t&quot;$!&quot;: &#123;</span><br><span class=\"line\">\t\t&quot;_UID&quot;: &quot;0&quot;,</span><br><span class=\"line\">\t\t&quot;_GID&quot;: &quot;0&quot;,</span><br><span class=\"line\">\t\t&quot;_CAP_EFFECTIVE&quot;: &quot;1fffffffff&quot;,</span><br><span class=\"line\">\t\t&quot;_BOOT_ID&quot;: &quot;1c6d86e336cc4dc7b733ea3c53351d65&quot;,</span><br><span class=\"line\">\t\t&quot;_MACHINE_ID&quot;: &quot;f0f31005fb5a436d88e3c6cbf54e25aa&quot;,</span><br><span class=\"line\">\t\t&quot;_HOSTNAME&quot;: &quot;izbp1a4b02uc2nj550yzs1z&quot;,</span><br><span class=\"line\">\t\t&quot;_SYSTEMD_SLICE&quot;: &quot;system.slice&quot;,</span><br><span class=\"line\">\t\t&quot;PRIORITY&quot;: &quot;6&quot;,</span><br><span class=\"line\">\t\t&quot;_TRANSPORT&quot;: &quot;journal&quot;,</span><br><span class=\"line\">\t\t&quot;CONTAINER_ID_FULL&quot;: &quot;bdc76f9b56dbeb3f5005ca110d72945c6b949178b6948345febf5bc657433703&quot;,</span><br><span class=\"line\">\t\t&quot;CONTAINER_NAME&quot;: &quot;zookeeper&quot;,</span><br><span class=\"line\">\t\t&quot;CONTAINER_TAG&quot;: &quot;bdc76f9b56db&quot;,</span><br><span class=\"line\">\t\t&quot;CONTAINER_ID&quot;: &quot;bdc76f9b56db&quot;,</span><br><span class=\"line\">\t\t&quot;_PID&quot;: &quot;16046&quot;,</span><br><span class=\"line\">\t\t&quot;_COMM&quot;: &quot;dockerd-current&quot;,</span><br><span class=\"line\">\t\t&quot;_EXE&quot;: &quot;\\&#x2F;usr\\&#x2F;bin\\&#x2F;dockerd-current&quot;,</span><br><span class=\"line\">\t\t&quot;_CMDLINE&quot;: &quot;\\&#x2F;usr\\&#x2F;bin\\&#x2F;dockerd-current --add-runtime docker-runc&#x3D;\\&#x2F;usr\\&#x2F;libexec\\&#x2F;docker\\&#x2F;docker-runc-current --default-runtime&#x3D;docker-runc --exec-opt native.cgroupdriver&#x3D;systemd --userland-proxy-path&#x3D;\\&#x2F;usr\\&#x2F;libexec\\&#x2F;docker\\&#x2F;docker-proxy-current --init-path&#x3D;\\&#x2F;usr\\&#x2F;libexec\\&#x2F;docker\\&#x2F;docker-init-current --seccomp-profile&#x3D;\\&#x2F;etc\\&#x2F;docker\\&#x2F;seccomp.json --selinux-enabled --log-driver&#x3D;journald --signature-verification&#x3D;false --storage-driver overlay2&quot;,</span><br><span class=\"line\">\t\t&quot;_SYSTEMD_CGROUP&quot;: &quot;\\&#x2F;system.slice\\&#x2F;docker.service&quot;,</span><br><span class=\"line\">\t\t&quot;_SYSTEMD_UNIT&quot;: &quot;docker.service&quot;,</span><br><span class=\"line\">\t\t&quot;MESSAGE&quot;: &quot;2020-02-29 02:30:26,634 [myid:] - WARN  [NIOServerCxn.Factory:0.0.0.0\\&#x2F;0.0.0.0:2181:NIOServerCnxn@376] - Unable to read additional data from client sessionid 0x0, likely client has closed socket&quot;,</span><br><span class=\"line\">\t\t&quot;_SOURCE_REALTIME_TIMESTAMP&quot;: &quot;1582943426634852&quot;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125; &#123;</span><br><span class=\"line\">\t&quot;_index&quot;: &quot;filebeat-7.6.0-2020.03.07-000001&quot;,</span><br><span class=\"line\">\t&quot;_type&quot;: &quot;_doc&quot;,</span><br><span class=\"line\">\t&quot;_id&quot;: &quot;hBtStHAB2wqxgggKYbTw&quot;,</span><br><span class=\"line\">\t&quot;_version&quot;: 1,</span><br><span class=\"line\">\t&quot;_score&quot;: 1,</span><br><span class=\"line\">\t&quot;_source&quot;: &#123;</span><br><span class=\"line\">\t\t&quot;agent&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;hostname&quot;: &quot;192.168.237.11&quot;,</span><br><span class=\"line\">\t\t\t&quot;id&quot;: &quot;4f346e18-c77b-4a8c-ae9a-f97b2007be60&quot;,</span><br><span class=\"line\">\t\t\t&quot;ephemeral_id&quot;: &quot;b9759c98-cfbe-4240-8c7d-1e64c1caeec3&quot;,</span><br><span class=\"line\">\t\t\t&quot;type&quot;: &quot;filebeat&quot;,</span><br><span class=\"line\">\t\t\t&quot;version&quot;: &quot;7.6.0&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;nginx&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;access&quot;: &#123;</span><br><span class=\"line\">\t\t\t\t&quot;remote_ip_list&quot;: [</span><br><span class=\"line\">\t\t\t\t\t&quot;192.168.237.1&quot;</span><br><span class=\"line\">\t\t\t\t]</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;log&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;file&quot;: &#123;</span><br><span class=\"line\">\t\t\t\t&quot;path&quot;: &quot;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;logs&#x2F;access.log&quot;</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&quot;offset&quot;: 83567</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;source&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;address&quot;: &quot;192.168.237.1&quot;,</span><br><span class=\"line\">\t\t\t&quot;ip&quot;: &quot;192.168.237.1&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;fileset&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;name&quot;: &quot;access&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;url&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;original&quot;: &quot;&#x2F;&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;input&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;type&quot;: &quot;log&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;@timestamp&quot;: &quot;2020-03-07T09:27:40.000Z&quot;,</span><br><span class=\"line\">\t\t&quot;ecs&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;version&quot;: &quot;1.4.0&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;service&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;type&quot;: &quot;nginx&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;host&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;name&quot;: &quot;192.168.237.11&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;http&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;request&quot;: &#123;</span><br><span class=\"line\">\t\t\t\t&quot;referrer&quot;: &quot;-&quot;,</span><br><span class=\"line\">\t\t\t\t&quot;method&quot;: &quot;GET&quot;</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&quot;response&quot;: &#123;</span><br><span class=\"line\">\t\t\t\t&quot;status_code&quot;: 304,</span><br><span class=\"line\">\t\t\t\t&quot;body&quot;: &#123;</span><br><span class=\"line\">\t\t\t\t\t&quot;bytes&quot;: 0</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&quot;version&quot;: &quot;1.1&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;event&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;timezone&quot;: &quot;+08:00&quot;,</span><br><span class=\"line\">\t\t\t&quot;created&quot;: &quot;2020-03-07T09:27:41.512Z&quot;,</span><br><span class=\"line\">\t\t\t&quot;module&quot;: &quot;nginx&quot;,</span><br><span class=\"line\">\t\t\t&quot;dataset&quot;: &quot;nginx.access&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;user&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;name&quot;: &quot;-&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&quot;user_agent&quot;: &#123;</span><br><span class=\"line\">\t\t\t&quot;original&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;80.0.3987.132 Safari&#x2F;537.36&quot;,</span><br><span class=\"line\">\t\t\t&quot;os&quot;: &#123;</span><br><span class=\"line\">\t\t\t\t&quot;name&quot;: &quot;Windows&quot;,</span><br><span class=\"line\">\t\t\t\t&quot;version&quot;: &quot;10&quot;,</span><br><span class=\"line\">\t\t\t\t&quot;full&quot;: &quot;Windows 10&quot;</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&quot;name&quot;: &quot;Chrome&quot;,</span><br><span class=\"line\">\t\t\t&quot;device&quot;: &#123;</span><br><span class=\"line\">\t\t\t\t&quot;name&quot;: &quot;Other&quot;</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&quot;version&quot;: &quot;80.0.3987.132&quot;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们开用使用filebeat提供的modules采集nginx日志也成功,而且可以看到展示的信息也更加完善了。可以看到filebeat提供的各种modules就是帮我们做了一些解析工作，其他modules的用法类似。</p>\n<h2 id=\"3-7-使用Kibana展示\"><a href=\"#3-7-使用Kibana展示\" class=\"headerlink\" title=\"3.7 使用Kibana展示\"></a>3.7 使用Kibana展示</h2><ul>\n<li>修改filebeat配置</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[iio@192 filebeat]$ vi iio.yml </span><br><span class=\"line\"></span><br><span class=\"line\">filebeat.inputs:</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">- <span class=\"built_in\">type</span>: <span class=\"built_in\">log</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  enabled: <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  paths:</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    - /usr/<span class=\"built_in\">local</span>/nginx/logs/*.<span class=\"built_in\">log</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  tags: [<span class=\"string\">&quot;nginx&quot;</span>]</span></span><br><span class=\"line\">setup.template.settings:</span><br><span class=\"line\">  index.number_of_shards: 1</span><br><span class=\"line\">output.elasticsearch:</span><br><span class=\"line\">  hosts: [&quot;http://192.168.237.11:9200&quot;]</span><br><span class=\"line\">filebeat.config.modules:</span><br><span class=\"line\">  path: $&#123;path.config&#125;/modules.d/*.yml</span><br><span class=\"line\">  reload.enabled: false</span><br><span class=\"line\">setup.kibana:</span><br><span class=\"line\">  host: &quot;192.168.237.11:5601&quot;</span><br><span class=\"line\">~   </span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动Kibana</li>\n</ul>\n<p>下面的安装仪表板依赖Kibana，也就是Kibana必须启动才能安装仪表盘</p>\n<ul>\n<li>安装仪表盘</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#安装仪表盘到Kibana</span><br><span class=\"line\">.&#x2F;metricbeat setup --dashboards</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://image.eelve.com/eblog/2020030704-84aabcd7f21a4af0ab1ccb694e2f5f47.png\" alt=\"2020030704\"></p>\n<ul>\n<li>启动Filebeat</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./filebeat  -e -c iio.yml</span><br></pre></td></tr></table></figure>\n<ul>\n<li>观察结果</li>\n</ul>\n<p><img src=\"https://image.eelve.com/eblog/2020030705-77c1f59279aa40d4b8319560da4a6ae5.png\" alt=\"2020030705\"><br><img src=\"https://image.eelve.com/eblog/2020030706-9f858efbcaba4dd898b07e54c2f42a0d.png\" alt=\"2020030706\"></p>\n<p>可以看到Kibana内置的nginx的仪表盘的展示情况，展示相当仿佛，并且还可以随着时间变化而刷新</p>\n<h1 id=\"肆、Filebeat工作原理\"><a href=\"#肆、Filebeat工作原理\" class=\"headerlink\" title=\"肆、Filebeat工作原理\"></a>肆、Filebeat工作原理</h1><p>Filebeat由两个主要组件组成：prospector 和 harvester。</p>\n<ul>\n<li><p>harvester：</p>\n<ul>\n<li>负责读取单个文件的内容。</li>\n<li>如果文件在读取时被删除或重命名，Filebeat将继续读取文件。</li>\n</ul>\n</li>\n<li><p>prospector：</p>\n<ul>\n<li>prospector 负责管理harvester并找到所有要读取的文件来源。</li>\n<li>如果输入类型为日志，则查找器将查找路径匹配的所有文件，并为每个文件启动一个harvester。</li>\n<li>Filebeat目前支持两种prospector类型：log和stdin。</li>\n</ul>\n</li>\n<li><p>Filebeat如何保持文件的状态</p>\n<ul>\n<li>Filebeat 保存每个文件的状态并经常将状态刷新到磁盘上的注册文件中。</li>\n<li>该状态用于记住harvester正在读取的最后偏移量，并确保发送所有日志行。</li>\n<li>如果输出（例如Elasticsearch或Logstash）无法访问，Filebeat会跟踪最后发送的行，并在输出再次可用时继续读取文件。</li>\n<li>在Filebeat运行时，每个prospector内存中也会保存的文件状态信息，当重新启动Filebeat时，将使用注册</li>\n<li>文件的数据来重建文件状态，Filebeat将每个harvester在从保存的最后偏移量继续读取。</li>\n<li>文件状态记录在data/registry文件中。</li>\n</ul>\n<p>```shell script<br>启动命令<br>./filebeat -e -c itcast.yml<br>./filebeat -e -c itcast.yml -d “publish”<br>#参数说明</p>\n</li>\n<li><p>e: 输出到标准输出,默认输出到syslog和logs下</p>\n</li>\n<li><p>c: 指定配置文件</p>\n</li>\n<li><p>d: 输出debug信息</p>\n</li>\n</ul>\n<p>#测试： ./filebeat -e -c iio.yml -d “publish”</p>\n<pre><code>\n---\n\n【**后面的话**】在本文中我们全面的体验了一下filebeat，还和Kibana结合应用了，我们可以看到filebeat和elk三大剑客整合的非常好，特别是Kibana提供了丰富的仪表盘，大大的方便了我们展示。后面还有再结合一下Logstash，使用以下过滤功能。\n\n---\n\n![薏米笔记](https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png)\n</code></pre>\n","raw":null,"categories":[{"name":"Elastic-Stack","path":"api/categories/Elastic-Stack.json"}],"tags":[{"name":"ELK","path":"api/tags/ELK.json"},{"name":"Beats","path":"api/tags/Beats.json"},{"name":"FileBeat","path":"api/tags/FileBeat.json"}]}]}