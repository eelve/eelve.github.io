{"total":77,"pageSize":10,"pageCount":8,"data":[{"title":"Spring Boot单体应用集成Sentinel熔断能力","slug":"SpringBoot单体应用集成Sentinel熔断能力","date":"2021-02-13T03:52:54.000Z","updated":"2023-09-30T08:39:39.682Z","comments":true,"path":"api/articles/SpringBoot单体应用集成Sentinel熔断能力.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png","content":"<p>【<strong>前面的话</strong>】在前文 <a href=\"https://eelve.com/posts/d2ca763d.html\">Sentinel入门指北</a> 中对<code>Sentinel</code>有了简单的了解之后，下面就<code>Spring Boot</code>单体应用集成<code>Sentinel</code>做一下简单的讨论。实际上官方已经提供了 <a href=\"https://github.com/alibaba/spring-cloud-alibaba/wiki/Sentinel\">Spring Cloud Alibaba Sentinel</a> ，然后在配合 <code>控制台</code> 就可以方便使用熔断能力。但是存在部分不想引入<code>控制台</code>的场景，此文就由此而来。</p>\n<hr>\n<h1 id=\"壹、总体设计\"><a href=\"#壹、总体设计\" class=\"headerlink\" title=\"壹、总体设计\"></a>壹、总体设计</h1><p><code>Sentinel</code>在官方提供了<code>API</code>用于动态修改熔断的规则，针对每种规则都有独有的<code>loadRules</code>方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Load &#123;<span class=\"doctag\">@link</span> FlowRule&#125;s, former rules will be replaced.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> rules new rules to load.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">loadRules</span><span class=\"params\">(List&lt;FlowRule&gt; rules)</span> </span>&#123;</span><br><span class=\"line\">    currentProperty.updateValue(rules);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Load &#123;<span class=\"doctag\">@link</span> DegradeRule&#125;s, former rules will be replaced.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> rules new rules to load.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">loadRules</span><span class=\"params\">(List&lt;DegradeRule&gt; rules)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        currentProperty.updateValue(rules);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Throwable e) &#123;</span><br><span class=\"line\">        RecordLog.error(<span class=\"string\">&quot;[DegradeRuleManager] Unexpected error when loading degrade rules&quot;</span>, e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>Sentiunel</code>还有一个缺点，就是熔断规则只缓存在内存中，当应用重启之后，规则就消失了。所以解决方法就是可以考虑讲规则持久化，官方也有相应的实现的方案：<a href=\"https://sentinelguard.io/zh-cn/docs/dynamic-rule-configuration.html\">动态规则扩展</a> 。我这里实现的方案则是将规则存在数据库中，并提供API方式修改规则。 </p>\n<h1 id=\"贰、实现细节\"><a href=\"#贰、实现细节\" class=\"headerlink\" title=\"贰、实现细节\"></a>贰、实现细节</h1><h2 id=\"2-1、pom依赖\"><a href=\"#2-1、pom依赖\" class=\"headerlink\" title=\"2.1、pom依赖\"></a>2.1、pom依赖</h2><blockquote>\n<p><code>sentinel-annotation-aspectj</code> 提供注解支持功能，并且其中包含了 <code>sentinel-core</code> 所以就不需要单独再引入了。 </p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba.csp<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>sentinel-annotation-aspectj<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.8.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-2、实体类\"><a href=\"#2-2、实体类\" class=\"headerlink\" title=\"2.2、实体类\"></a>2.2、实体类</h2><blockquote>\n<p>包括流控规则和降级规则的实体类</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.eelve.limiting.sentinel.entity;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.RuleConstant;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.flow.FlowRule;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.persistence.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.constraints.NotBlank;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.constraints.NotNull;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> zhaozhilue</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@Entity</span></span><br><span class=\"line\"><span class=\"meta\">@Table(name = &quot;flow_rule&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FlowRuleEntity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Id</span></span><br><span class=\"line\">    <span class=\"meta\">@GeneratedValue(strategy = GenerationType.AUTO)</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name=&quot;id&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Column(name=&quot;app&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String app;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Resource name.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name=&quot;resource&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@NotBlank</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String resource;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * Application name that will be limited by origin.</span></span><br><span class=\"line\"><span class=\"comment\">     * The default c is &#123;<span class=\"doctag\">@code</span> default&#125;, which means allowing all origin apps.</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * For authority rules, multiple origin name can be separated with comma (&#x27;,&#x27;).</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name=&quot;limit_app&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@NotBlank</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String limitApp;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * The threshold type of flow control (0: thread count, 1: QPS).</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;grade&quot;,columnDefinition=&quot;INT default 1&quot;,nullable = false)</span></span><br><span class=\"line\">    <span class=\"meta\">@NotNull</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer grade = RuleConstant.FLOW_GRADE_QPS;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Flow control threshold count.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;count&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@NotNull</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Double count;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Flow control strategy based on invocation chain.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@link</span> RuleConstant#STRATEGY_DIRECT&#125; for direct flow control (by origin);</span></span><br><span class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@link</span> RuleConstant#STRATEGY_RELATE&#125; for relevant flow control (with relevant resource);</span></span><br><span class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@link</span> RuleConstant#STRATEGY_CHAIN&#125; for chain flow control (by entrance resource).</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;strategy&quot;,columnDefinition=&quot;INT default 0&quot;,nullable = false)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer strategy = RuleConstant.STRATEGY_DIRECT;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Reference resource in flow control with relevant resource or context.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;ref_resource&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String refResource;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Rate limiter control behavior.</span></span><br><span class=\"line\"><span class=\"comment\">     * 0. default(reject directly), 1. warm up, 2. rate limiter, 3. warm up + rate limiter</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;control_behavior&quot;,columnDefinition=&quot;INT default 0&quot;,nullable = false)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer controlBehavior = RuleConstant.CONTROL_BEHAVIOR_DEFAULT;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;warm_up_period_sec&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer warmUpPeriodSec = <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Max queueing time in rate limiter behavior.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;max_queueing_time_ms&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer maxQueueingTimeMs = <span class=\"number\">500</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;cluster_mode&quot;,columnDefinition=&quot;BOOLEAN default false&quot;,nullable = false)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Boolean clusterMode = <span class=\"keyword\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> FlowRule <span class=\"title\">toRule</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        FlowRule flowRule = <span class=\"keyword\">new</span> FlowRule();</span><br><span class=\"line\">        flowRule.setCount(<span class=\"keyword\">this</span>.count);</span><br><span class=\"line\">        flowRule.setGrade(<span class=\"keyword\">this</span>.grade);</span><br><span class=\"line\">        flowRule.setResource(<span class=\"keyword\">this</span>.resource);</span><br><span class=\"line\">        flowRule.setLimitApp(<span class=\"keyword\">this</span>.limitApp);</span><br><span class=\"line\">        flowRule.setRefResource(<span class=\"keyword\">this</span>.refResource);</span><br><span class=\"line\">        flowRule.setStrategy(<span class=\"keyword\">this</span>.strategy);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.controlBehavior != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            flowRule.setControlBehavior(controlBehavior);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.warmUpPeriodSec != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            flowRule.setWarmUpPeriodSec(warmUpPeriodSec);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.maxQueueingTimeMs != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            flowRule.setMaxQueueingTimeMs(maxQueueingTimeMs);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        flowRule.setClusterMode(clusterMode);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> flowRule;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.eelve.limiting.sentinel.entity;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.RuleConstant;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.degrade.DegradeRule;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.persistence.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.constraints.NotBlank;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.constraints.NotNull;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> zhaozhilue</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@Entity</span></span><br><span class=\"line\"><span class=\"meta\">@Table(name = &quot;degrade_rule&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DegradeRuleEntity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Id</span></span><br><span class=\"line\">    <span class=\"meta\">@GeneratedValue(strategy = GenerationType.AUTO)</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name=&quot;id&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Column(name=&quot;app&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String app;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Resource name.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name=&quot;resource&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@NotBlank</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String resource;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * Application name that will be limited by origin.</span></span><br><span class=\"line\"><span class=\"comment\">     * The default limitApp is &#123;<span class=\"doctag\">@code</span> default&#125;, which means allowing all origin apps.</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * For authority rules, multiple origin name can be separated with comma (&#x27;,&#x27;).</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name=&quot;limit_app&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@NotBlank</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String limitApp;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Circuit breaking strategy (0: average RT, 1: exception ratio, 2: exception count).</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;grade&quot;,columnDefinition=&quot;INT default 0&quot;,nullable = false)</span></span><br><span class=\"line\">    <span class=\"meta\">@NotNull</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer grade = RuleConstant.DEGRADE_GRADE_RT;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Threshold count.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;count&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@NotNull</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Double count;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Recovery timeout (in seconds) when circuit breaker opens. After the timeout, the circuit breaker will</span></span><br><span class=\"line\"><span class=\"comment\">     * transform to half-open state for trying a few requests.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;timeWindow&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@NotNull</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer timeWindow;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Minimum number of requests (in an active statistic time span) that can trigger circuit breaking.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@since</span> 1.7.0</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;min_request_amount&quot;,columnDefinition=&quot;INT default 5&quot;,nullable = false)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer minRequestAmount = RuleConstant.DEGRADE_DEFAULT_MIN_REQUEST_AMOUNT;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * The threshold of slow request ratio in RT mode.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;slow_ratio_threshold&quot;,columnDefinition=&quot;DOUBLE default 1000&quot;,nullable = false)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Double slowRatioThreshold = <span class=\"number\">1.0d</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;stat_interval_ms&quot;,columnDefinition=&quot;INT default 1000&quot;,nullable = false)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer statIntervalMs = <span class=\"number\">1000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> DegradeRule <span class=\"title\">toRule</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        DegradeRule rule = <span class=\"keyword\">new</span> DegradeRule();</span><br><span class=\"line\">        rule.setResource(resource);</span><br><span class=\"line\">        rule.setLimitApp(limitApp);</span><br><span class=\"line\">        rule.setCount(count);</span><br><span class=\"line\">        rule.setTimeWindow(timeWindow);</span><br><span class=\"line\">        rule.setGrade(grade);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (minRequestAmount != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            rule.setMinRequestAmount(minRequestAmount);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (slowRatioThreshold != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            rule.setSlowRatioThreshold(slowRatioThreshold);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (statIntervalMs != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            rule.setStatIntervalMs(statIntervalMs);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> rule;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-3、核心规则变更\"><a href=\"#2-3、核心规则变更\" class=\"headerlink\" title=\"2.3、核心规则变更\"></a>2.3、核心规则变更</h2><blockquote>\n<p>主要是提供规则更新的工具类</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.eelve.limiting.sentinel.enums;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">RulesEnum</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    Flow(<span class=\"number\">1</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    Degrade(<span class=\"number\">2</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    System(<span class=\"number\">3</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    Authority(<span class=\"number\">4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> code;</span><br><span class=\"line\"></span><br><span class=\"line\">    RulesEnum(<span class=\"keyword\">int</span> code) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getCode</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.eelve.limiting.sentinel.util;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.AbstractRule;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.authority.AuthorityRule;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.authority.AuthorityRuleManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.degrade.DegradeRule;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.degrade.DegradeRuleManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.flow.FlowRule;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.flow.FlowRuleManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.system.SystemRule;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.system.SystemRuleManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.eelve.limiting.sentinel.enums.RulesEnum;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.java.Log;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> zhaozhilue</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Log</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RefreshRulesUtil</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T extends AbstractRule&gt; <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">refreshRule</span><span class=\"params\">(List&lt;T&gt; ruleList, RulesEnum rulesEnum)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;操作类型:&quot;</span>+rulesEnum.getCode() + <span class=\"string\">&quot;,ruleList:&quot;</span> + ruleList.toString());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (rulesEnum)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> Flow:</span><br><span class=\"line\">                FlowRuleManager.loadRules((List&lt;FlowRule&gt;) ruleList);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> Degrade:</span><br><span class=\"line\">                DegradeRuleManager.loadRules((List&lt;DegradeRule&gt;)ruleList);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> System:</span><br><span class=\"line\">                SystemRuleManager.loadRules((List&lt;SystemRule&gt;)ruleList);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> Authority:</span><br><span class=\"line\">                AuthorityRuleManager.loadRules((List&lt;AuthorityRule&gt;)ruleList);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                log.info(<span class=\"string\">&quot;无效操作&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-4、规则更新接口\"><a href=\"#2-4、规则更新接口\" class=\"headerlink\" title=\"2.4、规则更新接口\"></a>2.4、规则更新接口</h2><blockquote>\n<p>主要是提供接口给前端用于规则更新，并且包括更新内存中的熔断规则。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.eelve.limiting.sentinel.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.flow.FlowRule;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.eelve.limiting.sentinel.entity.FlowRuleEntity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.eelve.limiting.sentinel.enums.RulesEnum;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.eelve.limiting.sentinel.service.iml.FlowRuleServiceImpl;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.eelve.limiting.sentinel.util.RefreshRulesUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.eelve.limiting.sentinel.vo.JsonResult;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Collectors;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api/eelve/flow-rule&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FlowRuleController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> FlowRuleServiceImpl flowRuleService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/rules&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">allRules</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span></span>&#123;</span><br><span class=\"line\">        List&lt;FlowRule&gt; ruleList =  flowRuleService.allRules().stream().map(x -&gt; x.toRule()).collect(Collectors.toList());</span><br><span class=\"line\">        RefreshRulesUtil.refreshRule(ruleList, RulesEnum.Flow);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.ok().put(flowRuleService.allRules());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/rules&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">addRule</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@RequestBody</span> FlowRuleEntity flowRuleEntity)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 先添加，然后再查询出来批量更新</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        flowRuleService.addRule(flowRuleEntity);</span><br><span class=\"line\">        List&lt;FlowRule&gt; ruleList =  flowRuleService.allRules().stream().map(x -&gt; x.toRule()).collect(Collectors.toList());</span><br><span class=\"line\">        RefreshRulesUtil.refreshRule(ruleList, RulesEnum.Flow);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.ok().put(flowRuleEntity);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PutMapping(&quot;/rules&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">updateRule</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@RequestBody</span> FlowRuleEntity flowRuleEntity)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 先添加，然后再查询出来批量更新</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        flowRuleService.addRule(flowRuleEntity);</span><br><span class=\"line\">        List&lt;FlowRule&gt; ruleList =  flowRuleService.allRules().stream().map(x -&gt; x.toRule()).collect(Collectors.toList());</span><br><span class=\"line\">        RefreshRulesUtil.refreshRule(ruleList, RulesEnum.Flow);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.ok().put(flowRuleEntity);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@DeleteMapping(&quot;/rules/&#123;id&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">deleteRule</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@PathVariable(name = &quot;id&quot;)</span> Integer id)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 先添加，然后再查询出来批量更新</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        flowRuleService.deleteRuleById(id);</span><br><span class=\"line\">        List&lt;FlowRule&gt; ruleList =  flowRuleService.allRules().stream().map(x -&gt; x.toRule()).collect(Collectors.toList());</span><br><span class=\"line\">        RefreshRulesUtil.refreshRule(ruleList, RulesEnum.Flow);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.ok();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.eelve.limiting.sentinel.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.degrade.DegradeRule;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.eelve.limiting.sentinel.entity.DegradeRuleEntity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.eelve.limiting.sentinel.enums.RulesEnum;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.eelve.limiting.sentinel.service.iml.DegradeRuleServiceImpl;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.eelve.limiting.sentinel.util.RefreshRulesUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.eelve.limiting.sentinel.vo.JsonResult;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Collectors;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> DegradeRuleController</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> TODO</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zhao.zhilue</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2021/1/29 20:18</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api/eelve/degrade-rule&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DegradeRuleController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> DegradeRuleServiceImpl degradeRuleService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/rules&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">allRules</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span></span>&#123;</span><br><span class=\"line\">        List&lt;DegradeRule&gt; ruleList =  degradeRuleService.allRules().stream().map(x -&gt; x.toRule()).collect(Collectors.toList());</span><br><span class=\"line\">        RefreshRulesUtil.refreshRule(ruleList, RulesEnum.Degrade);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.ok().put(degradeRuleService.allRules());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/rules&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">addRule</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@RequestBody</span> DegradeRuleEntity degradeRuleEntity)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 先添加，然后再查询出来批量更新</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        degradeRuleService.addRule(degradeRuleEntity);</span><br><span class=\"line\">        List&lt;DegradeRule&gt; ruleList =  degradeRuleService.allRules().stream().map(x -&gt; x.toRule()).collect(Collectors.toList());</span><br><span class=\"line\">        RefreshRulesUtil.refreshRule(ruleList, RulesEnum.Degrade);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.ok().put(degradeRuleEntity);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PutMapping(&quot;/rules&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">updateRule</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@RequestBody</span> DegradeRuleEntity degradeRuleEntity)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 先添加，然后再查询出来批量更新</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        degradeRuleService.addRule(degradeRuleEntity);</span><br><span class=\"line\">        List&lt;DegradeRule&gt; ruleList =  degradeRuleService.allRules().stream().map(x -&gt; x.toRule()).collect(Collectors.toList());</span><br><span class=\"line\">        RefreshRulesUtil.refreshRule(ruleList, RulesEnum.Degrade);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.ok().put(degradeRuleEntity);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@DeleteMapping(&quot;/rules/&#123;id&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">deleteRule</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@PathVariable(name = &quot;id&quot;)</span> Integer id)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 先添加，然后再查询出来批量更新</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        degradeRuleService.deleteRuleById(id);</span><br><span class=\"line\">        List&lt;DegradeRule&gt; ruleList =  degradeRuleService.allRules().stream().map(x -&gt; x.toRule()).collect(Collectors.toList());</span><br><span class=\"line\">        RefreshRulesUtil.refreshRule(ruleList, RulesEnum.Degrade);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.ok();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-5、规则初始化\"><a href=\"#2-5、规则初始化\" class=\"headerlink\" title=\"2.5、规则初始化\"></a>2.5、规则初始化</h2><blockquote>\n<p>规则初始化可以使用 <code>Sentinel</code> 提供的 <code>SPI</code> 机制，实现 <code>com.alibaba.csp.sentinel.init#InitFunc</code> 接口，在接口被第一次调用时初始化，不过需要单独引入 <code>sentinel-datasource-extension</code> 。当然我们也可以直接 <code>Spring</code> 提供的 <code>CommandLineRunner</code> 或 <code>ApplicationRunner</code> 在项目启动是从数据库中加载规则。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.eelve.limiting.sentinel.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.RuleConstant;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.degrade.DegradeRule;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.degrade.DegradeRuleManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.degrade.circuitbreaker.CircuitBreakerStrategy;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.flow.FlowRule;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.block.flow.FlowRuleManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.system.SystemRule;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.slots.system.SystemRuleManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.ApplicationArguments;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.ApplicationRunner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> zhaozhilue</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RuleInitFunc</span> <span class=\"keyword\">implements</span> <span class=\"title\">ApplicationRunner</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">(ApplicationArguments args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        initFlowQpsRule();</span><br><span class=\"line\"></span><br><span class=\"line\">        initDegradeRule();</span><br><span class=\"line\"></span><br><span class=\"line\">        initSystemProtectionRule();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 初始化流量规则</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">initFlowQpsRule</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        List&lt;FlowRule&gt; rules = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        FlowRule rule1 = <span class=\"keyword\">new</span> FlowRule();</span><br><span class=\"line\">        rule1.setResource(<span class=\"string\">&quot;allInfos&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// Set max qps to 2</span></span><br><span class=\"line\">        rule1.setCount(<span class=\"number\">2</span>);</span><br><span class=\"line\">        rule1.setGrade(RuleConstant.FLOW_GRADE_QPS);</span><br><span class=\"line\">        rule1.setLimitApp(<span class=\"string\">&quot;default&quot;</span>);</span><br><span class=\"line\">        rules.add(rule1);</span><br><span class=\"line\">        FlowRuleManager.loadRules(rules);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 初始化熔断规则</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">initDegradeRule</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        List&lt;DegradeRule&gt; rules = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        DegradeRule rule = <span class=\"keyword\">new</span> DegradeRule(<span class=\"string\">&quot;allInfos&quot;</span>)</span><br><span class=\"line\">        .setGrade(CircuitBreakerStrategy.ERROR_RATIO.getType())</span><br><span class=\"line\">        .setCount(<span class=\"number\">0.7</span>) <span class=\"comment\">// Threshold is 70% error ratio</span></span><br><span class=\"line\">        .setMinRequestAmount(<span class=\"number\">100</span>)</span><br><span class=\"line\">                .setStatIntervalMs(<span class=\"number\">30000</span>) <span class=\"comment\">// 30s</span></span><br><span class=\"line\">                .setTimeWindow(<span class=\"number\">10</span>);</span><br><span class=\"line\">        rules.add(rule);</span><br><span class=\"line\">        DegradeRuleManager.loadRules(rules);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 初始化系统保护跪着</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initSystemProtectionRule</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        List&lt;SystemRule&gt; rules = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        SystemRule rule = <span class=\"keyword\">new</span> SystemRule();</span><br><span class=\"line\">        rule.setHighestSystemLoad(<span class=\"number\">10</span>);</span><br><span class=\"line\">        rules.add(rule);</span><br><span class=\"line\">        SystemRuleManager.loadRules(rules);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>至此简单的 <code>Spring Boot</code> 单体应用接入 <code>Sentinel</code> 的熔断能力的后端开发就完成了。然后前端再开发相应的页面，就可以给用户真正的使用了。</p>\n</blockquote>\n<hr>\n<p>【<strong>后面的话</strong>】以上的接口有一点缺陷就是需要用户填写具体的熔断资源名称，但是用户实际上是有可能填写错误，从而导致熔断规则不生效。为此这里给出的解决方案是，在应用启动过程中扫描所有添加 <code>@SentinelResource</code> 注解的资源，然后再开放接口提供给前端，然后用户再填写熔断资源名称的时候就可以通过下拉来选择具体的资源名称了。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.eelve.limiting.sentinel.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.csp.sentinel.annotation.SentinelResource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.BeansException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.ApplicationContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.ApplicationContextAware;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.core.annotation.AnnotationUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.annotation.PostConstruct;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> SentinelResourcetHolder</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> 扫描资源</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zhao.zhilue</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2021/1/30 9:45</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SentinelResourcetHolder</span> <span class=\"keyword\">implements</span> <span class=\"title\">ApplicationContextAware</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Set&lt;String&gt; SENTINEL_RESOURCE = <span class=\"keyword\">new</span> HashSet();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Set&lt;String&gt; <span class=\"title\">getSentinelResource</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> SENTINEL_RESOURCE;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ApplicationContext applicationContext = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostConstruct</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">inintSentinelResourcetHolder</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        Map&lt;String, Object&gt; objectMap =  applicationContext.getBeansWithAnnotation(Controller.class);</span><br><span class=\"line\">        objectMap.entrySet().forEach(o -&gt; &#123;</span><br><span class=\"line\">            Method[] methods = o.getValue().getClass().getDeclaredMethods();</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Method method : methods) &#123;</span><br><span class=\"line\">                SentinelResource sentinelResource = AnnotationUtils.findAnnotation(method, SentinelResource.class);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!Objects.isNull(sentinelResource))&#123;</span><br><span class=\"line\">                    SENTINEL_RESOURCE.add(sentinelResource.value());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setApplicationContext</span><span class=\"params\">(ApplicationContext applicationContext)</span> <span class=\"keyword\">throws</span> BeansException </span>&#123;</span><br><span class=\"line\">        SentinelResourcetHolder.applicationContext = applicationContext;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.eelve.limiting.sentinel.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.eelve.limiting.sentinel.config.SentinelResourceFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.eelve.limiting.sentinel.config.SentinelResourcetHolder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.eelve.limiting.sentinel.vo.JsonResult;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> SentinelResourceControl</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> TODO</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zhao.zhilue</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2021/1/31 12:31</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api/eelve/sentinel/resource&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SentinelResourceController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">getAllSentinelResourceV2</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.ok().put(SentinelResourcetHolder.getSentinelResource());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>只有Controller层和Service层的直接第一层方法才能通过注解触发，如果是方法再调用普通方法需要勇SphO或者SphU原生写法</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">extractedSphO</span><span class=\"params\">(Integer num)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (SphO.entry(<span class=\"string\">&quot;extractedSphO&quot;</span>))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">//需要保护的逻辑</span></span><br><span class=\"line\">            &#125;<span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">//需要和SphO.entry成对出现</span></span><br><span class=\"line\">                SphO.exit();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//熔断之后执行的方法</span></span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;something bad with blockException&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">extractedSphU</span><span class=\"params\">(Integer num)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (Entry entry = SphU.entry(<span class=\"string\">&quot;extractedSphU&quot;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//需要保护的逻辑</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (BlockException ex) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//熔断之后执行的方法</span></span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;something bad with blockException&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"sentinel","path":"api/categories/sentinel.json"}],"tags":[{"name":"sentinel","path":"api/tags/sentinel.json"},{"name":"java","path":"api/tags/java.json"},{"name":"springboot","path":"api/tags/springboot.json"}]},{"title":"Sentinel入门指北","slug":"Sentinel入门指北","date":"2021-02-01T12:30:57.000Z","updated":"2023-09-30T08:39:39.667Z","comments":true,"path":"api/articles/Sentinel入门指北.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/sentinel-flow-overview-ca2015f6c76449e2ac74f5a377e0573d.jpg","content":"<p>【<strong>前面的话</strong>】在前文 <a href=\"https://eelve.com/posts/56832225.html\">浅析Spring Boot单体应用熔断技术</a> 中对比了一下几种常见的接口熔断的技术。这里就具体使用 <code>Sentinel</code> 来记录以下。</p>\n<hr>\n<h1 id=\"壹、sentinel介绍\"><a href=\"#壹、sentinel介绍\" class=\"headerlink\" title=\"壹、sentinel介绍\"></a>壹、sentinel介绍</h1><p>随着微服务的流行，服务和服务之间的稳定性变得越来越重要。<code>Sentinel</code> 是面向分布式服务架构的流量控制组件，主要以流量为切入点，从流量控制、熔断降级、系统自适应保护等多个维度来帮助您保障微服务的稳定性。</p>\n<h2 id=\"Sentinel的基本概念基本概念包括\"><a href=\"#Sentinel的基本概念基本概念包括\" class=\"headerlink\" title=\"Sentinel的基本概念基本概念包括:\"></a>Sentinel的基本概念基本概念包括:</h2><h3 id=\"资源\"><a href=\"#资源\" class=\"headerlink\" title=\"资源\"></a>资源</h3><p>资源是 <code>Sentinel</code> 的关键概念。它可以是 <code>Java</code> 应用程序中的任何内容，例如，由应用程序提供的服务，或由应用程序调用的其它应用提供的服务，甚至可以是一段代码。只要通过 <code>Sentinel API</code> 定义的代码，就是资源，能够被 <code>Sentinel</code> 保护起来。大部分情况下，可以使用方法签名，URL，甚至服务名称作为资源名来标示资源。</p>\n<h3 id=\"规则\"><a href=\"#规则\" class=\"headerlink\" title=\"规则\"></a>规则</h3><p>围绕资源的实时状态设定的规则，可以包括流量控制规则、熔断降级规则以及系统保护规则。所有规则可以动态实时调整。</p>\n<h2 id=\"Sentinel的主要功能\"><a href=\"#Sentinel的主要功能\" class=\"headerlink\" title=\"Sentinel的主要功能\"></a>Sentinel的主要功能</h2><h3 id=\"流量控制\"><a href=\"#流量控制\" class=\"headerlink\" title=\"流量控制\"></a>流量控制</h3><p>流量控制在网络传输中是一个常用的概念，它用于调整网络包的发送数据。然而，从系统稳定性角度考虑，在处理请求的速度上，也有非常多的讲究。任意时间到来的请求往往是随机不可控的，而系统的处理能力是有限的。我们需要根据系统的处理能力对流量进行控制。Sentinel 作为一个调配器，可以根据需要把随机的请求调整成合适的形状，如下图所示：</p>\n<p><img src=\"https://image.eelve.com/eblog/sentinel-flow-overview-ca2015f6c76449e2ac74f5a377e0573d.jpg\" alt=\"流控效果\"></p>\n<p>流量控制有以下几个角度:</p>\n<ul>\n<li>资源的调用关系，例如资源的调用链路，资源和资源之间的关系；</li>\n<li>运行指标，例如 <code>QPS</code>、线程池、系统负载等；</li>\n<li>控制的效果，例如直接限流、冷启动、排队等。</li>\n</ul>\n<p>Sentinel 的设计理念是让您自由选择控制的角度，并进行灵活组合，从而达到想要的效果。</p>\n<h3 id=\"熔断降级\"><a href=\"#熔断降级\" class=\"headerlink\" title=\"熔断降级\"></a>熔断降级</h3><p>除了流量控制以外，降低调用链路中的不稳定资源也是 <code>Sentinel</code> 的使命之一。由于调用关系的复杂性，如果调用链路中的某个资源出现了不稳定，最终会导致请求发生堆积。当调用链路中某个资源出现不稳定，例如，表现为 <code>timeout</code>，异常比例升高的时候，则对这个资源的调用进行限制，并让请求快速失败，避免影响到其它的资源，最终产生雪崩的效果。</p>\n<p>降级有以下几个角度:</p>\n<ul>\n<li>通过并发线程数进行限制</li>\n</ul>\n<p>和资源池隔离的方法不同，Sentinel 通过限制资源并发线程的数量，来减少不稳定资源对其它资源的影响。这样不但没有线程切换的损耗，也不需要您预先分配线程池的大小。当某个资源出现不稳定的情况下，例如响应时间变长，对资源的直接影响就是会造成线程数的逐步堆积。当线程数在特定资源上堆积到一定的数量之后，对该资源的新请求就会被拒绝。堆积的线程完成任务后才开始继续接收请求。</p>\n<ul>\n<li>通过响应时间对资源进行降级</li>\n</ul>\n<p>除了对并发线程数进行控制以外，<code>Sentinel</code> 还可以通过响应时间来快速降级不稳定的资源。当依赖的资源出现响应时间过长后，所有对该资源的访问都会被直接拒绝，直到过了指定的时间窗口之后才重新恢复。</p>\n<h3 id=\"系统负载保护\"><a href=\"#系统负载保护\" class=\"headerlink\" title=\"系统负载保护\"></a>系统负载保护</h3><p>Sentinel同时提供系统维度的自适应保护能力。防止雪崩，是系统防护中重要的一环。当系统负载较高的时候，如果还持续让请求进入，可能会导致系统崩溃，无法响应。在集群环境下，网络负载均衡会把本应这台机器承载的流量转发到其它的机器上去。如果这个时候其它的机器也处在一个边缘状态的时候，这个增加的流量就会导致这台机器也崩溃，最后导致整个集群不可用。</p>\n<p>针对这个情况，<code>Sentinel</code> 提供了对应的保护机制，让系统的入口流量和系统的负载达到一个平衡，保证系统在能力范围之内处理最多的请求。</p>\n<h2 id=\"主要工作机制\"><a href=\"#主要工作机制\" class=\"headerlink\" title=\"主要工作机制\"></a>主要工作机制</h2><ul>\n<li>对主流框架提供适配或者显示的 <code>API</code>，来定义需要保护的资源，并提供设施对资源进行实时统计和调用链路分析。</li>\n<li>根据预设的规则，结合对资源的实时统计信息，对流量进行控制。同时，<code>Sentinel</code> 提供开放的接口，方便您定义及改变规则。</li>\n<li><code>Sentinel</code> 提供实时的监控系统，方便您快速了解目前系统的状态。</li>\n</ul>\n<h1 id=\"贰、基础使用\"><a href=\"#贰、基础使用\" class=\"headerlink\" title=\"贰、基础使用\"></a>贰、基础使用</h1><h2 id=\"2-1、-通过抛出异常的方式\"><a href=\"#2-1、-通过抛出异常的方式\" class=\"headerlink\" title=\"2.1、 通过抛出异常的方式\"></a>2.1、 通过抛出异常的方式</h2><p><code>SphU</code>包含了<code>try-catch</code>风格的<code>API</code>。用这种方式，当资源发生了限流之后会抛出<code>BlockException</code>。这个时候可以捕捉异常，进行限流之后的逻辑处理。示例代码如下:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 资源名可使用任意有业务语义的字符串，比如方法名、接口名或其它可唯一标识的字符串。</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> (Entry entry = SphU.entry(<span class=\"string\">&quot;resourceName&quot;</span>)) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 被保护的业务逻辑</span></span><br><span class=\"line\">  <span class=\"comment\">// do something here...</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (BlockException ex) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 资源访问阻止，被限流或被降级</span></span><br><span class=\"line\">  <span class=\"comment\">// 在此处进行相应的处理操作</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：<code>SphU.entry(xxx)</code>需要与<code>entry.exit()</code>方法成对出现，匹配调用，否则会导致调用链记录异常，抛出<code>ErrorEntryFreeException</code>异常。</p>\n</blockquote>\n<h2 id=\"2-2、通过返回布尔值方式\"><a href=\"#2-2、通过返回布尔值方式\" class=\"headerlink\" title=\"2.2、通过返回布尔值方式\"></a>2.2、通过返回布尔值方式</h2><p><code>SphO</code>提供 <code>if-else</code> 风格的 <code>API</code>。用这种方式，当资源发生了限流之后会返回 <code>false</code>，这个时候可以根据返回值，进行限流之后的逻辑处理。示例代码如下:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 资源名可使用任意有业务语义的字符串</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (SphO.entry(<span class=\"string\">&quot;自定义资源名&quot;</span>)) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 务必保证finally会被执行</span></span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 被保护的业务逻辑</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    SphO.exit();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 资源访问阻止，被限流或被降级</span></span><br><span class=\"line\">  <span class=\"comment\">// 进行相应的处理操作</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3、异步调用支持\"><a href=\"#2-3、异步调用支持\" class=\"headerlink\" title=\"2.3、异步调用支持\"></a>2.3、异步调用支持</h3><p><code>Sentinel</code> 支持异步调用链路的统计。在异步调用中，需要通过 <code>SphU.asyncEntry(xxx)</code> 方法定义资源，并通常需要在异步的回调函数中调用 <code>exit</code> 方法。以下是一个简单的示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    AsyncEntry entry = SphU.asyncEntry(resourceName);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 异步调用.</span></span><br><span class=\"line\">    doAsync(userId, result -&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 在此处处理异步调用的结果.</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 在回调结束后 exit.</span></span><br><span class=\"line\">            entry.exit();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (BlockException ex) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Request blocked.</span></span><br><span class=\"line\">    <span class=\"comment\">// Handle the exception (e.g. retry or fallback).</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>SphU.asyncEntry(xxx)</code> 不会影响当前（调用线程）的 <code>Context</code>，因此以下两个 <code>entry</code> 在调用链上是平级关系（处于同一层），而不是嵌套关系：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 调用链类似于：</span></span><br><span class=\"line\"><span class=\"comment\">// -parent</span></span><br><span class=\"line\"><span class=\"comment\">// ---asyncResource</span></span><br><span class=\"line\"><span class=\"comment\">// ---syncResource</span></span><br><span class=\"line\">asyncEntry = SphU.asyncEntry(asyncResource);</span><br><span class=\"line\">entry = SphU.entry(normalResource);</span><br></pre></td></tr></table></figure>\n<p>若在异步回调中需要嵌套其它的资源调用（无论是 <code>entry</code> 还是 <code>asyncEntry</code>），只需要借助<code>Sentinel</code>提供的上下文切换功能，在对应的地方通过 <code>ContextUtil.runOnContext(context, f)</code> 进行 <code>Context</code> 变换，将对应资源调用处的 <code>Context</code> 切换为生成的异步 <code>Context</code>，即可维持正确的调用链路关系。示例如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleResult</span><span class=\"params\">(String result)</span> </span>&#123;</span><br><span class=\"line\">    Entry entry = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        entry = SphU.entry(<span class=\"string\">&quot;handleResultForAsync&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// Handle your result here.</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (BlockException ex) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Blocked for the result handler.</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (entry != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            entry.exit();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">someAsync</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        AsyncEntry entry = SphU.asyncEntry(resourceName);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Asynchronous invocation.</span></span><br><span class=\"line\">        doAsync(userId, result -&gt; &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 在异步回调中进行上下文变换，通过 AsyncEntry 的 getAsyncContext 方法获取异步 Context</span></span><br><span class=\"line\">            ContextUtil.runOnContext(entry.getAsyncContext(), () -&gt; &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 此处嵌套正常的资源调用.</span></span><br><span class=\"line\">                    handleResult(result);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">                    entry.exit();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (BlockException ex) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Request blocked.</span></span><br><span class=\"line\">        <span class=\"comment\">// Handle the exception (e.g. retry or fallback).</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>此时的调用链就类似于：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-parent</span><br><span class=\"line\">---asyncInvocation</span><br><span class=\"line\">-----handleResultForAsync</span><br></pre></td></tr></table></figure>\n<h1 id=\"叁、注解使用\"><a href=\"#叁、注解使用\" class=\"headerlink\" title=\"叁、注解使用\"></a>叁、注解使用</h1><p><code>Sentinel</code> 提供了 <code>@SentinelResource</code> 注解用于定义资源，并提供了 <code>AspectJ</code> 的扩展用于自动定义资源、处理 <code>BlockException</code> 等。使用 <code>Sentinel Annotation AspectJ Extension</code> 的时候需要引入以下依赖：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba.csp<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>sentinel-annotation-aspectj<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.8.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：注解方式埋点不支持 private 方法。</p>\n</blockquote>\n<p><code>@SentinelResource</code> 用于定义资源，并提供可选的异常处理和 <code>fallback</code> 配置项。 <code>@SentinelResource</code> 注解包含以下属性：</p>\n<ul>\n<li><code>value</code>：资源名称，必需项（不能为空）</li>\n<li><code>entryType</code>：<code>entry</code> 类型，可选项（默认为 <code>EntryType.OUT</code>）</li>\n<li><code>blockHandler</code> / <code>blockHandlerClass</code>: <code>blockHandler</code> 对应处理 <code>BlockException</code> 的函数名称，可选项。<code>blockHandler</code> 函数访问范围需要是 <code>public</code>，返回类型需要与原方法相匹配，参数类型需要和原方法相匹配并且最后加一个额外的参数，类型为 <code>BlockException</code>。<code>blockHandler</code> 函数默认需要和原方法在同一个类中。若希望使用其他类的函数，则可以指定 <code>blockHandlerClass</code> 为对应的类的 <code>Class</code> 对象，注意对应的函数必需为 <code>static</code> 函数，否则无法解析。</li>\n<li><code>fallback</code>：<code>fallback</code> 函数名称，可选项，用于在抛出异常的时候提供 <code>fallback</code> 处理逻辑。  <code>fallback</code> 函数可以针对所有类型的异常（除了 <code>exceptionsToIgnore</code> 里面排除掉的异常类型）进行处理。<code>fallback</code> 函数签名和位置要求：<ul>\n<li>返回值类型必须与原函数返回值类型一致；</li>\n<li>方法参数列表需要和原函数一致，或者可以额外多一个 <code>Throwable</code> 类型的参数用于接收对应的异常。</li>\n<li><code>fallback</code> 函数默认需要和原方法在同一个类中。若希望使用其他类的函数，则可以指定 <code>fallbackClass</code> 为对应的类的 <code>Class</code> 对象，注意对应的函数必需为 <code>static</code> 函数，否则无法解析。</li>\n</ul>\n</li>\n<li><code>defaultFallback</code>（since 1.6.0）：默认的 <code>fallback</code> 函数名称，可选项，通常用于通用的 <code>fallback</code> 逻辑（即可以用于很多服务或方法）。默认 <code>fallback</code> 函数可以针对所以类型的异常（除了 <code>exceptionsToIgnore</code> 里面排除掉的异常类型）进行处理。若同时配置了 <code>fallback</code> 和 <code>defaultFallback</code>，则只有 <code>fallback</code> 会生效。<code>defaultFallback</code> 函数签名要求：<ul>\n<li>返回值类型必须与原函数返回值类型一致；</li>\n<li>方法参数列表需要为空，或者可以额外多一个 <code>Throwable</code> 类型的参数用于接收对应的异常。</li>\n<li><code>defaultFallback</code> 函数默认需要和原方法在同一个类中。若希望使用其他类的函数，则可以指定 <code>fallbackClass</code> 为对应的类的 <code>Class</code> 对象，注意对应的函数必需为 <code>static</code> 函数，否则无法解析。</li>\n</ul>\n</li>\n<li><code>exceptionsToIgnore</code>（since 1.6.0）：用于指定哪些异常被排除掉，不会计入异常统计中，也不会进入 <code>fallback</code> 逻辑中，而是会原样抛出。</li>\n</ul>\n<blockquote>\n<p>注：1.6.0 之前的版本 <code>fallback</code> 函数只针对降级异常（<code>DegradeException</code>）进行处理，不能针对业务异常进行处理。</p>\n</blockquote>\n<p>特别地，若 <code>blockHandler</code> 和 <code>fallback</code> 都进行了配置，则被限流降级而抛出 <code>BlockException</code> 时只会进入 <code>blockHandler</code> 处理逻辑。若未配置 <code>blockHandler</code>、<code>fallback</code> 和 <code>defaultFallback</code>，则被限流降级时会将 <code>BlockException</code> 直接抛出。</p>\n<h1 id=\"肆、规则的种类\"><a href=\"#肆、规则的种类\" class=\"headerlink\" title=\"肆、规则的种类\"></a>肆、规则的种类</h1><p><code>Sentinel</code> 的所有规则都可以在内存态中动态地查询及修改，修改之后立即生效。同时 <code>Sentinel</code> 也提供相关 <code>API</code>，供您来定制自己的规则策略。</p>\n<p><code>Sentinel</code> 支持以下几种规则：流量控制规则、熔断降级规则、系统保护规则、来源访问控制规则 和 热点参数规则。</p>\n<h2 id=\"4-1、流量控制规则-FlowRule\"><a href=\"#4-1、流量控制规则-FlowRule\" class=\"headerlink\" title=\"4.1、流量控制规则 (FlowRule)\"></a>4.1、流量控制规则 (FlowRule)</h2><ul>\n<li>重要属性</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>说明</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>resource</td>\n<td>资源名，资源名是限流规则的作用对象</td>\n<td></td>\n</tr>\n<tr>\n<td>count</td>\n<td>限流阈值</td>\n<td></td>\n</tr>\n<tr>\n<td>grade</td>\n<td>限流阈值类型，QPS 或线程数模式</td>\n<td>QPS 模式</td>\n</tr>\n<tr>\n<td>limitApp</td>\n<td>流控针对的调用来源</td>\n<td>default，代表不区分调用来源</td>\n</tr>\n<tr>\n<td>strategy</td>\n<td>调用关系限流策略：直接、链路、关联</td>\n<td>根据资源本身（直接）</td>\n</tr>\n<tr>\n<td>controlBehavior</td>\n<td>流控效果（直接拒绝 / 排队等待 / 慢启动模式），不支持按调用关系限流</td>\n<td>直接拒绝</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>同一个资源可以同时有多个限流规则。</p>\n</blockquote>\n<ul>\n<li>通过代码定义流量控制规则</li>\n</ul>\n<p>理解上面规则的定义之后，我们可以通过调用 <code>FlowRuleManager.loadRules()</code> 方法来用硬编码的方式定义流量控制规则，比如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">initFlowQpsRule</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    List&lt;FlowRule&gt; rules = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">    FlowRule rule1 = <span class=\"keyword\">new</span> FlowRule();</span><br><span class=\"line\">    rule1.setResource(resource);</span><br><span class=\"line\">    <span class=\"comment\">// Set max qps to 20</span></span><br><span class=\"line\">    rule1.setCount(<span class=\"number\">20</span>);</span><br><span class=\"line\">    rule1.setGrade(RuleConstant.FLOW_GRADE_QPS);</span><br><span class=\"line\">    rule1.setLimitApp(<span class=\"string\">&quot;default&quot;</span>);</span><br><span class=\"line\">    rules.add(rule1);</span><br><span class=\"line\">    FlowRuleManager.loadRules(rules);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-2、熔断降级规则-DegradeRule\"><a href=\"#4-2、熔断降级规则-DegradeRule\" class=\"headerlink\" title=\"4.2、熔断降级规则 (DegradeRule)\"></a>4.2、熔断降级规则 (DegradeRule)</h2><ul>\n<li>熔断降级规则包含下面几个重要的属性：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>说明</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>resource</td>\n<td>资源名，即规则的作用对象</td>\n<td></td>\n</tr>\n<tr>\n<td>grade</td>\n<td>熔断策略，支持慢调用比例/异常比例/异常数策略</td>\n<td>慢调用比例</td>\n</tr>\n<tr>\n<td>count</td>\n<td>慢调用比例模式下为慢调用临界 RT（超出该值计为慢调用）；异常比例/异常数模式下为对应的阈值</td>\n<td></td>\n</tr>\n<tr>\n<td>timeWindow</td>\n<td>熔断时长，单位为 s</td>\n<td></td>\n</tr>\n<tr>\n<td>minRequestAmount</td>\n<td>熔断触发的最小请求数，请求数小于该值时即使异常比率超出阈值也不会熔断（1.7.0 引入）</td>\n<td>5</td>\n</tr>\n<tr>\n<td>statIntervalMs</td>\n<td>统计时长（单位为 ms），如 60*1000 代表分钟级（1.8.0 引入）</td>\n<td>1000 ms</td>\n</tr>\n<tr>\n<td>slowRatioThreshold</td>\n<td>慢调用比例阈值，仅慢调用比例模式有效（1.8.0 引入）</td>\n<td></td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>同一个资源可以同时有多个降级规则</p>\n</blockquote>\n<ul>\n<li>通过代码定义流量控制规则</li>\n</ul>\n<p>理解上面规则的定义之后，我们可以通过调用 <code>DegradeRuleManager.loadRules()</code> 方法来用硬编码的方式定义流量控制规则。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">initDegradeRule</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    List&lt;DegradeRule&gt; rules = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">    DegradeRule rule = <span class=\"keyword\">new</span> DegradeRule(resource);</span><br><span class=\"line\">        .setGrade(CircuitBreakerStrategy.ERROR_RATIO.getType());</span><br><span class=\"line\">        .setCount(<span class=\"number\">0.7</span>); <span class=\"comment\">// Threshold is 70% error ratio</span></span><br><span class=\"line\">        .setMinRequestAmount(<span class=\"number\">100</span>)</span><br><span class=\"line\">        .setStatIntervalMs(<span class=\"number\">30000</span>) <span class=\"comment\">// 30s</span></span><br><span class=\"line\">        .setTimeWindow(<span class=\"number\">10</span>);</span><br><span class=\"line\">    rules.add(rule);</span><br><span class=\"line\">    DegradeRuleManager.loadRules(rules);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-3、系统保护规则-SystemRule\"><a href=\"#4-3、系统保护规则-SystemRule\" class=\"headerlink\" title=\"4.3、系统保护规则 (SystemRule)\"></a>4.3、系统保护规则 (SystemRule)</h2><p><code>Sentinel</code> 系统自适应限流从整体维度对应用入口流量进行控制，结合应用的 <code>Load</code>、<code>CPU</code> 使用率、<code>总体平均 RT</code>、<code>入口 QPS</code> 和<code>并发线程数</code>等几个维度的监控指标，通过自适应的流控策略，让系统的入口流量和系统的负载达到一个平衡，让系统尽可能跑在最大吞吐量的同时保证系统整体的稳定性。</p>\n<ul>\n<li>系统规则包含下面几个重要的属性</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>说明</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>highestSystemLoad</td>\n<td>load1 触发值，用于触发自适应控制阶段</td>\n<td>-1 (不生效)</td>\n</tr>\n<tr>\n<td>avgRt</td>\n<td>所有入口流量的平均响应时间</td>\n<td>-1 (不生效)</td>\n</tr>\n<tr>\n<td>maxThread</td>\n<td>入口流量的最大并发数</td>\n<td>-1 (不生效)</td>\n</tr>\n<tr>\n<td>qps</td>\n<td>所有入口资源的 QPS</td>\n<td>-1 (不生效)</td>\n</tr>\n<tr>\n<td>highestCpuUsage</td>\n<td>当前系统的 CPU 使用率（0.0-1.0）</td>\n<td>-1 (不生效)</td>\n</tr>\n</tbody></table>\n<ul>\n<li>通过代码定义流量控制规则</li>\n</ul>\n<p>理解上面规则的定义之后，我们可以通过调用 <code>SystemRuleManager.loadRules()</code> 方法来用硬编码的方式定义流量控制规则</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initSystemProtectionRule</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  List&lt;SystemRule&gt; rules = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">  SystemRule rule = <span class=\"keyword\">new</span> SystemRule();</span><br><span class=\"line\">  rule.setHighestSystemLoad(<span class=\"number\">10</span>);</span><br><span class=\"line\">  rules.add(rule);</span><br><span class=\"line\">  SystemRuleManager.loadRules(rules);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-4、访问控制规则-AuthorityRule\"><a href=\"#4-4、访问控制规则-AuthorityRule\" class=\"headerlink\" title=\"4.4、访问控制规则 (AuthorityRule)\"></a>4.4、访问控制规则 (AuthorityRule)</h2><p>很多时候，我们需要根据调用方来限制资源是否通过，这时候可以使用 <code>Sentinel</code> 的访问控制（黑白名单）的功能。黑白名单根据资源的请求来源（<code>origin</code>）限制资源是否通过，若配置白名单则只有请求来源位于白名单内时才可通过；若配置黑名单则请求来源位于黑名单时不通过，其余的请求通过。</p>\n<p>授权规则，即黑白名单规则（AuthorityRule）非常简单，主要有以下配置项：</p>\n<ul>\n<li><code>resource</code>：资源名，即限流规则的作用对象</li>\n<li><code>limitApp</code>：对应的黑名单/白名单，不同 <code>origin</code> 用 , 分隔，如 <code>appA</code>,<code>appB</code></li>\n<li><code>strategy</code>：限制模式，<code>AUTHORITY_WHITE</code> 为白名单模式，<code>AUTHORITY_BLACK</code> 为黑名单模式，默认为白名单模式</li>\n</ul>\n<hr>\n<p>【<strong>后面的话</strong>】在使用<code>API</code>去加载规则的时候，发现存在规则不生效的时候，通过调试发现：<code>Sentinel</code>在加载规则到内存中的时候会校验规则的合法性，如果规则不合法，该规则将不被加载。</p>\n<p>具体可以查看<code>com.alibaba.csp.sentinel.property#configLoad</code>方法的实现类中参数校验方法，下面贴出<code>FlowRule</code> 和 <code>Degrade</code>的校验方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> * Check whether provided flow rule is valid.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @param rule flow rule to check</span><br><span class=\"line\"> * @return true if valid, otherwise false</span><br><span class=\"line\"> *&#x2F;</span><br><span class=\"line\">public static boolean isValidRule(FlowRule rule) &#123;</span><br><span class=\"line\">    boolean baseValid &#x3D; rule !&#x3D; null &amp;&amp; !StringUtil.isBlank(rule.getResource()) &amp;&amp; rule.getCount() &gt;&#x3D; 0</span><br><span class=\"line\">        &amp;&amp; rule.getGrade() &gt;&#x3D; 0 &amp;&amp; rule.getStrategy() &gt;&#x3D; 0 &amp;&amp; rule.getControlBehavior() &gt;&#x3D; 0;</span><br><span class=\"line\">    if (!baseValid) &#123;</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &#x2F;&#x2F; Check strategy and control (shaping) behavior.</span><br><span class=\"line\">    return checkClusterField(rule) &amp;&amp; checkStrategyField(rule) &amp;&amp; checkControlBehaviorField(rule);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">private static boolean checkClusterField(&#x2F;*@NonNull*&#x2F; FlowRule rule) &#123;</span><br><span class=\"line\">    if (!rule.isClusterMode()) &#123;</span><br><span class=\"line\">        return true;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ClusterFlowConfig clusterConfig &#x3D; rule.getClusterConfig();</span><br><span class=\"line\">    if (clusterConfig &#x3D;&#x3D; null) &#123;</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if (!validClusterRuleId(clusterConfig.getFlowId())) &#123;</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if (!isWindowConfigValid(clusterConfig.getSampleCount(), clusterConfig.getWindowIntervalMs())) &#123;</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    switch (clusterConfig.getStrategy()) &#123;</span><br><span class=\"line\">        case ClusterRuleConstant.FLOW_CLUSTER_STRATEGY_NORMAL:</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        default:</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public static boolean isWindowConfigValid(int sampleCount, int windowIntervalMs) &#123;</span><br><span class=\"line\">    return sampleCount &gt; 0 &amp;&amp; windowIntervalMs &gt; 0 &amp;&amp; windowIntervalMs % sampleCount &#x3D;&#x3D; 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">private static boolean checkStrategyField(&#x2F;*@NonNull*&#x2F; FlowRule rule) &#123;</span><br><span class=\"line\">    if (rule.getStrategy() &#x3D;&#x3D; RuleConstant.STRATEGY_RELATE || rule.getStrategy() &#x3D;&#x3D; RuleConstant.STRATEGY_CHAIN) &#123;</span><br><span class=\"line\">        return StringUtil.isNotBlank(rule.getRefResource());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return true;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">private static boolean checkControlBehaviorField(&#x2F;*@NonNull*&#x2F; FlowRule rule) &#123;</span><br><span class=\"line\">    switch (rule.getControlBehavior()) &#123;</span><br><span class=\"line\">        case RuleConstant.CONTROL_BEHAVIOR_WARM_UP:</span><br><span class=\"line\">            return rule.getWarmUpPeriodSec() &gt; 0;</span><br><span class=\"line\">        case RuleConstant.CONTROL_BEHAVIOR_RATE_LIMITER:</span><br><span class=\"line\">            return rule.getMaxQueueingTimeMs() &gt; 0;</span><br><span class=\"line\">        case RuleConstant.CONTROL_BEHAVIOR_WARM_UP_RATE_LIMITER:</span><br><span class=\"line\">            return rule.getWarmUpPeriodSec() &gt; 0 &amp;&amp; rule.getMaxQueueingTimeMs() &gt; 0;</span><br><span class=\"line\">        default:</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isValidRule</span><span class=\"params\">(DegradeRule rule)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">boolean</span> baseValid = rule != <span class=\"keyword\">null</span> &amp;&amp; !StringUtil.isBlank(rule.getResource())</span><br><span class=\"line\">        &amp;&amp; rule.getCount() &gt;= <span class=\"number\">0</span> &amp;&amp; rule.getTimeWindow() &gt; <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!baseValid) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (rule.getMinRequestAmount() &lt;= <span class=\"number\">0</span> || rule.getStatIntervalMs() &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (rule.getGrade()) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> RuleConstant.DEGRADE_GRADE_RT:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> rule.getSlowRatioThreshold() &gt;= <span class=\"number\">0</span> &amp;&amp; rule.getSlowRatioThreshold() &lt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> RuleConstant.DEGRADE_GRADE_EXCEPTION_RATIO:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> rule.getCount() &lt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> RuleConstant.DEGRADE_GRADE_EXCEPTION_COUNT:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>最后是我自己实现的 <a href=\"https://github.com/eelve/awesomesentinel/tree/basic-sentinel\">demo</a> 。</p>\n</blockquote>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"sentinel","path":"api/categories/sentinel.json"}],"tags":[{"name":"sentinel","path":"api/tags/sentinel.json"},{"name":"java","path":"api/tags/java.json"},{"name":"springboot","path":"api/tags/springboot.json"}]},{"title":"浅析Spring Boot单体应用熔断技术","slug":"浅析Spring-Boot单体应用熔断技术","date":"2021-01-20T12:20:20.000Z","updated":"2021-04-19T06:44:39.305Z","comments":true,"path":"api/articles/浅析Spring-Boot单体应用熔断技术.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/2021012001.png","content":"<p>【<strong>前面的话</strong>】最近在看服务熔断的相关技术，下面就来总结一下。</p>\n<h1 id=\"壹、入围方案\"><a href=\"#壹、入围方案\" class=\"headerlink\" title=\"壹、入围方案\"></a>壹、入围方案</h1><ul>\n<li>Sentinel<ul>\n<li><a href=\"https://github.com/alibaba/Sentinel\">github地址</a></li>\n<li><a href=\"https://sentinelguard.io/zh-cn/docs/introduction.html\">https://sentinelguard.io/zh-cn/docs/introduction.html</a></li>\n<li>阿里出品，Spring Cloud Alibaba限流组件，目前持续更新中</li>\n<li>自带Dashboard，可以查看接口Qps等，并且可以动态修改各种规则</li>\n<li>流量控制，直接限流、冷启动、排队</li>\n<li>熔断降级，限制并发限制数和相应时间</li>\n<li>系统负载保护，提供系统级别防护，限制总体CPU等</li>\n<li>主要核心：资源，规则（流量控制规则、熔断降级规则、系统保护规则、来源访问控制规则 和 热点参数规则。），和指标</li>\n<li>文档非常清晰和详细，中文</li>\n<li>支持动态规则（推模式和拉模式）</li>\n</ul>\n</li>\n<li>Hystrix<ul>\n<li><a href=\"https://github.com/Netflix/Hystrix\">github地址</a></li>\n<li><a href=\"https://github.com/Netflix/Hystrix/wiki\">https://github.com/Netflix/Hystrix/wiki</a></li>\n<li>Netflix出品，Spring Cloud Netflix限流组件，已经停止新特性开发，只进行bug修复，最近更新为2018年，功能稳定</li>\n<li>有简单的dashboard页面</li>\n<li>以隔离和熔断为主的容错机制，超时或被熔断的调用将会快速失败，并可以提供 fallback 机制的初代熔断框架，异常统计基于滑动窗口</li>\n</ul>\n</li>\n<li>resilience4j<ul>\n<li><a href=\"https://github.com/resilience4j/resilience4j\">github地址</a></li>\n<li><a href=\"https://resilience4j.readme.io/docs\">https://resilience4j.readme.io/docs</a></li>\n<li>是一款轻量、简单，并且文档非常清晰、丰富的熔断工具。是Hystrix替代品，实现思路和Hystrix一致，目前持续更新中</li>\n<li>需要自己对micrometer、prometheus以及Dropwizard metrics进行整合</li>\n<li>CircuitBreaker 熔断</li>\n<li>Bulkhead 隔离</li>\n<li>RateLimiter QPS限制</li>\n<li>Retry 重试</li>\n<li>TimeLimiter 超时限制</li>\n<li>Cache 缓存</li>\n</ul>\n</li>\n<li>自己实现(基于Guava)<ul>\n<li>基于Guava的令牌桶，可以轻松实现对QPS进行限流</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"贰、技术对比\"><a href=\"#贰、技术对比\" class=\"headerlink\" title=\"贰、技术对比\"></a>贰、技术对比</h1><table>\n<thead>\n<tr>\n<th></th>\n<th><strong>Sentinel</strong></th>\n<th><strong>Hystrix</strong></th>\n<th><strong>resilience4j</strong></th>\n<th>使用Guava实现</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>隔离策略</td>\n<td>信号量隔离（并发线程数限流）</td>\n<td>线程池隔离/信号量隔离</td>\n<td>信号量隔离</td>\n<td></td>\n</tr>\n<tr>\n<td>熔断降级策略</td>\n<td>基于响应时间、异常比率、异常数</td>\n<td>基于异常比率</td>\n<td>基于异常比率、响应时间</td>\n<td></td>\n</tr>\n<tr>\n<td>实时统计实现</td>\n<td>滑动窗口（LeapArray）</td>\n<td>滑动窗口（基于 RxJava）</td>\n<td>Ring Bit Buffer</td>\n<td>令牌桶</td>\n</tr>\n<tr>\n<td>动态规则配置</td>\n<td>支持多种数据源</td>\n<td>支持多种数据源</td>\n<td>有限支持</td>\n<td></td>\n</tr>\n<tr>\n<td>扩展性</td>\n<td>多个扩展点</td>\n<td>插件的形式</td>\n<td>接口的形式</td>\n<td></td>\n</tr>\n<tr>\n<td>基于注解的支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>单机限流</td>\n<td>基于 QPS，支持基于调用关系的限流</td>\n<td>有限的支持</td>\n<td>Rate Limiter</td>\n<td>基于 QPS</td>\n</tr>\n<tr>\n<td>集群流控</td>\n<td>支持</td>\n<td>不支持</td>\n<td>不支持</td>\n<td></td>\n</tr>\n<tr>\n<td>流量整形</td>\n<td>支持预热模式与匀速排队控制效果</td>\n<td>不支持</td>\n<td>简单的 Rate Limiter 模式</td>\n<td></td>\n</tr>\n<tr>\n<td>系统自适应保护</td>\n<td>支持</td>\n<td>不支持</td>\n<td>不支持</td>\n<td></td>\n</tr>\n<tr>\n<td>热点识别/防护</td>\n<td>支持</td>\n<td>不支持</td>\n<td>不支持</td>\n<td></td>\n</tr>\n<tr>\n<td>Service Mesh 支持</td>\n<td>支持 Envoy/Istio</td>\n<td>不支持</td>\n<td>不支持</td>\n<td></td>\n</tr>\n<tr>\n<td>控制台</td>\n<td>提供开箱即用的控制台，可配置规则、实时监控、机器发现等</td>\n<td>简单的监控查看</td>\n<td>不提供控制台，可对接其它监控系统</td>\n<td></td>\n</tr>\n<tr>\n<td>是否支持默认规则</td>\n<td>不支持，需要针对每个接口配置规则</td>\n<td>支持</td>\n<td>支持</td>\n<td></td>\n</tr>\n<tr>\n<td>是否支持过滤异常</td>\n<td>注解单个接口支持</td>\n<td>注解和全局默认配置</td>\n<td>注解和全局默认配置</td>\n<td></td>\n</tr>\n</tbody></table>\n<h1 id=\"叁、应用改造\"><a href=\"#叁、应用改造\" class=\"headerlink\" title=\"叁、应用改造\"></a>叁、应用改造</h1><h2 id=\"3-1、sentinel\"><a href=\"#3-1、sentinel\" class=\"headerlink\" title=\"3.1、sentinel\"></a>3.1、sentinel</h2><h3 id=\"3-1-1、引入依赖\"><a href=\"#3-1-1、引入依赖\" class=\"headerlink\" title=\"3.1.1、引入依赖\"></a>3.1.1、引入依赖</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;com.alibaba.cloud&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-cloud-starter-alibaba-sentinel&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;2.0.3.RELEASE&lt;&#x2F;version&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-1-2、改造接口或者service层\"><a href=\"#3-1-2、改造接口或者service层\" class=\"headerlink\" title=\"3.1.2、改造接口或者service层\"></a>3.1.2、改造接口或者service层</h3><blockquote>\n<p>@SentinelResource(value = “allInfos”,fallback = “errorReturn”)</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Target(&#123;ElementType.METHOD, ElementType.TYPE&#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Inherited</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> SentinelResource &#123;</span><br><span class=\"line\">    <span class=\"comment\">//资源名称</span></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">value</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//流量方向</span></span><br><span class=\"line\">    <span class=\"function\">EntryType <span class=\"title\">entryType</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> EntryType.OUT</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//资源类型</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">resourceType</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> 0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//异常处理方法</span></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">blockHandler</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//异常处理类</span></span><br><span class=\"line\">    Class&lt;?&gt;[] blockHandlerClass() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//熔断方法</span></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">fallback</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//默认熔断方法</span></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">defaultFallback</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//熔断类</span></span><br><span class=\"line\">    Class&lt;?&gt;[] fallbackClass() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//统计异常</span></span><br><span class=\"line\">    Class&lt;? extends Throwable&gt;[] exceptionsToTrace() <span class=\"keyword\">default</span> &#123;Throwable.class&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//忽略异常</span></span><br><span class=\"line\">    Class&lt;? extends Throwable&gt;[] exceptionsToIgnore() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/get&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\"><span class=\"meta\">@SentinelResource(value = &quot;allInfos&quot;,fallback = &quot;errorReturn&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">allInfos</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@RequestParam</span> Integer num)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (num % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                log.info(<span class=\"string\">&quot;num % 2 == 0&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BaseException(<span class=\"string\">&quot;something bad with 2&quot;</span>, <span class=\"number\">400</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JsonResult.ok();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ProgramException e) &#123;</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;error&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JsonResult.error(<span class=\"string\">&quot;error&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-1-3、针对接口配置熔断方法或者限流方法\"><a href=\"#3-1-3、针对接口配置熔断方法或者限流方法\" class=\"headerlink\" title=\"3.1.3、针对接口配置熔断方法或者限流方法\"></a>3.1.3、针对接口配置熔断方法或者限流方法</h3><blockquote>\n<p>默认过滤拦截所有Controller接口</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 限流，参数需要和方法保持一致</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> request</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> response</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> num</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> BlockException</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">errorReturn</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@RequestParam</span> Integer num)</span> <span class=\"keyword\">throws</span> BlockException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.error(<span class=\"string\">&quot;error 限流&quot;</span> + num );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 熔断，参数需要和方法保持一直，并且需要添加BlockException异常</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> request</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> response</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> num</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> b</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> BlockException</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">errorReturn</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@RequestParam</span> Integer num,BlockException b)</span> <span class=\"keyword\">throws</span> BlockException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.error(<span class=\"string\">&quot;error 熔断&quot;</span> + num );</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意也可以不配置限流或者熔断方法。通过全局异常去捕获<strong>UndeclaredThrowableException</strong>或者<strong>BlockException</strong>避免大量的开发量</p>\n</blockquote>\n<h3 id=\"3-1-4、接入dashboard\"><a href=\"#3-1-4、接入dashboard\" class=\"headerlink\" title=\"3.1.4、接入dashboard\"></a>3.1.4、接入dashboard</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">sentinel:</span></span><br><span class=\"line\">      <span class=\"attr\">transport:</span></span><br><span class=\"line\">        <span class=\"attr\">port:</span> <span class=\"number\">8719</span></span><br><span class=\"line\">        <span class=\"attr\">dashboard:</span> <span class=\"string\">localhost:8080</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://image.eelve.com/eblog/2021012001.png\" alt=\"sentinel\"></p>\n<h3 id=\"3-1-5、规则持久化和动态更新\"><a href=\"#3-1-5、规则持久化和动态更新\" class=\"headerlink\" title=\"3.1.5、规则持久化和动态更新\"></a>3.1.5、规则持久化和动态更新</h3><blockquote>\n<p>接入配置中心如：zookeeper等等，并对规则采用推模式</p>\n</blockquote>\n<h2 id=\"3-2、hystrix\"><a href=\"#3-2、hystrix\" class=\"headerlink\" title=\"3.2、hystrix\"></a>3.2、hystrix</h2><h3 id=\"3-2-1、引入依赖\"><a href=\"#3-2-1、引入依赖\" class=\"headerlink\" title=\"3.2.1、引入依赖\"></a>3.2.1、引入依赖</h3> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-starter-actuator&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix-dashboard&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;2.0.4.RELEASE&lt;&#x2F;version&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;2.0.4.RELEASE&lt;&#x2F;version&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-2、改造接口\"><a href=\"#3-2-2、改造接口\" class=\"headerlink\" title=\"3.2.2、改造接口\"></a>3.2.2、改造接口</h3><blockquote>\n<p>@HystrixCommand(fallbackMethod = “timeOutError”)</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Target(&#123;ElementType.METHOD&#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Inherited</span></span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> HystrixCommand &#123;</span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">groupKey</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">commandKey</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">threadPoolKey</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">fallbackMethod</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    HystrixProperty[] commandProperties() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    HystrixProperty[] threadPoolProperties() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    Class&lt;? extends Throwable&gt;[] ignoreExceptions() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">ObservableExecutionMode <span class=\"title\">observableExecutionMode</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> ObservableExecutionMode.EAGER</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    HystrixException[] raiseHystrixExceptions() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">defaultFallback</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/get&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\"><span class=\"meta\">@HystrixCommand(fallbackMethod = &quot;fallbackMethod&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">allInfos</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@RequestParam</span> Integer num)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num % <span class=\"number\">3</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;num % 3 == 0&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BaseException(<span class=\"string\">&quot;something bad whitch 3&quot;</span>, <span class=\"number\">400</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.ok();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (ProgramException | InterruptedException exception) &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;error&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.error(<span class=\"string\">&quot;error&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-3、针对接口配置熔断方法\"><a href=\"#3-2-3、针对接口配置熔断方法\" class=\"headerlink\" title=\"3.2.3、针对接口配置熔断方法\"></a>3.2.3、针对接口配置熔断方法</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 该方法是熔断回调方法，参数需要和接口保持一致</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> request</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> response</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> num</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">fallbackMethod</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@RequestParam</span> Integer num)</span> </span>&#123;</span><br><span class=\"line\">    response.setStatus(<span class=\"number\">500</span>);</span><br><span class=\"line\">    log.info(<span class=\"string\">&quot;发生了熔断！！&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> JsonResult.error(<span class=\"string\">&quot;熔断&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-4、配置默认策略\"><a href=\"#3-2-4、配置默认策略\" class=\"headerlink\" title=\"3.2.4、配置默认策略\"></a>3.2.4、配置默认策略</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hystrix:</span><br><span class=\"line\">  command:</span><br><span class=\"line\">    default:</span><br><span class=\"line\">      execution:</span><br><span class=\"line\">        isolation:</span><br><span class=\"line\">          strategy: THREAD</span><br><span class=\"line\">          thread:</span><br><span class=\"line\">            # 线程超时15秒,调用Fallback方法</span><br><span class=\"line\">            timeoutInMilliseconds: 15000</span><br><span class=\"line\">      metrics:</span><br><span class=\"line\">        rollingStats:</span><br><span class=\"line\">          timeInMilliseconds: 15000</span><br><span class=\"line\">      circuitBreaker:</span><br><span class=\"line\">        # 10秒内出现3个以上请求(已临近阀值),并且出错率在50%以上,开启断路器.断开服务,调用Fallback方法</span><br><span class=\"line\">        requestVolumeThreshold: 3</span><br><span class=\"line\">        sleepWindowInMilliseconds: 10000</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-5、接入监控\"><a href=\"#3-2-5、接入监控\" class=\"headerlink\" title=\"3.2.5、接入监控\"></a>3.2.5、接入监控</h3><p><img src=\"https://image.eelve.com/eblog/2021012002.png\" alt=\"hystrix\"></p>\n<p><img src=\"https://image.eelve.com/eblog/2021012003.png\" alt=\"hystrix示意图\"></p>\n<blockquote>\n<p>曲线：用来记录2分钟内流量的相对变化，我们可以通过它来观察到流量的上升和下降趋势。</p>\n</blockquote>\n<blockquote>\n<p><strong>集群监控需要用到注册中心</strong></p>\n</blockquote>\n<h2 id=\"3-3、resilience4j\"><a href=\"#3-3、resilience4j\" class=\"headerlink\" title=\"3.3、resilience4j\"></a>3.3、resilience4j</h2><h3 id=\"3-3-1、引入依赖\"><a href=\"#3-3-1、引入依赖\" class=\"headerlink\" title=\"3.3.1、引入依赖\"></a>3.3.1、引入依赖</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;io.github.resilience4j&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;resilience4j-spring-boot2&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;1.6.1&lt;&#x2F;version&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;io.github.resilience4j&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;resilience4j-bulkhead&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;1.6.1&lt;&#x2F;version&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;io.github.resilience4j&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;resilience4j-ratelimiter&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;1.6.1&lt;&#x2F;version&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;io.github.resilience4j&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;resilience4j-timelimiter&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;1.6.1&lt;&#x2F;version&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>可以按需要引入：bulkhead，ratelimiter，timelimiter等</p>\n</blockquote>\n<h3 id=\"3-3-2、改造接口\"><a href=\"#3-3-2、改造接口\" class=\"headerlink\" title=\"3.3.2、改造接口\"></a>3.3.2、改造接口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/get&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\"><span class=\"comment\">//@TimeLimiter(name = &quot;BulkheadA&quot;,fallbackMethod = &quot;fallbackMethod&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@CircuitBreaker(name = &quot;BulkheadA&quot;,fallbackMethod = &quot;fallbackMethod&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@Bulkhead(name = &quot;BulkheadA&quot;,fallbackMethod = &quot;fallbackMethod&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">allInfos</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@RequestParam</span> Integer num)</span></span>&#123;</span><br><span class=\"line\">    log.info(<span class=\"string\">&quot;param-----&gt;&quot;</span> + num);</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//Thread.sleep(num);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;num % 2 == 0&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BaseException(<span class=\"string\">&quot;something bad with 2&quot;</span>, <span class=\"number\">400</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num % <span class=\"number\">3</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;num % 3 == 0&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BaseException(<span class=\"string\">&quot;something bad whitch 3&quot;</span>, <span class=\"number\">400</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num % <span class=\"number\">5</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;num % 5 == 0&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ProgramException(<span class=\"string\">&quot;something bad whitch 5&quot;</span>, <span class=\"number\">400</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num % <span class=\"number\">7</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;num % 7 == 0&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> res = <span class=\"number\">1</span> / <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.ok();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (BufferUnderflowException e) &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;error&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JsonResult.error(<span class=\"string\">&quot;error&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-3、针对接口配置熔断方法\"><a href=\"#3-3-3、针对接口配置熔断方法\" class=\"headerlink\" title=\"3.3.3、针对接口配置熔断方法\"></a>3.3.3、针对接口配置熔断方法</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 需要参数一致，并且加上相应异常</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> request</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> response</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> num</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> exception</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> JsonResult <span class=\"title\">fallbackMethod</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, <span class=\"meta\">@RequestParam</span> Integer num, BulkheadFullException exception)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> JsonResult.error(<span class=\"string\">&quot;error 熔断&quot;</span> + num );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-4、配置规则\"><a href=\"#3-3-4、配置规则\" class=\"headerlink\" title=\"3.3.4、配置规则\"></a>3.3.4、配置规则</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">resilience4j.circuitbreaker:</span></span><br><span class=\"line\">    <span class=\"attr\">instances:</span></span><br><span class=\"line\">        <span class=\"attr\">backendA:</span></span><br><span class=\"line\">            <span class=\"attr\">registerHealthIndicator:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            <span class=\"attr\">slidingWindowSize:</span> <span class=\"number\">100</span></span><br><span class=\"line\">        <span class=\"attr\">backendB:</span></span><br><span class=\"line\">            <span class=\"attr\">registerHealthIndicator:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            <span class=\"attr\">slidingWindowSize:</span> <span class=\"number\">10</span></span><br><span class=\"line\">            <span class=\"attr\">permittedNumberOfCallsInHalfOpenState:</span> <span class=\"number\">3</span></span><br><span class=\"line\">            <span class=\"attr\">slidingWindowType:</span> <span class=\"string\">TIME_BASED</span></span><br><span class=\"line\">            <span class=\"attr\">minimumNumberOfCalls:</span> <span class=\"number\">20</span></span><br><span class=\"line\">            <span class=\"attr\">waitDurationInOpenState:</span> <span class=\"string\">50s</span></span><br><span class=\"line\">            <span class=\"attr\">failureRateThreshold:</span> <span class=\"number\">50</span></span><br><span class=\"line\">            <span class=\"attr\">eventConsumerBufferSize:</span> <span class=\"number\">10</span></span><br><span class=\"line\">            <span class=\"attr\">recordFailurePredicate:</span> <span class=\"string\">io.github.robwin.exception.RecordFailurePredicate</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">resilience4j.retry:</span></span><br><span class=\"line\">    <span class=\"attr\">instances:</span></span><br><span class=\"line\">        <span class=\"attr\">backendA:</span></span><br><span class=\"line\">            <span class=\"attr\">maxRetryAttempts:</span> <span class=\"number\">3</span></span><br><span class=\"line\">            <span class=\"attr\">waitDuration:</span> <span class=\"string\">10s</span></span><br><span class=\"line\">            <span class=\"attr\">enableExponentialBackoff:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            <span class=\"attr\">exponentialBackoffMultiplier:</span> <span class=\"number\">2</span></span><br><span class=\"line\">            <span class=\"attr\">retryExceptions:</span></span><br><span class=\"line\">                <span class=\"bullet\">-</span> <span class=\"string\">org.springframework.web.client.HttpServerErrorException</span></span><br><span class=\"line\">                <span class=\"bullet\">-</span> <span class=\"string\">java.io.IOException</span></span><br><span class=\"line\">            <span class=\"attr\">ignoreExceptions:</span></span><br><span class=\"line\">                <span class=\"bullet\">-</span> <span class=\"string\">io.github.robwin.exception.BusinessException</span></span><br><span class=\"line\">        <span class=\"attr\">backendB:</span></span><br><span class=\"line\">            <span class=\"attr\">maxRetryAttempts:</span> <span class=\"number\">3</span></span><br><span class=\"line\">            <span class=\"attr\">waitDuration:</span> <span class=\"string\">10s</span></span><br><span class=\"line\">            <span class=\"attr\">retryExceptions:</span></span><br><span class=\"line\">                <span class=\"bullet\">-</span> <span class=\"string\">org.springframework.web.client.HttpServerErrorException</span></span><br><span class=\"line\">                <span class=\"bullet\">-</span> <span class=\"string\">java.io.IOException</span></span><br><span class=\"line\">            <span class=\"attr\">ignoreExceptions:</span></span><br><span class=\"line\">                <span class=\"bullet\">-</span> <span class=\"string\">io.github.robwin.exception.BusinessException</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">resilience4j.bulkhead:</span></span><br><span class=\"line\">    <span class=\"attr\">instances:</span></span><br><span class=\"line\">        <span class=\"attr\">backendA:</span></span><br><span class=\"line\">            <span class=\"attr\">maxConcurrentCalls:</span> <span class=\"number\">10</span></span><br><span class=\"line\">        <span class=\"attr\">backendB:</span></span><br><span class=\"line\">            <span class=\"attr\">maxWaitDuration:</span> <span class=\"string\">10ms</span></span><br><span class=\"line\">            <span class=\"attr\">maxConcurrentCalls:</span> <span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">resilience4j.thread-pool-bulkhead:</span></span><br><span class=\"line\">  <span class=\"attr\">instances:</span></span><br><span class=\"line\">    <span class=\"attr\">backendC:</span></span><br><span class=\"line\">      <span class=\"attr\">maxThreadPoolSize:</span> <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"attr\">coreThreadPoolSize:</span> <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"attr\">queueCapacity:</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">resilience4j.ratelimiter:</span></span><br><span class=\"line\">    <span class=\"attr\">instances:</span></span><br><span class=\"line\">        <span class=\"attr\">backendA:</span></span><br><span class=\"line\">            <span class=\"attr\">limitForPeriod:</span> <span class=\"number\">10</span></span><br><span class=\"line\">            <span class=\"attr\">limitRefreshPeriod:</span> <span class=\"string\">1s</span></span><br><span class=\"line\">            <span class=\"attr\">timeoutDuration:</span> <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"attr\">registerHealthIndicator:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            <span class=\"attr\">eventConsumerBufferSize:</span> <span class=\"number\">100</span></span><br><span class=\"line\">        <span class=\"attr\">backendB:</span></span><br><span class=\"line\">            <span class=\"attr\">limitForPeriod:</span> <span class=\"number\">6</span></span><br><span class=\"line\">            <span class=\"attr\">limitRefreshPeriod:</span> <span class=\"string\">500ms</span></span><br><span class=\"line\">            <span class=\"attr\">timeoutDuration:</span> <span class=\"string\">3s</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">resilience4j.timelimiter:</span></span><br><span class=\"line\">    <span class=\"attr\">instances:</span></span><br><span class=\"line\">        <span class=\"attr\">backendA:</span></span><br><span class=\"line\">            <span class=\"attr\">timeoutDuration:</span> <span class=\"string\">2s</span></span><br><span class=\"line\">            <span class=\"attr\">cancelRunningFuture:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">backendB:</span></span><br><span class=\"line\">            <span class=\"attr\">timeoutDuration:</span> <span class=\"string\">1s</span></span><br><span class=\"line\">            <span class=\"attr\">cancelRunningFuture:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>配置的规则可以被代码覆盖</p>\n</blockquote>\n<h3 id=\"3-3-5、配置监控\"><a href=\"#3-3-5、配置监控\" class=\"headerlink\" title=\"3.3.5、配置监控\"></a>3.3.5、配置监控</h3><blockquote>\n<p>如grafana等</p>\n</blockquote>\n<h1 id=\"肆、关注点\"><a href=\"#肆、关注点\" class=\"headerlink\" title=\"肆、关注点\"></a>肆、关注点</h1><ul>\n<li>是否需要过滤部分异常</li>\n<li>是否需要全局默认规则</li>\n<li>可能需要引入其他中间件</li>\n<li>k8s流量控制</li>\n<li>规则存储和动态修改</li>\n<li>接入改造代价</li>\n</ul>\n<h1 id=\"【后面的话】\"><a href=\"#【后面的话】\" class=\"headerlink\" title=\"【后面的话】\"></a>【<strong>后面的话</strong>】</h1><p>个人建议的话，比较推荐sentinel，它提供了很多接口便于开发者自己拓展，同时我觉得他的规则动态更新也比较方便。最后是相关示例代码:<a href=\"https://github.com/eelve/limiting\">单体应用示例代码</a></p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"springboot","path":"api/categories/springboot.json"}],"tags":[{"name":"java","path":"api/tags/java.json"},{"name":"springboot","path":"api/tags/springboot.json"}]},{"title":"站点迁移指北","slug":"站点迁移指北","date":"2020-11-07T13:53:22.000Z","updated":"2021-04-19T06:44:39.271Z","comments":true,"path":"api/articles/站点迁移指北.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png","content":"<p>【<strong>前面的话</strong>】由于服务器快到期了，就重新另购了一台服务器。这边就来记录一下迁移的过程和日常数据备份等等。</p>\n<h1 id=\"壹、站点概览\"><a href=\"#壹、站点概览\" class=\"headerlink\" title=\"壹、站点概览\"></a>壹、站点概览</h1><p>我的站点使用<code>halo</code>搭建的，主要涉及到的中间件有：<code>Nginx</code>、<code>Mysql</code>等；日常运行产生的数据有站点运行数据和资源数据，所以站点迁移也会从这些方面着手。</p>\n<h1 id=\"贰、中间件迁移\"><a href=\"#贰、中间件迁移\" class=\"headerlink\" title=\"贰、中间件迁移\"></a>贰、中间件迁移</h1><h2 id=\"2-1、Nginx\"><a href=\"#2-1、Nginx\" class=\"headerlink\" title=\"2.1、Nginx\"></a>2.1、Nginx</h2><p>其实<code>Nginx</code>的迁移很简单，只需要在新的服务器中安装即可，然后迁移<code>nginx.conf</code>配置文件。我的站点还用到<code>https</code>，所有在安装的时候要注意安装相应的模块以及证书的迁移。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/usr/<span class=\"built_in\">local</span>/nginx --add-module=../ngx_cache_purge-1.3/  --with-http_stub_status_module --with-http_ssl_module --with-http_flv_module --with-http_gzip_static_module</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-2、Mysql\"><a href=\"#2-2、Mysql\" class=\"headerlink\" title=\"2.2、Mysql\"></a>2.2、Mysql</h2><p>在新的服务器安装<code>Mysql</code>服务，然后导入sql文件即可：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump <span class=\"operator\">-</span>u$db_user <span class=\"operator\">-</span>p$db_password $db_name <span class=\"operator\">|</span> gzip <span class=\"operator\">&gt;</span> <span class=\"operator\">/</span>home<span class=\"operator\">/</span>firbackup<span class=\"operator\">/</span>halodb.sql.gz</span><br></pre></td></tr></table></figure>\n<h1 id=\"叁、资源数据\"><a href=\"#叁、资源数据\" class=\"headerlink\" title=\"叁、资源数据\"></a>叁、资源数据</h1><p>对于资源数据，主要是<code>halo</code>产生的主题以及上传的文章的图片等等。就直接采用压缩打包，然后发送到新服务器再解压即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar czvf /home/firbackup/halo.tar.gz  /root/.halo</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#如果在同一个内网，记得使用内网ip，速度会更快哦</span></span><br><span class=\"line\">scp halo.tar.gz  root@ip.ip.ip.ip:/root/</span><br></pre></td></tr></table></figure>\n<p>然后再解压到<code>/root/.halo</code> 文件夹即可</p>\n<h1 id=\"肆、重新启动\"><a href=\"#肆、重新启动\" class=\"headerlink\" title=\"肆、重新启动\"></a>肆、重新启动</h1><p>配置域名解析和相应的安全策略以及安装<code>JDK</code>之后，你就可以重新启动<code>halo</code>服务就好，到这里站点迁移工作就完成了。</p>\n<hr>\n<h1 id=\"【后面的话】\"><a href=\"#【后面的话】\" class=\"headerlink\" title=\"【后面的话】\"></a>【<strong>后面的话</strong>】</h1><p>日常备份也就是应用的配置文件以及应用产生的必要数据的备份。我这边的方案是定时打包压缩之后发送到邮箱中。下面给出具体脚本：</p>\n<h2 id=\"安装配置mailx\"><a href=\"#安装配置mailx\" class=\"headerlink\" title=\"安装配置mailx\"></a>安装配置<code>mailx</code></h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install mailx</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/mail.rc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#添加如下配置</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> ssl-verify=ignore</span><br><span class=\"line\"><span class=\"built_in\">set</span> nss-config-dir=/root/.certs/   <span class=\"comment\">#使用命令find / -name &quot;cert*.db&quot; 查找位置（根据自身系统而定）</span></span><br><span class=\"line\"><span class=\"comment\">#weikeyi 发送email的设置</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> from=youremail@163.com  <span class=\"comment\">#163邮箱账号</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> smtp=smtps://smtp.163.com:465   <span class=\"comment\">###smtp服务商#端口465#smtps协议</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> smtp-auth-user=youremail@163.com  <span class=\"comment\">#与上邮箱相同</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> smtp-auth-password=yourpasswd   <span class=\"comment\">#自己的授权码#非邮箱密码</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> smtp-auth=login</span><br></pre></td></tr></table></figure>\n<p>如果在测试执行脚本，发现发送报错的话，那就是证书有问题，只需要在上面提到的<code>/root/.certs/</code>文件夹中放置<code>163邮箱</code>的证书即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Resolving host smtp.163.com . . . <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Connecting to 220.181.12.11:465 . . . connected.</span><br><span class=\"line\">Error initializing NSS: Unknown error -8015.</span><br><span class=\"line\"><span class=\"string\">&quot;/root/dead.letter&quot;</span> 236028/17228757</span><br><span class=\"line\">. . . message not sent.</span><br><span class=\"line\">Resolving host smtp.163.com . . . <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Connecting to 220.181.12.16:465 . . . connected.</span><br><span class=\"line\">Error initializing NSS: Unknown error -8015.</span><br><span class=\"line\"><span class=\"string\">&quot;/root/dead.letter&quot;</span> 6966/507305</span><br><span class=\"line\">. . . message not sent.</span><br><span class=\"line\">Resolving host smtp.163.com . . . <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Connecting to 220.181.12.11:465 . . . connected.</span><br><span class=\"line\">Error initializing NSS: Unknown error -8015.</span><br><span class=\"line\"><span class=\"string\">&quot;/root/dead.letter&quot;</span> 324/22426</span><br><span class=\"line\">. . . message not sent.</span><br><span class=\"line\">Resolving host smtp.163.com . . . <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Connecting to 220.181.12.14:465 . . . connected.</span><br><span class=\"line\">Error initializing NSS: Unknown error -8015.</span><br><span class=\"line\"><span class=\"string\">&quot;/root/dead.letter&quot;</span> 48/2440</span><br><span class=\"line\">. . . message not sent.</span><br><span class=\"line\">Resolving host smtp.163.com . . . <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Connecting to 220.181.12.17:465 . . . connected.</span><br><span class=\"line\">Error initializing NSS: Unknown error -8015.</span><br><span class=\"line\"><span class=\"string\">&quot;/root/dead.letter&quot;</span> 342/10021</span><br><span class=\"line\">. . . message not sent.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"编写脚本\"><a href=\"#编写脚本\" class=\"headerlink\" title=\"编写脚本\"></a>编写脚本</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#firbackup 文件和 and database</span></span><br><span class=\"line\"><span class=\"comment\">###################删除halo备份#################</span></span><br><span class=\"line\">rm -fr /home/firbackup/halo_$(date -d <span class=\"string\">&#x27;7 days ago&#x27;</span> +%Y%m%d).tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###################备份halo#################</span></span><br><span class=\"line\">tar czvf /home/firbackup/halo_$(date +%Y%m%d).tar.gz  /root/.halo</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;halo备份的下载地址：http://eelve.com/bp/&#x27;</span>halo_$(date +%Y%m%d).tar.gz &gt;&gt; /home/firbackup/info_$(date +%Y%m%d).txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###################删除备份数据库####################</span></span><br><span class=\"line\">rm -fr /home/firbackup/halodb_$(date -d <span class=\"string\">&#x27;7 days ago&#x27;</span> +%Y%m%d).sql.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###################备份halodb数据库####################</span></span><br><span class=\"line\">db_user=<span class=\"string\">&quot;root&quot;</span>       <span class=\"comment\">#输入你的数据库用户名 </span></span><br><span class=\"line\">db_password=<span class=\"string\">&quot;root&quot;</span> <span class=\"comment\">#输入你的数据库密码</span></span><br><span class=\"line\">db_name=<span class=\"string\">&quot;halodb&quot;</span>       <span class=\"comment\">#输入你要备份的数据库名   </span></span><br><span class=\"line\">mysqldump -u<span class=\"variable\">$db_user</span> -p<span class=\"variable\">$db_password</span> <span class=\"variable\">$db_name</span> | gzip &gt; /home/firbackup/halodb_$(date +%Y%m%d).sql.gz</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;halo数据库备份的下载地址：http://eelve.com/bp/&#x27;</span>halodb_$(date +%Y%m%d).sql.gz &gt;&gt; /home/firbackup/info_$(date +%Y%m%d).txt </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###################准备开始发邮件###############</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /home/firbackup/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###################邮件发halo数据库备份###############</span></span><br><span class=\"line\">mailx -v -s <span class=\"string\">&quot;请注意查收&quot;</span>$(date +%Y%m%d)<span class=\"string\">&quot;halo数据库的相关备份&quot;</span> -a halodb_$(date +%Y%m%d).sql.gz  i@eelve.com&lt;halodb_$(date +%Y%m%d).sql.gz</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置定时任务\"><a href=\"#配置定时任务\" class=\"headerlink\" title=\"配置定时任务\"></a>配置定时任务</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@fir /home]<span class=\"comment\">#crontab -e</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##每天定时01:00:00 执行脚本 /home/firbackup.sh</span></span><br><span class=\"line\">0 1 * * * sh /home/firbackup.sh</span><br><span class=\"line\"><span class=\"comment\">##每天凌晨2点重启springboot应用</span></span><br><span class=\"line\">0 2 * * * sh /home/auto_restart_springboots.sh</span><br></pre></td></tr></table></figure>\n<p>到这里你只需要去邮箱中下载备份的数据就好了。另外邮箱发送附件是有大小限制的，每个邮箱的具体情况不一。另外对于文章中的图片数据可以上传到<code>又拍云</code>等云存储中即可。最后一句话<code>道路千万条，数据备份第一条</code>。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"lifeme","path":"api/categories/lifeme.json"}],"tags":[{"name":"lifeme","path":"api/tags/lifeme.json"}]},{"title":"九月面试总结","slug":"九月面试总结","date":"2020-09-30T14:04:57.000Z","updated":"2021-04-19T06:44:39.212Z","comments":true,"path":"api/articles/九月面试总结.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png","content":"<hr>\n<p>【<strong>前情提要</strong>】最近参加了几次面试，面试的感受是简历上写的东西一定是都烂熟于心，另外知识要成体系，引导面试官跟着你走，而不是被面试官牵着走。另外hr最常问的一个问题是：你为什么从上一份工作离职。下面简单记录一下我碰到的面试题。</p>\n<hr>\n<h1 id=\"Question-List\"><a href=\"#Question-List\" class=\"headerlink\" title=\"Question List\"></a>Question List</h1><ul>\n<li>1.ArrayList和LinkedList区别</li>\n<li>2.Object主要方法</li>\n<li>3.实现线程的方法</li>\n<li>4.线程池核心参数和模型</li>\n<li>5.JUC</li>\n<li>6.HashMap为啥不安全</li>\n<li>7.CurrentHashMap怎么保证安全</li>\n<li>8.为什么会有线程不安全问题，有那些保证线程同步的方法</li>\n<li>9.说一说synchronized</li>\n<li>10.说一说Java内存模型</li>\n<li>11.volatile作用那些</li>\n<li>12.@Autowired 和@Resource区别</li>\n<li>13.springboot是怎么启动的</li>\n<li>14.怎么解决循环依赖</li>\n<li>15.什么是Aop，有那些方式实现</li>\n<li>16.动态代理有那些，分别怎么实现</li>\n<li>17.怎么自定义注解</li>\n<li>18.什么是双亲委派</li>\n<li>19.类加载机制</li>\n<li>20.辣鸡回收算法，以及有那些回收器</li>\n<li>21.B树和B+树，为啥MySQL用</li>\n<li>22.怎么优化慢SQL</li>\n<li>23.MySQL事物隔离级别，和MVVC怎么保障幻读和脏读</li>\n<li>24.项目为什么用MQ，怎么解决使用MQ产生的问题</li>\n<li>25.Redis持久化机制</li>\n<li>26.redis淘汰策略</li>\n<li>27.redis怎么保障双写一致</li>\n<li>28.怎么保障分布式事物</li>\n<li>29.为什么是三次握手四次挥手</li>\n<li>30.Https是怎么保障安全的</li>\n<li>31.还有些算法的</li>\n<li>32.穿插项目问</li>\n<li>33.String源码考察，intern方法</li>\n<li>34.Object源码考察</li>\n<li>35.Thread源码考察，线程顺序执行等等</li>\n<li>36.ThreadLocal内存泄露问题考察</li>\n<li>37.类初始化考察，new，克隆，反序列化</li>\n<li>38.Spring MVC设计模式</li>\n<li>39.JVM调优策略</li>\n</ul>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"interview","path":"api/categories/interview.json"}],"tags":[{"name":"interview","path":"api/tags/interview.json"}]},{"title":"WSL2中体验Redis的布隆过滤器","slug":"WSL2中体验Redis的布隆过滤器","date":"2020-08-15T03:39:40.000Z","updated":"2023-09-30T08:39:39.682Z","comments":true,"path":"api/articles/WSL2中体验Redis的布隆过滤器.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png","content":"<p>【<strong>前面的话</strong>】前面已经安装了<a href=\"https://eelve.com/posts/22fec071.html\">WSL2</a> ，最近准备研究一下Redis的布隆过滤器，现在就先搭建一下环境。</p>\n<hr>\n<h1 id=\"壹、准备环境\"><a href=\"#壹、准备环境\" class=\"headerlink\" title=\"壹、准备环境\"></a>壹、准备环境</h1><ul>\n<li>WSL：WSL2</li>\n<li>Docker: Docker for Windows <code>Use the WSL 2 based engine</code></li>\n</ul>\n<h1 id=\"贰、安装过程\"><a href=\"#贰、安装过程\" class=\"headerlink\" title=\"贰、安装过程\"></a>贰、安装过程</h1><h2 id=\"2-1-前情资讯\"><a href=\"#2-1-前情资讯\" class=\"headerlink\" title=\"2.1 前情资讯\"></a>2.1 前情资讯</h2><p><code>Redis v4.0</code>之后有了 <code>Module（模块/插件）</code>功能，<code>Redis Modules</code>让 <code>Redis</code> 可以使用外部模块扩展其功能 。布隆过滤器就是其中的<code>Module</code>。详情可以查看<code>Redis</code>官方对 <code>Redis Modules</code>的介绍 ：<a href=\"https://redis.io/modules\">https://redis.io/modules</a></p>\n<p>另外，官网推荐了一个<code>RedisBloom</code>作为<code>Redis</code>布隆过滤器的<code>Module</code>,地址：<a href=\"https://github.com/RedisBloom/RedisBloom\">https://github.com/RedisBloom/RedisBloom</a>. 其他还有：</p>\n<ul>\n<li>redis-lua-scaling-bloom-filter （lua 脚本实现）：<a href=\"https://github.com/erikdubbelboer/redis-lua-scaling-bloom-filter\">https://github.com/erikdubbelboer/redis-lua-scaling-bloom-filter</a></li>\n<li>pyreBloom（Python中的快速Redis 布隆过滤器） ：<a href=\"https://github.com/seomoz/pyreBloom\">https://github.com/seomoz/pyreBloom</a></li>\n<li>……</li>\n</ul>\n<p><code>RedisBloom</code>提供了多种语言的客户端支持，包括：<code>Python</code>、<code>Java</code>、<code>JavaScript</code> 和 <code>PHP</code>。</p>\n<h2 id=\"2-2-Docker安装\"><a href=\"#2-2-Docker安装\" class=\"headerlink\" title=\"2.2 Docker安装\"></a>2.2 Docker安装</h2><p>如果我们需要体验<code>Redis</code>中的布隆过滤器非常简单，通过 Docker 就可以了！这里我们使用这个仓库下的镜像：<a href=\"https://hub.docker.com/r/redislabs/rebloom/\">https://hub.docker.com/r/redislabs/rebloom/</a></p>\n<p>下面是具体命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cc@Chirius:/mnt/c/Users/Chirius$ docker run -p 9379:6379 --name redis-redisbloom redislabs/rebloom:latest</span><br><span class=\"line\">1:C 15 Aug 2020 03:26:02.860 <span class=\"comment\"># oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span></span><br><span class=\"line\">1:C 15 Aug 2020 03:26:02.860 <span class=\"comment\"># Redis version=6.0.5, bits=64, commit=00000000, modified=0, pid=1, just started</span></span><br><span class=\"line\">1:C 15 Aug 2020 03:26:02.860 <span class=\"comment\"># Configuration loaded</span></span><br><span class=\"line\">1:M 15 Aug 2020 03:26:02.862 * Running mode=standalone, port=6379.</span><br><span class=\"line\">1:M 15 Aug 2020 03:26:02.862 <span class=\"comment\"># WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.</span></span><br><span class=\"line\">1:M 15 Aug 2020 03:26:02.862 <span class=\"comment\"># Server initialized</span></span><br><span class=\"line\">1:M 15 Aug 2020 03:26:02.862 <span class=\"comment\"># WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add &#x27;vm.overcommit_memory = 1&#x27; to /etc/sysctl.conf and then reboot or run the command &#x27;sysctl vm.overcommit_memory=1&#x27; for this to take effect.</span></span><br><span class=\"line\">1:M 15 Aug 2020 03:26:02.862 <span class=\"comment\"># WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command &#x27;echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled&#x27; as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.</span></span><br><span class=\"line\">1:M 15 Aug 2020 03:26:02.864 * Module <span class=\"string\">&#x27;bf&#x27;</span> loaded from /usr/lib/redis/modules/redisbloom.so</span><br><span class=\"line\">1:M 15 Aug 2020 03:26:02.864 * Ready to accept connections</span><br><span class=\"line\">^C1:signal-handler (1597462093) Received SIGINT scheduling shutdown...</span><br><span class=\"line\">1:M 15 Aug 2020 03:28:13.217 <span class=\"comment\"># User requested shutdown...</span></span><br><span class=\"line\">1:M 15 Aug 2020 03:28:13.217 <span class=\"comment\"># Redis is now ready to exit, bye bye...</span></span><br></pre></td></tr></table></figure>\n<p>根据提示修改内存参数等，注意使用root用户：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cc@Chirius:/mnt/c/Users/Chirius$ <span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">cc@Chirius:~$ su root</span><br><span class=\"line\">Password:</span><br><span class=\"line\">root@Chirius:/home/cc<span class=\"comment\"># vi /etc/sysctl.conf</span></span><br><span class=\"line\">root@Chirius:/home/cc<span class=\"comment\"># sysctl vm.overcommit_memory=1</span></span><br><span class=\"line\">vm.overcommit_memory = 1</span><br><span class=\"line\">root@Chirius:/home/cc<span class=\"comment\"># echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span></span><br><span class=\"line\">root@Chirius:/home/cc<span class=\"comment\"># ll /sys/kernel/mm/transparent_hugepage/enabled</span></span><br><span class=\"line\">-rw-r--r-- 1 root root 4096 Aug 15 11:30 /sys/kernel/mm/transparent_hugepage/enabled</span><br><span class=\"line\">root@Chirius:/home/cc<span class=\"comment\"># cat /sys/kernel/mm/transparent_hugepage/enabled</span></span><br><span class=\"line\">always madvise [never]</span><br><span class=\"line\">root@Chirius:/home/cc<span class=\"comment\"># ll /etc/rc.local</span></span><br><span class=\"line\">ls: cannot access <span class=\"string\">&#x27;/etc/rc.local&#x27;</span>: No such file or directory</span><br><span class=\"line\">root@Chirius:/home/cc<span class=\"comment\"># vi /etc/rc.local</span></span><br><span class=\"line\">root@Chirius:/home/cc<span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n<p>然后再重启容器，就可以启动成功了，然后进行体验</p>\n<h1 id=\"叁、布隆过滤器体验\"><a href=\"#叁、布隆过滤器体验\" class=\"headerlink\" title=\"叁、布隆过滤器体验\"></a>叁、布隆过滤器体验</h1><h2 id=\"3-1-常用命令\"><a href=\"#3-1-常用命令\" class=\"headerlink\" title=\"3.1 常用命令\"></a>3.1 常用命令</h2><blockquote>\n<p>注意： key:布隆过滤器的名称，item : 添加的元素。</p>\n</blockquote>\n<ul>\n<li><code>BF.ADD</code>：将元素添加到布隆过滤器中，如果该过滤器尚不存在，则创建该过滤器。格式：<code>BF.ADD &#123;key&#125; &#123;item&#125;</code>。</li>\n<li><code>BF.MADD</code>: 将一个或多个元素添加到“布隆过滤器”中，并创建一个尚不存在的过滤器。该命令的操作方式BF.ADD与之相同，只不过它允许多个输入并返回多个值。格式：<code>BF.MADD &#123;key&#125; &#123;item&#125; [item ...]</code>。</li>\n<li><code>**BF.EXISTS **</code>: 确定元素是否在布隆过滤器中存在。格式：<code>BF.EXISTS &#123;key&#125; &#123;item&#125;</code>。</li>\n<li><code>BF.MEXISTS</code>： 确定一个或者多个元素是否在布隆过滤器中存在格式：<code>BF.MEXISTS &#123;key&#125; &#123;item&#125; [item ...]</code>。</li>\n</ul>\n<p>另外，<code>BF.RESERVE</code>命令需要单独介绍一下：</p>\n<p>这个命令的格式如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BF.RESERVE &#123;key&#125; &#123;error_rate&#125; &#123;capacity&#125; [EXPANSION expansion] 。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>下面简单介绍一下每个参数的具体含义：</p>\n<ul>\n<li><code>key</code>：布隆过滤器的名称</li>\n<li><code>error_rate</code>:误报的期望概率。这应该是介于0到1之间的十进制值。例如，对于期望的误报率0.1％（1000中为1），<code>error_rate</code>应该设置为0.001。该数字越接近零，则每个项目的内存消耗越大，并且每个操作的CPU使用率越高。</li>\n<li><code>capacity</code>: 过滤器的容量。当实际存储的元素个数超过这个值之后，性能将开始下降。实际的降级将取决于超出限制的程度。随着过滤器元素数量呈指数增长，性能将线性下降。</li>\n</ul>\n<p>可选参数：</p>\n<ul>\n<li>expansion：如果创建了一个新的子过滤器，则其大小将是当前过滤器的大小乘以<code>expansion</code>。默认扩展值为2。这意味着每个后续子过滤器将是前一个子过滤器的两倍。</li>\n</ul>\n<h2 id=\"3-2-体验\"><a href=\"#3-2-体验\" class=\"headerlink\" title=\"3.2 体验\"></a>3.2 体验</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cc@Chirius:/mnt/c/Users/Chirius$ docker <span class=\"built_in\">exec</span> -it redis-redisbloom bash</span><br><span class=\"line\">root@9cc653f9411a:/data<span class=\"comment\"># redis-cli</span></span><br><span class=\"line\">127.0.0.1:6379&gt; BF.ADD mine zzl</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; BF.ADD mine llo</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; BF.ADD mine iio</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; BF.EXISTS mine super</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 0</span><br><span class=\"line\">127.0.0.1:6379&gt; BF.EXISTS mine iio</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; BF.EXISTS mine zzl</span><br><span class=\"line\">(<span class=\"built_in\">integer</span>) 1</span><br><span class=\"line\">127.0.0.1:6379&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>【<strong>后面的话</strong>】布隆过滤器主要用来解决<code>缓存穿透(大量请求的 key 根本不存在于缓存中，导致请求直接到了数据库上，根本没有经过缓存这一层)</code>。一般MySQL 默认的最大连接数在 150 左右，这个可以通过<code>show variables like &#39;%max_connections%&#39;;</code>命令来查看。最大连接数一个还只是一个指标，cpu，内存，磁盘，网络等无力条件都是其运行指标，这些指标都会限制其并发能力！所以，一般<code>3000</code>个并发请求就能打死大部分数据库了。布隆过滤器是一个非常神奇的数据结构，通过它我们可以非常方便地判断一个给定数据是否存在与海量数据中。我们需要的就是判断<code>key</code>是否合法。具体是这样做的：把所有可能存在的请求的值都存放在布隆过滤器中，当用户请求过来，我会先判断用户发来的请求的值是否存在于布隆过滤器中。不存在的话，直接返回请求参数错误信息给客户端，存在的话才会走具体的业务的流程。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"WSL","path":"api/categories/WSL.json"}],"tags":[{"name":"WSL，Redis","path":"api/tags/WSL，Redis.json"}]},{"title":"WSL2初体验","slug":"WSL2初体验","date":"2020-07-19T12:33:01.000Z","updated":"2023-09-30T08:39:39.682Z","comments":true,"path":"api/articles/WSL2初体验.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/2020071901-6f2b76d2c58f4213950f820ef05f85d8.png","content":"<p>【<strong>前面的话</strong>】前面已经对<a href=\"https://eelve.com/posts/f42ecfec.html\">WSL初体验</a> ，今天就将升级为WSL2，并且前面已经对<a href=\"https://eelve.com/posts/f42ecfec.html\">WSL初体验</a> ，今天就将升级为WSL2，并且在WSL2使用xrdp实现图形桌面。</p>\n<hr>\n<h1 id=\"壹、WSL升级为WSL2\"><a href=\"#壹、WSL升级为WSL2\" class=\"headerlink\" title=\"壹、WSL升级为WSL2\"></a>壹、WSL升级为WSL2</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --set-version Ubuntu-18.04 2</span><br></pre></td></tr></table></figure>\n<p>其中<code>Ubuntu-18.04</code>为你安装的WSL的发行版本，可以通过<code> wsl -l -v</code>来查看安装的WSL的发行版本详细信息。</p>\n<p>另外我在升级的过程中遇到了<code>WSL 2 需要更新其内核组件</code>问题。解决方法也很简单，<a href=\"https://docs.microsoft.com/zh-cn/windows/wsl/wsl2-kernel\">从微软下载WSL2 Linux内核的升级包</a>, 下载完成之后直接一路安装即可，之后WSL2就可以成功升级了。</p>\n<p>最后如果想要将默认的WSL发行版设置成WSL2，可以使用下面命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --set-default-version 2</span><br></pre></td></tr></table></figure>\n<h1 id=\"贰、安装图形化桌面\"><a href=\"#贰、安装图形化桌面\" class=\"headerlink\" title=\"贰、安装图形化桌面\"></a>贰、安装图形化桌面</h1><h2 id=\"2-1-安装\"><a href=\"#2-1-安装\" class=\"headerlink\" title=\"2.1 安装\"></a>2.1 安装</h2><p>先更新,再安装<code>xfce4</code>和<code>xrdp</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt update</span><br><span class=\"line\">$ sudo apt install -y xfce4 xrdp</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-2-修改xrdp默认端口\"><a href=\"#2-2-修改xrdp默认端口\" class=\"headerlink\" title=\"2.2 修改xrdp默认端口\"></a>2.2 修改xrdp默认端口</h2><p>由于<code>xrdp</code>安装好后默认配置使用的是和Windows远程桌面相同的<code>3389</code> 端口,为了防止和Windows系统远程桌面冲突,建议修改成其他的端口</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo vim /etc/xrdp/xrdp.ini</span><br><span class=\"line\"><span class=\"comment\"># 修改下面这一行,将默认的3389改成其他端口即可</span></span><br><span class=\"line\">port=13389</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-3-为当前用户指定登录session类型\"><a href=\"#2-3-为当前用户指定登录session类型\" class=\"headerlink\" title=\"2.3 为当前用户指定登录session类型\"></a>2.3 为当前用户指定登录session类型</h2><pre><code>注意这一步很重要,如果不设置的话会导致后面远程桌面连接上闪退\n</code></pre>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim ~/.xsession</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入下面内容(就一行)</span></span><br><span class=\"line\">xfce4-session</span><br><span class=\"line\">```    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 2.4 启动xrdp</span></span><br><span class=\"line\"></span><br><span class=\"line\">由于WSL2里面不能用`systemd`,所以需要手动启动</span><br><span class=\"line\"></span><br><span class=\"line\">```bash</span><br><span class=\"line\">$ sudo /etc/init.d/xrdp start</span><br></pre></td></tr></table></figure>\n<h1 id=\"叁、远程访问\"><a href=\"#叁、远程访问\" class=\"headerlink\" title=\"叁、远程访问\"></a>叁、远程访问</h1><p>在Windows系统中运行mstsc命令打开远程桌面连接,地址输入localhost:13389</p>\n<pre><code>注意这里的端口号应当与上面修改配置中一致\n</code></pre>\n<p><img src=\"https://image.eelve.com/eblog/2020071901-6f2b76d2c58f4213950f820ef05f85d8.png\" alt=\"2020071901\"><br><img src=\"https://image.eelve.com/eblog/2020071902-c42b474dc5374bda9f576619a491b1ed.png\" alt=\"2020071902\"></p>\n<p>输入linux系统的用户名和密码，就可以登陆成功了</p>\n<p><img src=\"https://image.eelve.com/eblog/2020071903-b7632286a2c648bdac1d0a92585612a3.png\" alt=\"2020071903\"></p>\n<p>【<strong>后面的话</strong>】如果在日常使用中遇到WSL异常，一般为网络端口占用问题导致，一般可以通过重置网络修复，使用管理员身份运行cmd，重置端口，然后重启：<code>netsh winsock reset</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">参考的对象类型不支持尝试的操作。</span><br><span class=\"line\"></span><br><span class=\"line\">[已退出进程，代码为 4294967295]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Microsoft Windows [版本 10.0.19041.388]</span><br><span class=\"line\">(c) 2020 Microsoft Corporation. 保留所有权利。</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\WINDOWS\\system32&gt;netsh winsock reset</span><br><span class=\"line\"></span><br><span class=\"line\">成功地重置 Winsock 目录。</span><br><span class=\"line\">你必须重新启动计算机才能完成重置。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">C:\\WINDOWS\\system32&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"WSL","path":"api/categories/WSL.json"}],"tags":[{"name":"WSL，Windows","path":"api/tags/WSL，Windows.json"}]},{"title":"Tomcat中URI不支持特殊字符解决方案","slug":"Tomcat中URI不支持特殊字符解决方案","date":"2020-06-30T04:17:57.000Z","updated":"2021-04-19T06:44:39.140Z","comments":true,"path":"api/articles/Tomcat中URI不支持特殊字符解决方案.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png","content":"<p>【<strong>前情提要</strong>】最近开发过程中遇到一个<code>Tomcat</code>中<code>IllegalArgumentException</code>的报错，所以在这里记录一下。</p>\n<h1 id=\"壹、错误现象\"><a href=\"#壹、错误现象\" class=\"headerlink\" title=\"壹、错误现象\"></a>壹、错误现象</h1><p>在用Get请求是当URL中包含特殊字符，比如：<code>&lt;</code>、<code>&gt;</code>、<code>(</code>、<code>)</code>、<code>&#123;</code>、<code>&#125;</code>、<code>|</code>等时，Tomcat会报出以下错误：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.lang.IllegalArgumentException: Invalid character found in the request target. The valid characters are defined in RFC 7230 and RFC 3986</span><br><span class=\"line\">    at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:476) ~[tomcat-embed-core-8.5.28.jar:8.5.28]</span><br><span class=\"line\">    at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:687) ~[tomcat-embed-core-8.5.28.jar:8.5.28]</span><br><span class=\"line\">    at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.28.jar:8.5.28]</span><br><span class=\"line\">    at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.28.jar:8.5.28]</span><br><span class=\"line\">    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.28.jar:8.5.28]</span><br><span class=\"line\">    at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.28.jar:8.5.28]</span><br><span class=\"line\">    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_161]</span><br><span class=\"line\">    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_161]</span><br><span class=\"line\">    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.28.jar:8.5.28]</span><br><span class=\"line\">    at java.lang.Thread.run(Thread.java:748) [na:1.8.0_161]</span><br></pre></td></tr></table></figure>\n<h1 id=\"贰、故障原因\"><a href=\"#贰、故障原因\" class=\"headerlink\" title=\"贰、故障原因\"></a>贰、故障原因</h1><p>因为Tomcat严格按照 RFC 3986规范进行访问解析，而 RFC 3986规范定义了Url中只允许包含英文字母（a-zA-Z）、数字（0-9）、-_.~4个特殊字符以及所有保留字符(RFC3986中指定了以下字符为保留字符：! * ’ ( ) ; : @ &amp; = + $ , / ? # [ ])。传入的参数中有”{“不在RFC3986中的保留字段中，所以会报参数异常错。而且这个错误你在应用中处理不到，因为根本都还没有进入应用，在Tomcat中就已经报错了，而且就连你在Tomcat中配置错误页面也没有用。</p>\n<h1 id=\"叁、解决方案\"><a href=\"#叁、解决方案\" class=\"headerlink\" title=\"叁、解决方案\"></a>叁、解决方案</h1><h2 id=\"3-1、定义requestTargetAllow属性\"><a href=\"#3-1、定义requestTargetAllow属性\" class=\"headerlink\" title=\"3.1、定义requestTargetAllow属性\"></a>3.1、定义requestTargetAllow属性</h2><p>Tomcat 7.0.76, 8.0.42, 8.5.12 这些版本之后可以定义requestTargetAllow 属性来允许禁止的字符。在tomcat的 catalina.properties文件中添加这一句：</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">tomcat.util.http.parser.HttpParser.requestTargetAllow</span>=<span class=\"string\">|&#123;&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-2、修复server-xml配置文件\"><a href=\"#3-2、修复server-xml配置文件\" class=\"headerlink\" title=\"3.2、修复server.xml配置文件\"></a>3.2、修复server.xml配置文件</h2><p>如果某些版本的Tomcat已经参照<code>3.1</code>中的方法修改之后，还是不生效的话。从官网的文档中我们可以查看到如下提示：tomcat.util.http.parser.HttpParser. requestTargetAllow(This system property is deprecated. Use the relaxedPathChars and relaxedQueryChars attributes of the Connector instead)</p>\n<p>所有我们在Tomcat配置文件中：$CATALINA_HOME/conf/server.xml添加<code>relaxedQueryChars</code>属性添加到Connector元素：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">&quot;8080&quot;</span> <span class=\"attr\">protocol</span>=<span class=\"string\">&quot;HTTP/1.1&quot;</span> <span class=\"attr\">connectionTimeout</span>=<span class=\"string\">&quot;20000&quot;</span> <span class=\"attr\">URIEncoding</span>=<span class=\"string\">&quot;UTF-8&quot;</span> <span class=\"attr\">relaxedQueryChars</span>=<span class=\"string\">&quot;[]|&#123;&#125;^<span class=\"symbol\">&amp;#x5c;</span><span class=\"symbol\">&amp;#x60;</span><span class=\"symbol\">&amp;quot;</span><span class=\"symbol\">&amp;lt;</span><span class=\"symbol\">&amp;gt;</span>&quot;</span> <span class=\"attr\">redirectPort</span>=<span class=\"string\">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-3、Springboot修改方法\"><a href=\"#3-3、Springboot修改方法\" class=\"headerlink\" title=\"3.3、Springboot修改方法\"></a>3.3、Springboot修改方法</h2><p>在SpringBootApplication的的main方法中增加</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.setProperty(<span class=\"string\">&quot;tomcat.util.http.parser.HttpParser.requestTargetAllow&quot;</span>,<span class=\"string\">&quot;|&#123;&#125;&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>另外在Springboot 2.0 之后的版本，可以自定义<code>WebServerFactoryCustomizer</code>，添加特殊字符的支持：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.web.server.WebServerFactoryCustomizer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created on 2019/2/18 17:41.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Ethan</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;p&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * java.lang.IllegalArgumentException:</span></span><br><span class=\"line\"><span class=\"comment\"> *  Invalid character found in the request target. The valid characters are defined in RFC 7230 and RFC 3986.</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PortalTomcatWebServerCustomizer</span> <span class=\"keyword\">implements</span> <span class=\"title\">WebServerFactoryCustomizer</span>&lt;<span class=\"title\">TomcatServletWebServerFactory</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">customize</span><span class=\"params\">(TomcatServletWebServerFactory factory)</span> </span>&#123;</span><br><span class=\"line\">        factory.addConnectorCustomizers(connector -&gt; connector.setAttribute(<span class=\"string\">&quot;relaxedQueryChars&quot;</span>, <span class=\"string\">&quot;&#123;&#125;[]|&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"java","path":"api/categories/java.json"}],"tags":[{"name":"java","path":"api/tags/java.json"},{"name":"springboot","path":"api/tags/springboot.json"},{"name":"tomcat","path":"api/tags/tomcat.json"}]},{"title":"双仓库同步代码","slug":"双仓库同步代码","date":"2020-04-30T07:36:38.000Z","updated":"2021-04-19T06:44:39.223Z","comments":true,"path":"api/articles/双仓库同步代码.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/202004301-c3fd0726d60e4564baf69f2f541e53e3.png","content":"<p>【<strong>前情提要</strong>】在最近的工作中，涉及到把一份代码同时上传到两个git仓库，下面是简单的记录。</p>\n<hr>\n<h1 id=\"壹、准备工作\"><a href=\"#壹、准备工作\" class=\"headerlink\" title=\"壹、准备工作\"></a>壹、准备工作</h1><p>分别在Github和Gitee平台上配置SSH公钥，便于使用git协议拉取和提交推送代码的时候需要输入密码。 </p>\n<h1 id=\"贰、拉取代码\"><a href=\"#贰、拉取代码\" class=\"headerlink\" title=\"贰、拉取代码\"></a>贰、拉取代码</h1><p>我这里以我的<a href=\"git@github.com:eelve/fly.git\">git@github.com:eelve/fly.git</a>仓库为示例来说明。使用工具或者命令拉取<a href=\"git@github.com:eelve/fly.git\">git@github.com:eelve/fly.git</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> git@github.com:eelve/fly.git</span><br></pre></td></tr></table></figure>\n<h1 id=\"叁、修改配置文件\"><a href=\"#叁、修改配置文件\" class=\"headerlink\" title=\"叁、修改配置文件\"></a>叁、修改配置文件</h1><p>进入拉取的仓库文件夹下，找到<code>.git</code>的隐藏文件夹，打开<code>config</code>文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[core]</span><br><span class=\"line\">\trepositoryformatversion = 0</span><br><span class=\"line\">\tfilemode = <span class=\"literal\">false</span></span><br><span class=\"line\">\tbare = <span class=\"literal\">false</span></span><br><span class=\"line\">\tlogallrefupdates = <span class=\"literal\">true</span></span><br><span class=\"line\">\tsymlinks = <span class=\"literal\">false</span></span><br><span class=\"line\">\tignorecase = <span class=\"literal\">true</span></span><br><span class=\"line\">[submodule]</span><br><span class=\"line\">\tactive = .</span><br><span class=\"line\">[remote <span class=\"string\">&quot;origin&quot;</span>]</span><br><span class=\"line\">\turl = git@github.com:eelve/fly.git</span><br><span class=\"line\">\tfetch = +refs/heads/*:refs/remotes/origin/*</span><br><span class=\"line\">[branch <span class=\"string\">&quot;master&quot;</span>]</span><br><span class=\"line\">\tremote = origin</span><br><span class=\"line\">\tmerge = refs/heads/master</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>修改成如下配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[core]</span><br><span class=\"line\">\trepositoryformatversion = 0</span><br><span class=\"line\">\tfilemode = <span class=\"literal\">false</span></span><br><span class=\"line\">\tbare = <span class=\"literal\">false</span></span><br><span class=\"line\">\tlogallrefupdates = <span class=\"literal\">true</span></span><br><span class=\"line\">\tsymlinks = <span class=\"literal\">false</span></span><br><span class=\"line\">\tignorecase = <span class=\"literal\">true</span></span><br><span class=\"line\">[submodule]</span><br><span class=\"line\">\tactive = .</span><br><span class=\"line\">[remote <span class=\"string\">&quot;origin&quot;</span>]</span><br><span class=\"line\">\turl = git@github.com:eelve/fly.git</span><br><span class=\"line\">\tfetch = +refs/heads/*:refs/remotes/origin/*</span><br><span class=\"line\">\turl = git@gitee.com:eelve/fly.git</span><br><span class=\"line\">[branch <span class=\"string\">&quot;master&quot;</span>]</span><br><span class=\"line\">\tremote = origin</span><br><span class=\"line\">\tmerge = refs/heads/master</span><br><span class=\"line\">[remote <span class=\"string\">&quot;gitee&quot;</span>]</span><br><span class=\"line\">\turl = git@gitee.com:eelve/fly.git</span><br><span class=\"line\">\tfetch = +refs/heads/*:refs/remotes/github/*</span><br></pre></td></tr></table></figure>\n<p>添加一个remote远程仓库，并添加远程仓库地址，修改的部分如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url = git@gitee.com:eelve/fly.git</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[remote <span class=\"string\">&quot;gitee&quot;</span>]</span><br><span class=\"line\">\turl = git@gitee.com:eelve/fly.git</span><br><span class=\"line\">\tfetch = +refs/heads/*:refs/remotes/github/*</span><br></pre></td></tr></table></figure>\n<h1 id=\"肆、推送测试\"><a href=\"#肆、推送测试\" class=\"headerlink\" title=\"肆、推送测试\"></a>肆、推送测试</h1><p>使用其他工具或者执行<code>git push</code>命令推送，我这里没有其他分支我这里就省略了分支名称等等</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n<p>然后查看gitee上面的仓库，可以看到，就已经成功推送上去了。</p>\n<p><img src=\"https://image.eelve.com/eblog/202004301-c3fd0726d60e4564baf69f2f541e53e3.png\" alt=\"202004301\"><br><img src=\"https://image.eelve.com/eblog/202004302-b29f20125242462faf4dee47d0b7d8a0.png\" alt=\"202004302\"></p>\n<hr>\n<p>【<strong>后面的话</strong>】完成上述工作之后，就能够做到一次推送，两个仓库都有代码了。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"git","path":"api/categories/git.json"}],"tags":[{"name":"git","path":"api/tags/git.json"}]},{"title":"SpringBoot打可执行war包","slug":"springboot-war","date":"2020-04-29T06:23:21.000Z","updated":"2021-04-19T06:44:39.199Z","comments":true,"path":"api/articles/springboot-war.json","excerpt":null,"keywords":"南国薏米","cover":"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png","content":"<p>【<strong>前情提要</strong>】最近做了一个Springboot项目，但是最后需要打成WAR包在容器中部署，下面就简单记录一下。</p>\n<hr>\n<h1 id=\"壹、修改pom文件\"><a href=\"#壹、修改pom文件\" class=\"headerlink\" title=\"壹、修改pom文件\"></a>壹、修改pom文件</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.eelve<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springboot-war<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 打包方式 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>war<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2.6.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">relativePath</span>/&gt;</span> <span class=\"comment\">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- 嵌入式tomcat相关jar将被放入到WEB-INF\\lib-provided下 --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 打包插件 --&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"贰、修改启动类\"><a href=\"#贰、修改启动类\" class=\"headerlink\" title=\"贰、修改启动类\"></a>贰、修改启动类</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.eelve.springboot.war;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.web.support.SpringBootServletInitializer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringbootWarApplication</span> <span class=\"keyword\">extends</span> <span class=\"title\">SpringBootServletInitializer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> SpringApplicationBuilder <span class=\"title\">configure</span><span class=\"params\">(SpringApplicationBuilder application)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> application.sources(SpringbootWarApplication.class);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tSpringApplication.run(SpringbootWarApplication.class, args);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<hr>\n<p>【<strong>后面的话</strong>】使用maven打包(clean package)，生成的war包可以用于传统的部署方式（外部tomcat），也可以直接使用java -jar 的方式运行。</p>\n<hr>\n<p><img src=\"https://image.eelve.com/eblog/eblog-b269767ff45b4e01a1c380e38898c1c0.png\" alt=\"薏米笔记\"></p>\n","raw":null,"categories":[{"name":"springboot","path":"api/categories/springboot.json"}],"tags":[{"name":"java","path":"api/tags/java.json"},{"name":"springboot","path":"api/tags/springboot.json"},{"name":"jar","path":"api/tags/jar.json"}]}]}